<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="java-machine-learning"><sessioninfo id="DESKTOP-3F0SSFQ-699a09c5" start="1639943496398" dump="1639943506281"/><sessioninfo id="DESKTOP-3F0SSFQ-3f551017" start="1639944372535" dump="1639944382804"/><sessioninfo id="DESKTOP-3F0SSFQ-8ac64dee" start="1639944773871" dump="1639944784523"/><sessioninfo id="DESKTOP-3F0SSFQ-b94d9848" start="1639944992360" dump="1639945002896"/><sessioninfo id="DESKTOP-3F0SSFQ-bd37bd91" start="1639946137774" dump="1639946148579"/><sessioninfo id="DESKTOP-3F0SSFQ-bbe3e05e" start="1639946231391" dump="1639946242844"/><sessioninfo id="DESKTOP-3F0SSFQ-cda934b1" start="1639946255342" dump="1639946266143"/><sessioninfo id="DESKTOP-3F0SSFQ-a4f226e3" start="1639946283855" dump="1639946294391"/><sessioninfo id="DESKTOP-3F0SSFQ-c686432a" start="1639946321774" dump="1639946333370"/><sessioninfo id="DESKTOP-3F0SSFQ-90ed809b" start="1639946366846" dump="1639946377708"/><sessioninfo id="DESKTOP-3F0SSFQ-18c5f54" start="1639946759191" dump="1639946769940"/><sessioninfo id="DESKTOP-3F0SSFQ-9b110f9b" start="1639946802041" dump="1639946812537"/><sessioninfo id="DESKTOP-3F0SSFQ-5a4000e2" start="1639946965376" dump="1639946975364"/><sessioninfo id="DESKTOP-3F0SSFQ-f870fdc3" start="1639947015109" dump="1639947026015"/><sessioninfo id="DESKTOP-3F0SSFQ-d5c3551e" start="1639947185042" dump="1639947195727"/><sessioninfo id="DESKTOP-3F0SSFQ-39c173b5" start="1639947259678" dump="1639947269323"/><sessioninfo id="DESKTOP-3F0SSFQ-92cccebf" start="1639947342622" dump="1639947353990"/><sessioninfo id="DESKTOP-3F0SSFQ-ff22480" start="1639947453947" dump="1639947464375"/><sessioninfo id="DESKTOP-3F0SSFQ-b458fbb9" start="1639947502470" dump="1639947513647"/><sessioninfo id="DESKTOP-3F0SSFQ-a6c7b04c" start="1639947574210" dump="1639947584731"/><sessioninfo id="DESKTOP-3F0SSFQ-dfeba5b8" start="1639948275188" dump="1639948284975"/><sessioninfo id="DESKTOP-3F0SSFQ-30b7a29" start="1639948329279" dump="1639948339983"/><sessioninfo id="DESKTOP-3F0SSFQ-c80abd6" start="1639949139064" dump="1639949150290"/><sessioninfo id="DESKTOP-3F0SSFQ-208b24ef" start="1640555420917" dump="1640555430714"/><sessioninfo id="DESKTOP-3F0SSFQ-fe85bb10" start="1640558325626" dump="1640558336144"/><sessioninfo id="DESKTOP-3F0SSFQ-93a505fb" start="1640558615967" dump="1640558625934"/><sessioninfo id="DESKTOP-3F0SSFQ-1451cb5b" start="1640558723514" dump="1640558734269"/><sessioninfo id="DESKTOP-3F0SSFQ-3686abc1" start="1640559233460" dump="1640559243655"/><sessioninfo id="DESKTOP-3F0SSFQ-4c438d19" start="1640559266372" dump="1640559276665"/><sessioninfo id="DESKTOP-3F0SSFQ-1e579798" start="1640559338227" dump="1640559348464"/><sessioninfo id="DESKTOP-3F0SSFQ-43f8482" start="1640559466272" dump="1640559476094"/><sessioninfo id="DESKTOP-3F0SSFQ-f828ef2c" start="1640559591255" dump="1640559601705"/><sessioninfo id="DESKTOP-3F0SSFQ-b761389" start="1640559787304" dump="1640559797503"/><sessioninfo id="DESKTOP-3F0SSFQ-7ca54794" start="1640559812617" dump="1640559823327"/><sessioninfo id="DESKTOP-3F0SSFQ-16cceaa" start="1640559851832" dump="1640559862395"/><sessioninfo id="DESKTOP-3F0SSFQ-60695d2a" start="1640559901249" dump="1640559911473"/><sessioninfo id="DESKTOP-3F0SSFQ-d5f0442f" start="1640559921403" dump="1640559931989"/><sessioninfo id="DESKTOP-3F0SSFQ-3647dff9" start="1640560041686" dump="1640560051796"/><sessioninfo id="DESKTOP-3F0SSFQ-cf56ba" start="1640560134278" dump="1640560144361"/><sessioninfo id="DESKTOP-3F0SSFQ-ab7c3e65" start="1640560227064" dump="1640560237011"/><sessioninfo id="DESKTOP-3F0SSFQ-63501b2" start="1640560280459" dump="1640560290269"/><sessioninfo id="DESKTOP-3F0SSFQ-c4778e66" start="1640560306345" dump="1640560316169"/><sessioninfo id="DESKTOP-3F0SSFQ-560fa0a5" start="1640561065712" dump="1640561075925"/><sessioninfo id="DESKTOP-3F0SSFQ-82d0a512" start="1640561216409" dump="1640561226212"/><sessioninfo id="DESKTOP-3F0SSFQ-a342b3b" start="1640561280657" dump="1640561290333"/><sessioninfo id="DESKTOP-3F0SSFQ-ebaace21" start="1640561336872" dump="1640561347670"/><sessioninfo id="DESKTOP-3F0SSFQ-f40c0e3c" start="1640561492423" dump="1640561503185"/><sessioninfo id="DESKTOP-3F0SSFQ-851a7139" start="1640562139463" dump="1640562150098"/><sessioninfo id="DESKTOP-3F0SSFQ-74d20f7a" start="1640562546682" dump="1640562551801"/><sessioninfo id="DESKTOP-3F0SSFQ-558c28c4" start="1640562615689" dump="1640562621214"/><sessioninfo id="DESKTOP-3F0SSFQ-7c72416d" start="1640562681872" dump="1640562686987"/><sessioninfo id="DESKTOP-3F0SSFQ-9eec0c7d" start="1640562794065" dump="1640562799300"/><sessioninfo id="DESKTOP-3F0SSFQ-53fb9c0d" start="1640562829032" dump="1640562834097"/><sessioninfo id="DESKTOP-3F0SSFQ-43e16c99" start="1640562907917" dump="1640562912994"/><sessioninfo id="DESKTOP-3F0SSFQ-3d41012b" start="1640562969221" dump="1640562974456"/><sessioninfo id="DESKTOP-3F0SSFQ-143b084b" start="1640563017208" dump="1640563022342"/><sessioninfo id="DESKTOP-3F0SSFQ-2575b579" start="1640563314714" dump="1640563319703"/><sessioninfo id="DESKTOP-3F0SSFQ-f602b3d9" start="1640563562272" dump="1640563567474"/><sessioninfo id="DESKTOP-3F0SSFQ-c3d61b62" start="1640563604334" dump="1640563609865"/><sessioninfo id="DESKTOP-3F0SSFQ-ae1af4ca" start="1640563673302" dump="1640563678532"/><sessioninfo id="DESKTOP-3F0SSFQ-e7373ede" start="1640563919569" dump="1640563924399"/><sessioninfo id="DESKTOP-3F0SSFQ-c168bff2" start="1640564135356" dump="1640564140275"/><sessioninfo id="DESKTOP-3F0SSFQ-4771041c" start="1640751370365" dump="1640751381551"/><sessioninfo id="DESKTOP-3F0SSFQ-8a17c80a" start="1641688740510" dump="1641688751163"/><sessioninfo id="DESKTOP-3F0SSFQ-25b799e5" start="1641688872361" dump="1641688883016"/><sessioninfo id="DESKTOP-3F0SSFQ-4bbbbd3" start="1641688985970" dump="1641688996671"/><sessioninfo id="DESKTOP-3F0SSFQ-96567ce3" start="1642280784319" dump="1642280794623"/><sessioninfo id="DESKTOP-3F0SSFQ-18ffa8ff" start="1642281348258" dump="1642281357621"/><sessioninfo id="DESKTOP-3F0SSFQ-6dca4220" start="1642281376397" dump="1642281385582"/><sessioninfo id="DESKTOP-3F0SSFQ-2e8038a0" start="1642281499685" dump="1642281509519"/><sessioninfo id="DESKTOP-3F0SSFQ-360ef9ee" start="1642281583735" dump="1642281593288"/><sessioninfo id="DESKTOP-3F0SSFQ-30320e2c" start="1642281623359" dump="1642281637155"/><sessioninfo id="DESKTOP-3F0SSFQ-395e680c" start="1642281630226" dump="1642281641656"/><sessioninfo id="DESKTOP-3F0SSFQ-d722e4df" start="1642281797034" dump="1642281807416"/><sessioninfo id="DESKTOP-3F0SSFQ-ecd4d20" start="1642281984528" dump="1642281995528"/><sessioninfo id="DESKTOP-3F0SSFQ-2dfee41d" start="1642282027844" dump="1642282037763"/><sessioninfo id="DESKTOP-3F0SSFQ-53bfd7dc" start="1642282684884" dump="1642282694774"/><sessioninfo id="DESKTOP-3F0SSFQ-271bd58" start="1642282865828" dump="1642282867541"/><sessioninfo id="DESKTOP-3F0SSFQ-30ff28da" start="1642282890318" dump="1642282892000"/><sessioninfo id="DESKTOP-3F0SSFQ-1af8cd20" start="1642282935312" dump="1642282936880"/><sessioninfo id="DESKTOP-3F0SSFQ-2eb526f0" start="1642282958450" dump="1642282960611"/><sessioninfo id="DESKTOP-3F0SSFQ-f87bbdc0" start="1642282995831" dump="1642283002272"/><sessioninfo id="Jacobs-MacBook-Pro.local-63eb168e" start="1642531405998" dump="1642531422848"/><sessioninfo id="Jacobs-MacBook-Pro.local-374ad205" start="1642710918047" dump="1642710929404"/><sessioninfo id="Jacobs-MacBook-Pro.local-267bf799" start="1642710950515" dump="1642710960637"/><sessioninfo id="Jacobs-MacBook-Pro.local-2a46ced6" start="1642711062076" dump="1642711071726"/><sessioninfo id="Jacobs-MacBook-Pro.local-ef2a293d" start="1642711138218" dump="1642711147024"/><sessioninfo id="Jacobs-MacBook-Pro.local-eaccc73f" start="1642711223291" dump="1642711232572"/><sessioninfo id="Jacobs-MacBook-Pro.local-f4044437" start="1642711323655" dump="1642711332934"/><sessioninfo id="Jacobs-MacBook-Pro.local-884f3ae6" start="1642711573518" dump="1642711589723"/><sessioninfo id="Jacobs-MacBook-Pro.local-1cd3d3f" start="1642711660186" dump="1642711676378"/><sessioninfo id="Jacobs-MacBook-Pro.local-c8a2050a" start="1642711713852" dump="1642711725496"/><sessioninfo id="Jacobs-MacBook-Pro.local-1e304e27" start="1642711769599" dump="1642711784932"/><sessioninfo id="Jacobs-MacBook-Pro.local-26ef17bb" start="1642711972154" dump="1642711987331"/><sessioninfo id="Jacobs-MacBook-Pro.local-a529ed58" start="1642712028830" dump="1642712045735"/><sessioninfo id="DESKTOP-3F0SSFQ-9d7a8e23" start="1642797492029" dump="1642797497978"/><sessioninfo id="DESKTOP-3F0SSFQ-1dcbf96a" start="1642798223479" dump="1642798230003"/><sessioninfo id="DESKTOP-3F0SSFQ-400894f6" start="1642808044016" dump="1642808050938"/><sessioninfo id="DESKTOP-3F0SSFQ-bbe0441e" start="1642809448783" dump="1642809456018"/><sessioninfo id="DESKTOP-3F0SSFQ-ef376c7a" start="1642809779017" dump="1642809785732"/><sessioninfo id="DESKTOP-3F0SSFQ-e8282d4f" start="1642809974214" dump="1642809980545"/><sessioninfo id="DESKTOP-3F0SSFQ-c2223794" start="1642811684441" dump="1642811690492"/><sessioninfo id="DESKTOP-3F0SSFQ-4d669b1c" start="1642811788285" dump="1642811794686"/><sessioninfo id="DESKTOP-3F0SSFQ-7fd28bd1" start="1642820791023" dump="1642820797846"/><sessioninfo id="DESKTOP-3F0SSFQ-31c5b7c9" start="1642820961662" dump="1642820967862"/><sessioninfo id="DESKTOP-3F0SSFQ-f1f6ce25" start="1642821670600" dump="1642821677017"/><sessioninfo id="DESKTOP-3F0SSFQ-7e27fcde" start="1642821738840" dump="1642821745324"/><sessioninfo id="DESKTOP-3F0SSFQ-cb58144e" start="1642821903347" dump="1642821909574"/><sessioninfo id="DESKTOP-3F0SSFQ-82b0068f" start="1642822061162" dump="1642822067719"/><sessioninfo id="DESKTOP-3F0SSFQ-2f31d89b" start="1642878689499" dump="1642878696089"/><sessioninfo id="DESKTOP-3F0SSFQ-b637cb25" start="1642878865824" dump="1642878872255"/><sessioninfo id="DESKTOP-3F0SSFQ-5e6062d7" start="1642879144868" dump="1642879151560"/><sessioninfo id="DESKTOP-3F0SSFQ-204f0873" start="1642879253550" dump="1642879260017"/><sessioninfo id="DESKTOP-3F0SSFQ-c49458a5" start="1642879441215" dump="1642879447821"/><sessioninfo id="DESKTOP-3F0SSFQ-a49b77ea" start="1642881479557" dump="1642881486114"/><sessioninfo id="DESKTOP-3F0SSFQ-31b245a0" start="1642881549965" dump="1642881556712"/><sessioninfo id="DESKTOP-3F0SSFQ-add4a27" start="1642881580962" dump="1642881583255"/><sessioninfo id="DESKTOP-3F0SSFQ-b0330d9" start="1642881712572" dump="1642881721716"/><sessioninfo id="DESKTOP-3F0SSFQ-a5b31f4" start="1642881714757" dump="1642881722779"/><sessioninfo id="DESKTOP-3F0SSFQ-6231b286" start="1642881736218" dump="1642881742596"/><sessioninfo id="DESKTOP-3F0SSFQ-dd8e92fa" start="1642886975137" dump="1642886981903"/><sessioninfo id="DESKTOP-3F0SSFQ-af84050f" start="1642887107061" dump="1642887114064"/><sessioninfo id="DESKTOP-3F0SSFQ-d9ca839a" start="1642888990745" dump="1642888997208"/><sessioninfo id="DESKTOP-3F0SSFQ-c9a9facb" start="1642973650913" dump="1642973658175"/><sessioninfo id="DESKTOP-3F0SSFQ-9200842e" start="1642974052042" dump="1642974059704"/><sessioninfo id="DESKTOP-3F0SSFQ-1c6591f3" start="1642974068460" dump="1642974076129"/><sessioninfo id="DESKTOP-3F0SSFQ-8e7a04d1" start="1643000552679" dump="1643000612165"/><sessioninfo id="DESKTOP-3F0SSFQ-1192a4c1" start="1643000815866" dump="1643000875056"/><sessioninfo id="DESKTOP-3F0SSFQ-52d6ec97" start="1643001172525" dump="1643001188728"/><sessioninfo id="DESKTOP-3F0SSFQ-ccd20e3" start="1643003381338" dump="1643003384947"/><sessioninfo id="DESKTOP-3F0SSFQ-2067053c" start="1643076194562" dump="1643076198783"/><sessioninfo id="DESKTOP-3F0SSFQ-2c7914d6" start="1643076223798" dump="1643076227381"/><sessioninfo id="DESKTOP-3F0SSFQ-172827fc" start="1643076281597" dump="1643076285251"/><sessioninfo id="DESKTOP-3F0SSFQ-cd6e057b" start="1643076353363" dump="1643076356866"/><sessioninfo id="DESKTOP-3F0SSFQ-2d64ac05" start="1643076586249" dump="1643076589777"/><sessioninfo id="DESKTOP-3F0SSFQ-340e9347" start="1643081753558" dump="1643081774553"/><sessioninfo id="DESKTOP-3F0SSFQ-7360ba10" start="1643082620680" dump="1643082640810"/><sessioninfo id="DESKTOP-3F0SSFQ-9170e3dd" start="1643082833241" dump="1643082853607"/><sessioninfo id="DESKTOP-3F0SSFQ-81046aee" start="1643082860919" dump="1643082864473"/><sessioninfo id="DESKTOP-3F0SSFQ-f988e585" start="1643082942706" dump="1643082946411"/><sessioninfo id="DESKTOP-3F0SSFQ-7507feea" start="1643083323764" dump="1643083327672"/><sessioninfo id="DESKTOP-3F0SSFQ-b167a9e1" start="1643083645533" dump="1643083661393"/><sessioninfo id="DESKTOP-3F0SSFQ-71f862a" start="1643086153026" dump="1643086192574"/><sessioninfo id="DESKTOP-3F0SSFQ-6aaae449" start="1643086505329" dump="1643086521559"/><sessioninfo id="DESKTOP-3F0SSFQ-77ab3acd" start="1643086529332" dump="1643086533307"/><sessioninfo id="DESKTOP-3F0SSFQ-94315653" start="1643086606945" dump="1643086610751"/><sessioninfo id="DESKTOP-3F0SSFQ-3f0f6b4c" start="1643086635625" dump="1643086639472"/><sessioninfo id="DESKTOP-3F0SSFQ-96b595bd" start="1643164191974" dump="1643164205862"/><sessioninfo id="DESKTOP-3F0SSFQ-e3e7acab" start="1643164789905" dump="1643164793626"/><sessioninfo id="DESKTOP-3F0SSFQ-477b0c12" start="1643422930828" dump="1643422934403"/><sessioninfo id="DESKTOP-3F0SSFQ-5968bf01" start="1643423899963" dump="1643423903376"/><sessioninfo id="DESKTOP-3F0SSFQ-4004bd15" start="1643423964388" dump="1643423968069"/><sessioninfo id="DESKTOP-3F0SSFQ-69ee3e9a" start="1643424135565" dump="1643424139143"/><sessioninfo id="DESKTOP-3F0SSFQ-64598309" start="1643424284046" dump="1643424419930"/><sessioninfo id="DESKTOP-3F0SSFQ-918f54d3" start="1643424596794" dump="1643424600608"/><sessioninfo id="DESKTOP-3F0SSFQ-b994b998" start="1643424634553" dump="1643424638242"/><sessioninfo id="DESKTOP-3F0SSFQ-c5f012a" start="1643424685390" dump="1643424689017"/><sessioninfo id="DESKTOP-3F0SSFQ-1b8b6665" start="1643424804961" dump="1643424808923"/><sessioninfo id="DESKTOP-3F0SSFQ-18990dab" start="1643425128118" dump="1643425132317"/><sessioninfo id="DESKTOP-3F0SSFQ-b5f5bfcc" start="1643428608558" dump="1643428612458"/><sessioninfo id="DESKTOP-3F0SSFQ-f4465847" start="1643428635720" dump="1643428639696"/><sessioninfo id="DESKTOP-3F0SSFQ-8bb1bb19" start="1643428846053" dump="1643428849981"/><sessioninfo id="DESKTOP-3F0SSFQ-94b96e1b" start="1643429503377" dump="1643429507092"/><sessioninfo id="DESKTOP-3F0SSFQ-d5392819" start="1643429896637" dump="1643429900408"/><sessioninfo id="DESKTOP-3F0SSFQ-3a057b83" start="1643429986197" dump="1643429989914"/><sessioninfo id="DESKTOP-3F0SSFQ-4deeda4e" start="1643430041790" dump="1643430045385"/><sessioninfo id="DESKTOP-3F0SSFQ-6136300f" start="1643430142303" dump="1643430145987"/><sessioninfo id="DESKTOP-3F0SSFQ-3d949b76" start="1643430218569" dump="1643430222117"/><sessioninfo id="DESKTOP-3F0SSFQ-f8b5fede" start="1643430266716" dump="1643430270355"/><sessioninfo id="DESKTOP-3F0SSFQ-bbc44cac" start="1643430295642" dump="1643430299331"/><sessioninfo id="DESKTOP-3F0SSFQ-30e1ac62" start="1643430893765" dump="1643430900440"/><sessioninfo id="DESKTOP-3F0SSFQ-210324e8" start="1643432479558" dump="1643432483448"/><sessioninfo id="DESKTOP-3F0SSFQ-cd55ac8e" start="1643432814222" dump="1643432818046"/><sessioninfo id="DESKTOP-3F0SSFQ-4fec9b1" start="1643432907964" dump="1643432912803"/><sessioninfo id="DESKTOP-3F0SSFQ-a158b916" start="1643433079712" dump="1643433083439"/><sessioninfo id="DESKTOP-3F0SSFQ-baf5e8fc" start="1643488162267" dump="1643488165726"/><sessioninfo id="DESKTOP-3F0SSFQ-94385fe6" start="1643488312811" dump="1643488314630"/><sessioninfo id="DESKTOP-3F0SSFQ-2dfe730e" start="1643488333845" dump="1643488335399"/><sessioninfo id="DESKTOP-3F0SSFQ-26fad01a" start="1643488371711" dump="1643488375278"/><sessioninfo id="DESKTOP-3F0SSFQ-ac474dcd" start="1643488413439" dump="1643488414965"/><sessioninfo id="DESKTOP-3F0SSFQ-c9a8746c" start="1643488552114" dump="1643488574088"/><sessioninfo id="DESKTOP-3F0SSFQ-a8f51690" start="1643488635214" dump="1643488656359"/><sessioninfo id="DESKTOP-3F0SSFQ-fd2732c" start="1643488709536" dump="1643488713088"/><sessioninfo id="DESKTOP-3F0SSFQ-90d91d35" start="1643490410815" dump="1643490414318"/><sessioninfo id="DESKTOP-3F0SSFQ-7f6ddab5" start="1643494549143" dump="1643494553007"/><sessioninfo id="DESKTOP-3F0SSFQ-7990334d" start="1643592027641" dump="1643592031484"/><sessioninfo id="DESKTOP-3F0SSFQ-5467d5fe" start="1643609257780" dump="1643609261983"/><sessioninfo id="DESKTOP-3F0SSFQ-405ded0e" start="1643610315609" dump="1643610318741"/><sessioninfo id="DESKTOP-3F0SSFQ-ca03d491" start="1643610335357" dump="1643610338377"/><sessioninfo id="DESKTOP-3F0SSFQ-19743360" start="1643610349841" dump="1643610353060"/><sessioninfo id="DESKTOP-3F0SSFQ-a57bd643" start="1643610381924" dump="1643610385031"/><sessioninfo id="DESKTOP-3F0SSFQ-b8a7dcd4" start="1643610403968" dump="1643610407841"/><sessioninfo id="DESKTOP-3F0SSFQ-1be4f9a" start="1643610781073" dump="1643610784070"/><sessioninfo id="DESKTOP-3F0SSFQ-94d3f501" start="1643610826473" dump="1643610829704"/><sessioninfo id="DESKTOP-3F0SSFQ-5d2fde90" start="1643611003187" dump="1643611006818"/><sessioninfo id="DESKTOP-3F0SSFQ-96e93595" start="1643612066589" dump="1643612070359"/><sessioninfo id="DESKTOP-3F0SSFQ-782b49b3" start="1643612400047" dump="1643612401581"/><sessioninfo id="DESKTOP-3F0SSFQ-11e4005d" start="1643612436518" dump="1643612438213"/><sessioninfo id="DESKTOP-3F0SSFQ-bdcb921b" start="1643612519001" dump="1643612522550"/><sessioninfo id="DESKTOP-3F0SSFQ-7ea527dd" start="1643654470245" dump="1643654475200"/><sessioninfo id="DESKTOP-3F0SSFQ-d648ced5" start="1643655677875" dump="1643655681600"/><sessioninfo id="DESKTOP-3F0SSFQ-6f4ec899" start="1643655695386" dump="1643655699226"/><sessioninfo id="DESKTOP-3F0SSFQ-c04ac8e4" start="1643658041589" dump="1643658045318"/><sessioninfo id="DESKTOP-3F0SSFQ-6c8e3ee2" start="1643658346715" dump="1643658350658"/><sessioninfo id="DESKTOP-3F0SSFQ-3664785b" start="1643658602983" dump="1643658607968"/><sessioninfo id="DESKTOP-3F0SSFQ-afb7df82" start="1643658891427" dump="1643658893126"/><sessioninfo id="DESKTOP-3F0SSFQ-867d35f8" start="1643658959577" dump="1643658961257"/><sessioninfo id="DESKTOP-3F0SSFQ-e9092321" start="1643658974086" dump="1643658977921"/><sessioninfo id="DESKTOP-3F0SSFQ-32232231" start="1643659741617" dump="1643659745428"/><sessioninfo id="DESKTOP-3F0SSFQ-3bf729d5" start="1643659891067" dump="1643659895448"/><sessioninfo id="DESKTOP-3F0SSFQ-cac6ec56" start="1643660095531" dump="1643660099714"/><sessioninfo id="DESKTOP-3F0SSFQ-ea00fa0b" start="1643660144329" dump="1643660148362"/><sessioninfo id="DESKTOP-3F0SSFQ-ae31bf70" start="1643660221792" dump="1643660225530"/><sessioninfo id="DESKTOP-3F0SSFQ-a229a54b" start="1643660334566" dump="1643660338353"/><sessioninfo id="DESKTOP-3F0SSFQ-2da62a5" start="1643661036601" dump="1643661040366"/><sessioninfo id="DESKTOP-3F0SSFQ-83326a33" start="1643662696259" dump="1643662700429"/><sessioninfo id="DESKTOP-3F0SSFQ-1ff56ee8" start="1643665226897" dump="1643665231551"/><sessioninfo id="DESKTOP-3F0SSFQ-6cff955b" start="1643679267740" dump="1643679271570"/><sessioninfo id="DESKTOP-3F0SSFQ-d8d7a581" start="1643679300331" dump="1643679304095"/><sessioninfo id="DESKTOP-3F0SSFQ-2e60fe21" start="1643750480244" dump="1643750484696"/><sessioninfo id="DESKTOP-3F0SSFQ-ed21c7b2" start="1643750764891" dump="1643750768795"/><sessioninfo id="DESKTOP-3F0SSFQ-521db17f" start="1643752409247" dump="1643752413843"/><sessioninfo id="DESKTOP-3F0SSFQ-5da101c4" start="1643752559495" dump="1643752564262"/><sessioninfo id="DESKTOP-3F0SSFQ-9980f105" start="1643752642459" dump="1643752646155"/><sessioninfo id="DESKTOP-3F0SSFQ-8c14581a" start="1643752673378" dump="1643752677076"/><sessioninfo id="DESKTOP-3F0SSFQ-e704b49f" start="1643752873132" dump="1643752877001"/><sessioninfo id="DESKTOP-3F0SSFQ-32c6c58e" start="1643752918246" dump="1643752922115"/><sessioninfo id="DESKTOP-3F0SSFQ-75ff6419" start="1643850796710" dump="1643850798684"/><sessioninfo id="DESKTOP-3F0SSFQ-9a594278" start="1643850817786" dump="1643850819705"/><sessioninfo id="DESKTOP-3F0SSFQ-7b591ef" start="1643850882685" dump="1643850884853"/><sessioninfo id="DESKTOP-3F0SSFQ-8b24afa3" start="1643850951983" dump="1643850955798"/><sessioninfo id="DESKTOP-3F0SSFQ-e348a666" start="1643862214332" dump="1643862217884"/><sessioninfo id="DESKTOP-3F0SSFQ-2060ac38" start="1643863907415" dump="1643863911460"/><sessioninfo id="DESKTOP-3F0SSFQ-5a9e49e3" start="1643864003321" dump="1643864007708"/><sessioninfo id="DESKTOP-3F0SSFQ-aedfeb9c" start="1643864532133" dump="1643864536355"/><sessioninfo id="DESKTOP-3F0SSFQ-b26788ee" start="1643864596768" dump="1643864601079"/><sessioninfo id="DESKTOP-3F0SSFQ-82915e18" start="1643865483289" dump="1643865487360"/><sessioninfo id="DESKTOP-3F0SSFQ-d3d687c9" start="1643865772856" dump="1643865777485"/><sessioninfo id="DESKTOP-3F0SSFQ-f44fb6df" start="1643867173824" dump="1643867177185"/><sessioninfo id="DESKTOP-3F0SSFQ-625ad50a" start="1643867195666" dump="1643867199725"/><sessioninfo id="DESKTOP-3F0SSFQ-d4952889" start="1643867319822" dump="1643867323191"/><sessioninfo id="DESKTOP-3F0SSFQ-cb59aae0" start="1643867331432" dump="1643867334686"/><sessioninfo id="DESKTOP-3F0SSFQ-f7b08f69" start="1643867342919" dump="1643867346475"/><sessioninfo id="DESKTOP-3F0SSFQ-85647d1e" start="1643867425801" dump="1643867429322"/><sessioninfo id="DESKTOP-3F0SSFQ-b5610ddf" start="1643867556595" dump="1643867560634"/><sessioninfo id="DESKTOP-3F0SSFQ-6c0db143" start="1643867588910" dump="1643867592678"/><sessioninfo id="DESKTOP-3F0SSFQ-7d965c32" start="1643867699104" dump="1643867703547"/><sessioninfo id="DESKTOP-3F0SSFQ-a5c75474" start="1643868603933" dump="1643868607848"/><sessioninfo id="DESKTOP-3F0SSFQ-6b65728" start="1643869285218" dump="1643869289063"/><sessioninfo id="DESKTOP-3F0SSFQ-4ace32ea" start="1643869505598" dump="1643869509276"/><sessioninfo id="DESKTOP-3F0SSFQ-37303f3e" start="1643869538176" dump="1643869541791"/><sessioninfo id="DESKTOP-3F0SSFQ-e9ae413" start="1643871615920" dump="1643871620192"/><sessioninfo id="Jacobs-MacBook-Pro.local-75679814" start="1643910498151" dump="1643910507764"/><sessioninfo id="Jacobs-MacBook-Pro.local-19aac4b5" start="1643910526009" dump="1643910535486"/><sessioninfo id="Jacobs-MacBook-Pro.local-742d80bb" start="1643910655549" dump="1643910666517"/><sessioninfo id="Jacobs-MacBook-Pro.local-97355ff3" start="1643910682275" dump="1643910692435"/><sessioninfo id="Jacobs-MacBook-Pro.local-146bda94" start="1643910844851" dump="1643910857558"/><sessioninfo id="Jacobs-MacBook-Pro.local-78c239c5" start="1643910884440" dump="1643910901687"/><sessioninfo id="Jacobs-MacBook-Pro.local-7226372f" start="1643910968872" dump="1643910981519"/><sessioninfo id="Jacobs-MacBook-Pro.local-f84f1f1d" start="1643910997587" dump="1643911010439"/><sessioninfo id="Jacobs-MacBook-Pro.local-32323f5" start="1643911046120" dump="1643911058733"/><sessioninfo id="Jacobs-MacBook-Pro.local-d2b816f6" start="1643911127501" dump="1643911139849"/><sessioninfo id="Jacobs-MacBook-Pro.local-b1cad396" start="1643911640794" dump="1643911654273"/><sessioninfo id="Jacobs-MacBook-Pro.local-7249e385" start="1643913075257" dump="1643913082413"/><sessioninfo id="Jacobs-MacBook-Pro.local-12806b10" start="1643913171591" dump="1643913179252"/><sessioninfo id="Jacobs-MacBook-Pro.local-3d5577c3" start="1643913209357" dump="1643913221330"/><sessioninfo id="Jacobs-MacBook-Pro.local-a821f29f" start="1643913356413" dump="1643913369006"/><sessioninfo id="Jacobs-MacBook-Pro.local-c16be50a" start="1643913651263" dump="1643913658011"/><sessioninfo id="Jacobs-MacBook-Pro.local-a93e8a97" start="1643913686021" dump="1643913692855"/><sessioninfo id="Jacobs-MacBook-Pro.local-daa15add" start="1643913802456" dump="1643913809574"/><sessioninfo id="Jacobs-MacBook-Pro.local-d6871162" start="1643913916346" dump="1643913930692"/><sessioninfo id="Jacobs-MacBook-Pro.local-10df6f0d" start="1643913957949" dump="1643913972683"/><sessioninfo id="Jacobs-MacBook-Pro.local-803e7790" start="1643914151591" dump="1643914158822"/><sessioninfo id="Jacobs-MacBook-Pro.local-91cca932" start="1643914285184" dump="1643914292087"/><sessioninfo id="Jacobs-MacBook-Pro.local-d50aae0a" start="1643914929947" dump="1643914960078"/><sessioninfo id="Jacobs-MacBook-Pro.local-8d12e969" start="1643914940919" dump="1643914969045"/><sessioninfo id="Jacobs-MacBook-Pro.local-17ada689" start="1643915452420" dump="1643915458886"/><sessioninfo id="Jacobs-MacBook-Pro.local-6665aecc" start="1643915554911" dump="1643915561548"/><sessioninfo id="Jacobs-MacBook-Pro.local-494fc951" start="1643915648378" dump="1643915657385"/><sessioninfo id="Jacobs-MacBook-Pro.local-5e2f14" start="1643915741289" dump="1643915748931"/><sessioninfo id="Jacobs-MacBook-Pro.local-3fce72d2" start="1643915833792" dump="1643915844925"/><sessioninfo id="Jacobs-MacBook-Pro.local-8ef29c9d" start="1643916706523" dump="1643916713755"/><sessioninfo id="Jacobs-MacBook-Pro.local-36f66466" start="1643916755131" dump="1643916767107"/><sessioninfo id="Jacobs-MacBook-Pro.local-d63390a0" start="1643918038217" dump="1643918044714"/><sessioninfo id="Jacobs-MacBook-Pro.local-c452abdd" start="1643918153718" dump="1643918165422"/><sessioninfo id="Jacobs-MacBook-Pro.local-aa7cff74" start="1643918355670" dump="1643918367082"/><sessioninfo id="Jacobs-MacBook-Pro.local-f15c8dd3" start="1643918394399" dump="1643918406192"/><sessioninfo id="Jacobs-MacBook-Pro.local-57a944e2" start="1643923810645" dump="1643923822573"/><sessioninfo id="Jacobs-MacBook-Pro.local-9d2d25f0" start="1643923940045" dump="1643923951969"/><sessioninfo id="Jacobs-MacBook-Pro.local-3ba3b70f" start="1643924018867" dump="1643924031340"/><sessioninfo id="Jacobs-MacBook-Pro.local-868d3354" start="1643925235988" dump="1643925248891"/><sessioninfo id="Jacobs-MacBook-Pro.local-6ebffe49" start="1643925374663" dump="1643925385953"/><sessioninfo id="Jacobs-MBP-19682a9f" start="1643936766916" dump="1643936773298"/><sessioninfo id="Jacobs-MBP-13af7d2c" start="1643937382488" dump="1643937389430"/><sessioninfo id="DESKTOP-3F0SSFQ-ee387a57" start="1643941723069" dump="1643941728051"/><sessioninfo id="DESKTOP-3F0SSFQ-a73c5f5c" start="1643941747761" dump="1643941752810"/><sessioninfo id="DESKTOP-3F0SSFQ-90a5ab88" start="1643941813008" dump="1643941817308"/><sessioninfo id="DESKTOP-3F0SSFQ-66e69100" start="1643943390810" dump="1643943395460"/><sessioninfo id="DESKTOP-3F0SSFQ-f251109f" start="1643943510449" dump="1643943514923"/><sessioninfo id="DESKTOP-3F0SSFQ-5c115044" start="1644005496321" dump="1644005501615"/><sessioninfo id="DESKTOP-3F0SSFQ-b2213b02" start="1644005568656" dump="1644005573491"/><sessioninfo id="DESKTOP-3F0SSFQ-30f5eb0c" start="1644008484849" dump="1644008487235"/><sessioninfo id="DESKTOP-3F0SSFQ-62176f69" start="1644008512693" dump="1644008514925"/><sessioninfo id="DESKTOP-3F0SSFQ-7c2a2089" start="1644008566307" dump="1644008568515"/><sessioninfo id="DESKTOP-3F0SSFQ-3a1a2e76" start="1644008642532" dump="1644008645327"/><sessioninfo id="DESKTOP-3F0SSFQ-c7b5a602" start="1644017504946" dump="1644017507780"/><sessioninfo id="DESKTOP-3F0SSFQ-23d12ab9" start="1644017642829" dump="1644017645548"/><sessioninfo id="DESKTOP-3F0SSFQ-66fef11e" start="1644020175263" dump="1644020178165"/><sessioninfo id="DESKTOP-3F0SSFQ-aaf9356e" start="1644110458961" dump="1644110462600"/><sessioninfo id="DESKTOP-3F0SSFQ-f06e4790" start="1644113769239" dump="1644113772425"/><sessioninfo id="DESKTOP-3F0SSFQ-167d4176" start="1644113815204" dump="1644113818154"/><sessioninfo id="DESKTOP-3F0SSFQ-e423b2e2" start="1644114271925" dump="1644114274794"/><sessioninfo id="DESKTOP-3F0SSFQ-6df73529" start="1644114333797" dump="1644114336783"/><sessioninfo id="DESKTOP-3F0SSFQ-dddc8af6" start="1644114728795" dump="1644114731701"/><sessioninfo id="DESKTOP-3F0SSFQ-2b2ba73" start="1644114787936" dump="1644114790874"/><sessioninfo id="DESKTOP-3F0SSFQ-3f0555b3" start="1644114825420" dump="1644114828227"/><sessioninfo id="DESKTOP-3F0SSFQ-cd2c0c0f" start="1644115177381" dump="1644115180180"/><sessioninfo id="DESKTOP-3F0SSFQ-b26b94bf" start="1644115534028" dump="1644115537319"/><sessioninfo id="DESKTOP-3F0SSFQ-cfd064c3" start="1644116824463" dump="1644116827378"/><sessioninfo id="DESKTOP-3F0SSFQ-56986780" start="1644117560517" dump="1644117563501"/><sessioninfo id="DESKTOP-3F0SSFQ-6dd77e6f" start="1644118754919" dump="1644118756032"/><sessioninfo id="DESKTOP-3F0SSFQ-514563e3" start="1644118817271" dump="1644118818268"/><sessioninfo id="DESKTOP-3F0SSFQ-8b64ebd8" start="1644118872451" dump="1644118875328"/><sessioninfo id="DESKTOP-3F0SSFQ-66a2322" start="1644118888622" dump="1644118891445"/><sessioninfo id="DESKTOP-3F0SSFQ-a38e3fc2" start="1644119484039" dump="1644119486840"/><sessioninfo id="DESKTOP-3F0SSFQ-f34db96b" start="1644294464249" dump="1644294465153"/><sessioninfo id="DESKTOP-3F0SSFQ-b9115546" start="1644295122606" dump="1644295123611"/><sessioninfo id="DESKTOP-3F0SSFQ-2aef10e8" start="1644295161327" dump="1644295164204"/><sessioninfo id="DESKTOP-3F0SSFQ-6a624032" start="1644295217221" dump="1644295219932"/><sessioninfo id="DESKTOP-3F0SSFQ-b0c31c61" start="1645640171651" dump="1645640174334"/><sessioninfo id="DESKTOP-3F0SSFQ-12e99b1c" start="1645763832669" dump="1645763835606"/><sessioninfo id="DESKTOP-3F0SSFQ-4721b86f" start="1645765193838" dump="1645765195319"/><sessioninfo id="DESKTOP-3F0SSFQ-9183b619" start="1645765273088" dump="1645765274539"/><sessioninfo id="DESKTOP-3F0SSFQ-992cd380" start="1645765646917" dump="1645765648397"/><sessioninfo id="DESKTOP-3F0SSFQ-9a8055eb" start="1645766546202" dump="1645766547706"/><sessioninfo id="DESKTOP-3F0SSFQ-a6b4847c" start="1645766619216" dump="1645766620737"/><sessioninfo id="DESKTOP-3F0SSFQ-8bb6f35e" start="1645767910802" dump="1645767912307"/><sessioninfo id="DESKTOP-3F0SSFQ-9f0032cf" start="1645768437779" dump="1645768439447"/><sessioninfo id="DESKTOP-3F0SSFQ-b15a8853" start="1645769099055" dump="1645769100670"/><sessioninfo id="DESKTOP-3F0SSFQ-b0043c71" start="1645770185062" dump="1645770186661"/><sessioninfo id="DESKTOP-3F0SSFQ-8759d0f8" start="1646329156298" dump="1646329157887"/><sessioninfo id="DESKTOP-3F0SSFQ-26a36cb5" start="1646330001002" dump="1646330002522"/><sessioninfo id="DESKTOP-3F0SSFQ-96e8e1cd" start="1646330605264" dump="1646330606917"/><sessioninfo id="DESKTOP-3F0SSFQ-434ad3f7" start="1646330787103" dump="1646330788693"/><sessioninfo id="DESKTOP-3F0SSFQ-5f989882" start="1646330920430" dump="1646330922073"/><sessioninfo id="DESKTOP-3F0SSFQ-11145b39" start="1646330944811" dump="1646330946454"/><sessioninfo id="DESKTOP-3F0SSFQ-924713f6" start="1646330957949" dump="1646330959766"/><sessioninfo id="DESKTOP-3F0SSFQ-ccdf596c" start="1646331633719" dump="1646331635605"/><sessioninfo id="DESKTOP-3F0SSFQ-9955b239" start="1646331804909" dump="1646331806499"/><sessioninfo id="DESKTOP-3F0SSFQ-10063b4a" start="1646331906484" dump="1646331908056"/><sessioninfo id="DESKTOP-3F0SSFQ-d8914fc8" start="1646331994700" dump="1646331996315"/><sessioninfo id="DESKTOP-3F0SSFQ-3b992ec1" start="1646332004650" dump="1646332006271"/><sessioninfo id="DESKTOP-3F0SSFQ-7dc0602" start="1646332329710" dump="1646332331242"/><sessioninfo id="DESKTOP-3F0SSFQ-2cf77881" start="1646332373817" dump="1646332375522"/><sessioninfo id="DESKTOP-3F0SSFQ-b28057b6" start="1646333668991" dump="1646333670456"/><sessioninfo id="DESKTOP-3F0SSFQ-5be7799f" start="1646334011490" dump="1646334013539"/><sessioninfo id="DESKTOP-3F0SSFQ-31eac105" start="1646334046926" dump="1646334049170"/><sessioninfo id="DESKTOP-3F0SSFQ-30868ce1" start="1646334151699" dump="1646334153633"/><sessioninfo id="DESKTOP-3F0SSFQ-aba40461" start="1646334430637" dump="1646334432629"/><sessioninfo id="DESKTOP-3F0SSFQ-f1b3625" start="1646334506353" dump="1646334508390"/><sessioninfo id="DESKTOP-3F0SSFQ-c6fc6b71" start="1646334795018" dump="1646334798664"/><sessioninfo id="DESKTOP-3F0SSFQ-80858d2c" start="1646335094580" dump="1646335098240"/><sessioninfo id="DESKTOP-3F0SSFQ-1b203ee5" start="1646335216586" dump="1646335220577"/><sessioninfo id="DESKTOP-3F0SSFQ-a6e3a827" start="1646335663949" dump="1646335666303"/><sessioninfo id="DESKTOP-3F0SSFQ-81eb8d08" start="1646335789873" dump="1646335792571"/><sessioninfo id="DESKTOP-3F0SSFQ-240770c3" start="1646335852716" dump="1646335855419"/><sessioninfo id="DESKTOP-3F0SSFQ-6007804c" start="1646336221951" dump="1646336224854"/><sessioninfo id="DESKTOP-3F0SSFQ-67bb8f45" start="1646337178961" dump="1646337181898"/><sessioninfo id="Jacobs-MacBook-Pro.local-2bd7ef7f" start="1646944439652" dump="1646944451088"/><sessioninfo id="Jacobs-MacBook-Pro.local-c4393689" start="1646944472957" dump="1646944482355"/><sessioninfo id="Jacobs-MacBook-Pro.local-2928e0ef" start="1646944563830" dump="1646944576197"/><sessioninfo id="Jacobs-MacBook-Pro.local-1ddb9748" start="1646944699133" dump="1646944708593"/><sessioninfo id="BLD-63aa9a54" start="1647362704748" dump="1647362706602"/><sessioninfo id="BLD-faad796b" start="1647362717085" dump="1647362718835"/><sessioninfo id="BLD-44888336" start="1647362773433" dump="1647362775204"/><sessioninfo id="BLD-974176f4" start="1647362883536" dump="1647362885233"/><sessioninfo id="BLD-f0755215" start="1647363072256" dump="1647363073977"/><sessioninfo id="BLD-17c4d03b" start="1647363114921" dump="1647363116658"/><sessioninfo id="BLD-49bd8019" start="1647363165730" dump="1647363167458"/><sessioninfo id="BLD-9fb0015f" start="1647363190170" dump="1647363191881"/><sessioninfo id="BLD-7c52b2f" start="1647363224428" dump="1647363226130"/><sessioninfo id="BLD-cb343f6c" start="1647363265703" dump="1647363267379"/><sessioninfo id="BLD-71a39ba0" start="1647363566092" dump="1647363567823"/><sessioninfo id="BLD-89dbaed2" start="1647363575745" dump="1647363577501"/><sessioninfo id="BLD-8a02b339" start="1647363629809" dump="1647363631527"/><sessioninfo id="BLD-4b704415" start="1647363851854" dump="1647363853552"/><sessioninfo id="BLD-c0537664" start="1647364348799" dump="1647364350473"/><sessioninfo id="BLD-6453b9bc" start="1647364421844" dump="1647364423562"/><sessioninfo id="BLD-c0e2656" start="1647364446161" dump="1647364447845"/><sessioninfo id="BLD-36fa5015" start="1647364705633" dump="1647364707397"/><sessioninfo id="BLD-d578985d" start="1647364782281" dump="1647364784026"/><sessioninfo id="BLD-45f508e9" start="1647364828993" dump="1647364830703"/><sessioninfo id="BLD-a4daf13e" start="1647364901079" dump="1647364902773"/><sessioninfo id="BLD-bfbee71e" start="1647364918657" dump="1647364920402"/><sessioninfo id="BLD-fdbabda3" start="1647364986098" dump="1647364987716"/><sessioninfo id="BLD-e7f22ed4" start="1647365799083" dump="1647365800827"/><sessioninfo id="BLD-1fc8daa6" start="1647366031622" dump="1647366033344"/><sessioninfo id="BLD-40e59e4e" start="1647366863248" dump="1647366865052"/><sessioninfo id="BLD-c9c01fc8" start="1647366935893" dump="1647366937666"/><sessioninfo id="BLD-ada73e13" start="1647367049422" dump="1647367051248"/><sessioninfo id="BLD-7615a907" start="1647367070328" dump="1647367072118"/><sessioninfo id="BLD-20ababef" start="1647367129013" dump="1647367130748"/><sessioninfo id="BLD-4344793a" start="1647367683229" dump="1647367684880"/><sessioninfo id="BLD-ee31b63a" start="1647367705588" dump="1647367707459"/><sessioninfo id="BLD-70ab1968" start="1647369067690" dump="1647369069536"/><sessioninfo id="BLD-d70f3d90" start="1647371024625" dump="1647371026500"/><sessioninfo id="BLD-4d87a542" start="1647371074507" dump="1647371076349"/><sessioninfo id="BLD-c7934add" start="1647371083361" dump="1647371085221"/><sessioninfo id="BLD-658964a5" start="1647371333515" dump="1647371335399"/><sessioninfo id="BLD-1b64c210" start="1647371478995" dump="1647371480946"/><sessioninfo id="BLD-5ac7b053" start="1647372021434" dump="1647372023362"/><sessioninfo id="BLD-108385d3" start="1647372164866" dump="1647372166741"/><sessioninfo id="BLD-6a6b9da7" start="1647372199577" dump="1647372201422"/><sessioninfo id="BLD-fb01c126" start="1647372237680" dump="1647372239557"/><sessioninfo id="BLD-2839c9a7" start="1647372689565" dump="1647372691421"/><sessioninfo id="BLD-32da487c" start="1647383544492" dump="1647383546494"/><sessioninfo id="BLD-55a005a8" start="1647383617099" dump="1647383618788"/><sessioninfo id="BLD-9124efe7" start="1647383764615" dump="1647383766327"/><sessioninfo id="BLD-1f707308" start="1647383818325" dump="1647383820001"/><sessioninfo id="BLD-31eb3d3e" start="1647384037184" dump="1647384038913"/><sessioninfo id="BLD-827fcef6" start="1647385078759" dump="1647385080507"/><sessioninfo id="BLD-a6b1c82a" start="1647385098393" dump="1647385100070"/><sessioninfo id="BLD-983e30ac" start="1647385111594" dump="1647385113267"/><sessioninfo id="BLD-741ae76c" start="1647385165791" dump="1647385167499"/><sessioninfo id="BLD-4c1684f9" start="1647390287282" dump="1647390289059"/><sessioninfo id="BLD-57bcb51c" start="1647390349642" dump="1647390351392"/><sessioninfo id="BLD-febe8b02" start="1647390414952" dump="1647390416704"/><sessioninfo id="BLD-93686791" start="1647390537208" dump="1647390538961"/><sessioninfo id="BLD-58798d6" start="1647390577729" dump="1647390579476"/><sessioninfo id="BLD-6264e23a" start="1647390775167" dump="1647390776865"/><sessioninfo id="BLD-cf87b53b" start="1647390814228" dump="1647390815982"/><sessioninfo id="BLD-67cf722f" start="1647390840883" dump="1647390842587"/><sessioninfo id="BLD-11dbd503" start="1647390875804" dump="1647390877537"/><sessioninfo id="BLD-5400fd2e" start="1647390924289" dump="1647390926047"/><sessioninfo id="BLD-5dbef9f7" start="1647390981927" dump="1647390983676"/><sessioninfo id="BLD-496f8461" start="1647391014097" dump="1647391015817"/><sessioninfo id="BLD-d470ccc6" start="1647391034598" dump="1647391036289"/><sessioninfo id="BLD-129092f4" start="1647391056375" dump="1647391058067"/><sessioninfo id="BLD-177e6684" start="1647391080131" dump="1647391081856"/><sessioninfo id="BLD-6b8a2492" start="1647391197786" dump="1647391199510"/><sessioninfo id="BLD-8a0bc01" start="1647391771359" dump="1647391773071"/><sessioninfo id="BLD-dd77ee7d" start="1647391812822" dump="1647391814538"/><sessioninfo id="BLD-44351b56" start="1647391833850" dump="1647391835576"/><sessioninfo id="BLD-5b62cb7c" start="1647391900131" dump="1647391901835"/><sessioninfo id="BLD-359364e9" start="1647391965967" dump="1647391967710"/><sessioninfo id="BLD-60041631" start="1647392241214" dump="1647392242962"/><sessioninfo id="BLD-50981871" start="1647392260005" dump="1647392261728"/><sessioninfo id="BLD-e296ffa4" start="1647392320897" dump="1647392322634"/><sessioninfo id="BLD-2845c2f9" start="1647392411235" dump="1647392412985"/><sessioninfo id="BLD-8e98dfa9" start="1647392508531" dump="1647392510228"/><sessioninfo id="BLD-e4875ee6" start="1647392647751" dump="1647392649451"/><sessioninfo id="BLD-43256478" start="1647392769737" dump="1647392771466"/><sessioninfo id="BLD-d3cb1158" start="1647392841889" dump="1647392843600"/><sessioninfo id="BLD-a97cc6c5" start="1647392871075" dump="1647392872767"/><sessioninfo id="BLD-73b6e0d9" start="1647392935492" dump="1647392937225"/><sessioninfo id="BLD-33be12d3" start="1647392949490" dump="1647392951216"/><sessioninfo id="BLD-3ecbab63" start="1647393155352" dump="1647393157072"/><sessioninfo id="BLD-2cba59ab" start="1647393312097" dump="1647393313845"/><sessioninfo id="BLD-1684a84c" start="1647393589042" dump="1647393590843"/><sessioninfo id="BLD-e06fd690" start="1647394084340" dump="1647394086078"/><sessioninfo id="BLD-56cb468b" start="1647394324590" dump="1647394326282"/><sessioninfo id="BLD-5d59ade4" start="1647394610073" dump="1647394611783"/><sessioninfo id="BLD-59db4ca7" start="1647394622938" dump="1647394624674"/><sessioninfo id="BLD-564923fc" start="1647394643038" dump="1647394644753"/><sessioninfo id="BLD-94a42d4f" start="1647394677247" dump="1647394678960"/><sessioninfo id="BLD-73933442" start="1647394717208" dump="1647394718962"/><sessioninfo id="BLD-221cba65" start="1647394989139" dump="1647394990828"/><sessioninfo id="BLD-73e0d8d8" start="1647395041688" dump="1647395043455"/><sessioninfo id="BLD-3ff0dd5a" start="1647395086451" dump="1647395088175"/><sessioninfo id="BLD-fb0b02ef" start="1647538343909" dump="1647538345796"/><sessioninfo id="BLD-6d5e9e39" start="1647538390421" dump="1647538392137"/><sessioninfo id="BLD-8443f275" start="1647541157514" dump="1647541159245"/><sessioninfo id="BLD-e0472190" start="1647543088084" dump="1647543089792"/><sessioninfo id="BLD-db24dee0" start="1647543154743" dump="1647543156379"/><sessioninfo id="BLD-e0c2f8c" start="1647543553604" dump="1647543555322"/><sessioninfo id="BLD-319626a1" start="1647543604029" dump="1647543605733"/><sessioninfo id="Jacobs-MacBook-Pro.local-af15758d" start="1649184853446" dump="1649184863772"/><sessioninfo id="Jacobs-MacBook-Pro.local-54463250" start="1649185392275" dump="1649185405104"/><sessioninfo id="Jacobs-MacBook-Pro.local-d40cac0b" start="1649185451732" dump="1649185462002"/><sessioninfo id="Jacobs-MacBook-Pro.local-4a0efe0d" start="1649185686085" dump="1649185696557"/><sessioninfo id="Jacobs-MacBook-Pro.local-526d3115" start="1649186394830" dump="1649186405394"/><sessioninfo id="BLD-7b507771" start="1649444534118" dump="1649444535836"/><sessioninfo id="BLD-61a0064c" start="1649445295705" dump="1649445296745"/><sessioninfo id="BLD-12824606" start="1649445313655" dump="1649445315415"/><sessioninfo id="BLD-d99294b0" start="1649445324460" dump="1649445326153"/><sessioninfo id="BLD-f3013773" start="1649445358338" dump="1649445360029"/><sessioninfo id="BLD-919362d1" start="1649445459551" dump="1649445460762"/><sessioninfo id="BLD-21f15cb6" start="1649445481726" dump="1649445482867"/><sessioninfo id="BLD-ff5d2d0d" start="1649445496861" dump="1649445498031"/><sessioninfo id="BLD-5fe8c97a" start="1649447289826" dump="1649447291602"/><sessioninfo id="BLD-9f8e1e1b" start="1649447380992" dump="1649447382700"/><sessioninfo id="BLD-366d005a" start="1649448041879" dump="1649448043583"/><sessioninfo id="BLD-949eacc7" start="1649448102535" dump="1649448104207"/><sessioninfo id="BLD-11112f39" start="1649448117297" dump="1649448119077"/><sessioninfo id="BLD-9ccc387" start="1649448431898" dump="1649448433048"/><sessioninfo id="BLD-5756ad08" start="1649448438690" dump="1649448439860"/><sessioninfo id="BLD-8a91a98b" start="1649448491190" dump="1649448492364"/><sessioninfo id="BLD-f6de6e49" start="1649448531233" dump="1649448532915"/><sessioninfo id="BLD-bc430c2f" start="1649449150114" dump="1649449151107"/><sessioninfo id="BLD-1a139aba" start="1649449158976" dump="1649449159973"/><sessioninfo id="BLD-5b18fafc" start="1649449176377" dump="1649449177389"/><sessioninfo id="BLD-db08531" start="1649449195621" dump="1649449197381"/><sessioninfo id="BLD-e46620da" start="1649449605126" dump="1649449606783"/><sessioninfo id="BLD-59c04d80" start="1649450106951" dump="1649450108678"/><sessioninfo id="BLD-aac395e1" start="1649450154815" dump="1649450156590"/><sessioninfo id="BLD-f00f7f44" start="1649458102215" dump="1649458103976"/><sessioninfo id="BLD-f85be656" start="1649458304595" dump="1649458306352"/><sessioninfo id="BLD-e341c3eb" start="1649473950695" dump="1649473952555"/><sessioninfo id="BLD-657ad31a" start="1649474450237" dump="1649474451312"/><sessioninfo id="BLD-eba49d55" start="1649475072826" dump="1649475074587"/><sessioninfo id="BLD-8c52ab53" start="1649627550308" dump="1649627552140"/><sessioninfo id="BLD-b3c65e0c" start="1649627768686" dump="1649627769687"/><sessioninfo id="BLD-c872ee76" start="1649628182098" dump="1649628183193"/><sessioninfo id="BLD-f6bd778c" start="1649628243404" dump="1649628244526"/><sessioninfo id="BLD-968e5928" start="1649628250686" dump="1649628251764"/><sessioninfo id="BLD-38d75b82" start="1649628326948" dump="1649628328049"/><sessioninfo id="BLD-b3c05952" start="1649628410080" dump="1649628411098"/><sessioninfo id="BLD-5a104574" start="1649628462648" dump="1649628465181"/><sessioninfo id="BLD-9793a6" start="1649628735989" dump="1649628738029"/><sessioninfo id="BLD-ed61961b" start="1649628775019" dump="1649628777674"/><sessioninfo id="BLD-eee8733d" start="1649629974547" dump="1649629976532"/><sessioninfo id="BLD-3d3fc86e" start="1649630038578" dump="1649630040451"/><sessioninfo id="BLD-8fcd2e20" start="1649630047094" dump="1649630048936"/><sessioninfo id="BLD-3a1e2401" start="1649630113370" dump="1649630115577"/><sessioninfo id="BLD-e6626535" start="1649630450487" dump="1649630452976"/><sessioninfo id="BLD-3984bfca" start="1649632942909" dump="1649632945430"/><sessioninfo id="BLD-e4692d78" start="1649719967377" dump="1649719968771"/><sessioninfo id="BLD-b27a0929" start="1649719981052" dump="1649719982129"/><sessioninfo id="BLD-7bf6c9fa" start="1649720041144" dump="1649720043672"/><sessioninfo id="BLD-bcc21dbe" start="1649720071399" dump="1649720073982"/><sessioninfo id="BLD-b4064968" start="1649720146627" dump="1649720149288"/><sessioninfo id="BLD-1f7b80eb" start="1649720170346" dump="1649720172887"/><sessioninfo id="BLD-fd7895a5" start="1649720623225" dump="1649720625760"/><sessioninfo id="BLD-b7eea2c0" start="1649722273448" dump="1649722275925"/><sessioninfo id="BLD-c379ded3" start="1649897589001" dump="1649897590281"/><sessioninfo id="BLD-8724a4a0" start="1649897600251" dump="1649897601367"/><sessioninfo id="BLD-30dfe8ee" start="1649897612435" dump="1649897613492"/><sessioninfo id="BLD-51a2842f" start="1649897745573" dump="1649897746677"/><sessioninfo id="BLD-65396fe7" start="1649897772945" dump="1649897795216"/><sessioninfo id="BLD-c3ed0565" start="1649897934785" dump="1649897957344"/><sessioninfo id="BLD-7e3a9800" start="1649898006387" dump="1649898007477"/><sessioninfo id="BLD-7310b69a" start="1649898538660" dump="1649898539750"/><sessioninfo id="BLD-809aa9b6" start="1649898624111" dump="1649898625252"/><sessioninfo id="BLD-61aaae0a" start="1649898949230" dump="1649898951022"/><sessioninfo id="BLD-9690776a" start="1649899016318" dump="1649899038398"/><sessioninfo id="BLD-21e10890" start="1649902483011" dump="1649902505805"/><sessioninfo id="BLD-91da0270" start="1649902520661" dump="1649902522453"/><sessioninfo id="BLD-c41e7dfe" start="1649902886734" dump="1649902890387"/><sessioninfo id="BLD-bacb40bd" start="1649903260877" dump="1649903325018"/><sessioninfo id="BLD-3088bc4d" start="1649903461867" dump="1649903483430"/><sessioninfo id="BLD-aa6ffbb3" start="1649904102335" dump="1649904103404"/><sessioninfo id="BLD-dfa22197" start="1649904230134" dump="1649904231244"/><sessioninfo id="BLD-77215944" start="1649904290113" dump="1649904291209"/><sessioninfo id="BLD-74fe4dfc" start="1649961197591" dump="1649961198973"/><sessioninfo id="BLD-1a14a620" start="1649961197591" dump="1649961211497"/><sessioninfo id="BLD-2557e88b" start="1649961225512" dump="1649961238369"/><sessioninfo id="BLD-7cccfa9a" start="1649961286900" dump="1649961300338"/><sessioninfo id="BLD-e696889e" start="1649961582691" dump="1649961595496"/><sessioninfo id="BLD-b76fbecd" start="1649961610883" dump="1649961623723"/><sessioninfo id="BLD-c8bf6836" start="1649962146074" dump="1649962158787"/><sessioninfo id="BLD-e8e0887e" start="1649962180232" dump="1649962192939"/><sessioninfo id="BLD-67c2c431" start="1649962253672" dump="1649962266445"/><sessioninfo id="BLD-6d30eadc" start="1649962380467" dump="1649962393571"/><sessioninfo id="BLD-684e3127" start="1649962404291" dump="1649962417169"/><sessioninfo id="BLD-41b6d905" start="1649962542522" dump="1649962557902"/><sessioninfo id="BLD-6884b96" start="1649962576675" dump="1649962595961"/><sessioninfo id="BLD-34445104" start="1649962652249" dump="1649962675625"/><sessioninfo id="BLD-567fd05e" start="1649963023492" dump="1649963048638"/><sessioninfo id="BLD-3c1a263c" start="1649964655129" dump="1649964658013"/><package name="com/jml/optimizers"><class name="com/jml/optimizers/GradientDescent" sourcefilename="GradientDescent.java"><method name="&lt;init&gt;" desc="(D)V" line="19"><counter type="INSTRUCTION" missed="6" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="step" desc="([Llinalg/Matrix;)[Llinalg/Matrix;" line="40"><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="step" desc="(Z[Llinalg/Matrix;)[Llinalg/Matrix;" line="63"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDetails" desc="()Ljava/lang/String;" line="74"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="24" covered="37"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="5" covered="9"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/optimizers/Adam" sourcefilename="Adam.java"><method name="&lt;init&gt;" desc="()V" line="45"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(D)V" line="61"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(DDD)V" line="77"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="step" desc="([Llinalg/Matrix;)[Llinalg/Matrix;" line="97"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="step" desc="(Z[Llinalg/Matrix;)[Llinalg/Matrix;" line="112"><counter type="INSTRUCTION" missed="7" covered="103"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sqrt" desc="(Llinalg/Matrix;)Llinalg/Matrix;" line="136"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDetails" desc="()Ljava/lang/String;" line="156"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="32" covered="176"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="10" covered="31"/><counter type="COMPLEXITY" missed="4" covered="7"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/optimizers/StepLearningRate" sourcefilename="StepLearningRate.java"><method name="&lt;init&gt;" desc="()V" line="22"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(D)V" line="34"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(DI)V" line="46"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="step" desc="(Lcom/jml/optimizers/Optimizer;)V" line="59"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="18" covered="32"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="8" covered="8"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/optimizers/Scheduler" sourcefilename="Scheduler.java"><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/optimizers/Momentum" sourcefilename="Momentum.java"><method name="&lt;init&gt;" desc="(D)V" line="23"><counter type="INSTRUCTION" missed="6" covered="19"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(DD)V" line="23"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="step" desc="([Llinalg/Matrix;)[Llinalg/Matrix;" line="74"><counter type="INSTRUCTION" missed="7" covered="39"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="step" desc="(Z[Llinalg/Matrix;)[Llinalg/Matrix;" line="100"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDetails" desc="()Ljava/lang/String;" line="112"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="58" covered="58"/><counter type="BRANCH" missed="8" covered="2"/><counter type="LINE" missed="13" covered="13"/><counter type="COMPLEXITY" missed="8" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/optimizers/Optimizer" sourcefilename="Optimizer.java"><method name="&lt;init&gt;" desc="()V" line="8"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setScheduler" desc="(Lcom/jml/optimizers/Scheduler;)V" line="36"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLearningRate" desc="()D" line="44"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="StepLearningRate.java"><line nr="22" mi="2" ci="0" mb="0" cb="0"/><line nr="23" mi="3" ci="0" mb="0" cb="0"/><line nr="24" mi="3" ci="0" mb="0" cb="0"/><line nr="25" mi="3" ci="0" mb="0" cb="0"/><line nr="26" mi="1" ci="0" mb="0" cb="0"/><line nr="34" mi="2" ci="0" mb="0" cb="0"/><line nr="35" mi="3" ci="0" mb="0" cb="0"/><line nr="36" mi="1" ci="0" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="9" mb="0" cb="4"/><line nr="61" mi="0" ci="7" mb="0" cb="0"/><line nr="63" mi="0" ci="6" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="18" covered="32"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="8" covered="8"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Optimizer.java"><line nr="8" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="GradientDescent.java"><line nr="19" mi="0" ci="2" mb="0" cb="0"/><line nr="20" mi="0" ci="4" mb="1" cb="1"/><line nr="21" mi="6" ci="0" mb="0" cb="0"/><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="0" ci="4" mb="1" cb="1"/><line nr="41" mi="7" ci="0" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="47" mi="0" ci="12" mb="0" cb="0"/><line nr="63" mi="4" ci="0" mb="0" cb="0"/><line nr="74" mi="4" ci="0" mb="0" cb="0"/><line nr="78" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="24" covered="37"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="5" covered="9"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Scheduler.java"><line nr="9" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Momentum.java"><line nr="23" mi="3" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="2" mb="0" cb="0"/><line nr="33" mi="0" ci="4" mb="1" cb="1"/><line nr="34" mi="6" ci="0" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="2" ci="0" mb="0" cb="0"/><line nr="50" mi="8" ci="0" mb="4" cb="0"/><line nr="51" mi="6" ci="0" mb="0" cb="0"/><line nr="53" mi="4" ci="0" mb="2" cb="0"/><line nr="54" mi="6" ci="0" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="0" cb="0"/><line nr="58" mi="3" ci="0" mb="0" cb="0"/><line nr="59" mi="3" ci="0" mb="0" cb="0"/><line nr="60" mi="1" ci="0" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="1" cb="1"/><line nr="75" mi="7" ci="0" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="10" mb="0" cb="0"/><line nr="84" mi="0" ci="13" mb="0" cb="0"/><line nr="100" mi="4" ci="0" mb="0" cb="0"/><line nr="112" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="58" covered="58"/><counter type="BRANCH" missed="8" covered="2"/><counter type="LINE" missed="13" covered="13"/><counter type="COMPLEXITY" missed="8" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Adam.java"><line nr="45" mi="2" ci="0" mb="0" cb="0"/><line nr="46" mi="3" ci="0" mb="0" cb="0"/><line nr="47" mi="3" ci="0" mb="0" cb="0"/><line nr="48" mi="3" ci="0" mb="0" cb="0"/><line nr="49" mi="3" ci="0" mb="0" cb="0"/><line nr="50" mi="3" ci="0" mb="0" cb="0"/><line nr="51" mi="1" ci="0" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="97" mi="5" ci="0" mb="0" cb="0"/><line nr="112" mi="0" ci="4" mb="1" cb="1"/><line nr="113" mi="7" ci="0" mb="0" cb="0"/><line nr="116" mi="0" ci="2" mb="0" cb="2"/><line nr="117" mi="0" ci="6" mb="0" cb="0"/><line nr="120" mi="0" ci="4" mb="0" cb="0"/><line nr="121" mi="0" ci="4" mb="0" cb="0"/><line nr="122" mi="0" ci="4" mb="0" cb="0"/><line nr="123" mi="0" ci="4" mb="0" cb="0"/><line nr="125" mi="0" ci="12" mb="0" cb="0"/><line nr="126" mi="0" ci="14" mb="0" cb="0"/><line nr="128" mi="0" ci="21" mb="0" cb="0"/><line nr="129" mi="0" ci="13" mb="0" cb="0"/><line nr="131" mi="0" ci="15" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="8" mb="0" cb="2"/><line nr="139" mi="0" ci="10" mb="0" cb="2"/><line nr="140" mi="0" ci="11" mb="0" cb="0"/><line nr="144" mi="0" ci="5" mb="0" cb="0"/><line nr="156" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="32" covered="176"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="10" covered="31"/><counter type="COMPLEXITY" missed="4" covered="7"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="132" covered="316"/><counter type="BRANCH" missed="11" covered="15"/><counter type="LINE" missed="36" covered="66"/><counter type="COMPLEXITY" missed="18" covered="19"/><counter type="METHOD" missed="10" covered="14"/><counter type="CLASS" missed="0" covered="6"/></package><package name="com/jml/linear_models"><class name="com/jml/linear_models/MultipleLinearRegression" sourcefilename="MultipleLinearRegression.java"><method name="&lt;init&gt;" desc="()V" line="21"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fit" desc="([[D[D)Lcom/jml/linear_models/MultipleLinearRegression;" line="55"><counter type="INSTRUCTION" missed="5" covered="54"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="13"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="predict" desc="([[D)[D" line="92"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="predict" desc="(Llinalg/Matrix;Llinalg/Matrix;)Llinalg/Matrix;" line="106"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParams" desc="()Llinalg/Matrix;" line="115"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="saveModel" desc="(Ljava/lang/String;)V" line="128"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildDetails" desc="()V" line="147"><counter type="INSTRUCTION" missed="1" covered="77"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inspect" desc="()Ljava/lang/String;" line="178"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="189"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="236"/><counter type="BRANCH" missed="4" covered="14"/><counter type="LINE" missed="1" covered="46"/><counter type="COMPLEXITY" missed="4" covered="14"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/linear_models/LinearGradient" sourcefilename="LinearGradient.java"><method name="&lt;init&gt;" desc="()V" line="8"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getGrad" desc="(Llinalg/Matrix;Llinalg/Matrix;Llinalg/Matrix;)Llinalg/Matrix;" line="18"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="14"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/linear_models/Perceptron" sourcefilename="Perceptron.java"><method name="&lt;init&gt;" desc="()V" line="24"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(DIID)V" line="24"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(DIIDLcom/jml/neural_network/activations/ActivationFunction;)V" line="24"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fit" desc="([[D[[D)Lcom/jml/linear_models/Perceptron;" line="120"><counter type="INSTRUCTION" missed="23" covered="44"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="3" covered="9"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="predict" desc="([[D)[[D" line="147"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="predict" desc="(Llinalg/Matrix;Llinalg/Matrix;)Llinalg/Matrix;" line="157"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParams" desc="()Llinalg/Matrix;" line="166"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="validateParams" desc="()V" line="172"><counter type="INSTRUCTION" missed="28" covered="18"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="4" covered="5"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="saveModel" desc="(Ljava/lang/String;)V" line="192"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildDetails" desc="()V" line="200"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inspect" desc="()Ljava/lang/String;" line="222"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="230"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="62" covered="274"/><counter type="BRANCH" missed="7" covered="11"/><counter type="LINE" missed="11" covered="58"/><counter type="COMPLEXITY" missed="11" covered="10"/><counter type="METHOD" missed="4" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/linear_models/LinearRegressionSGD" sourcefilename="LinearRegressionSGD.java"><method name="&lt;init&gt;" desc="()V" line="24"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(DID)V" line="24"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(DI)V" line="24"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(D)V" line="24"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(I)V" line="24"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fit" desc="([D[D)Lcom/jml/linear_models/LinearRegressionSGD;" line="124"><counter type="INSTRUCTION" missed="1" covered="130"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="15"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLossHist" desc="()[D" line="165"><counter type="INSTRUCTION" missed="5" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validateParams" desc="()V" line="174"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="309"/><counter type="BRANCH" missed="2" covered="12"/><counter type="LINE" missed="2" covered="54"/><counter type="COMPLEXITY" missed="2" covered="13"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/linear_models/MultipleLinearRegressionSGD" sourcefilename="MultipleLinearRegressionSGD.java"><method name="&lt;init&gt;" desc="()V" line="25"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(DID)V" line="25"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(DI)V" line="25"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(D)V" line="25"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(I)V" line="25"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fit" desc="([[D[D)Lcom/jml/linear_models/MultipleLinearRegressionSGD;" line="112"><counter type="INSTRUCTION" missed="1" covered="130"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="15"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLossHist" desc="()[D" line="153"><counter type="INSTRUCTION" missed="5" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validateParams" desc="()V" line="163"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="309"/><counter type="BRANCH" missed="2" covered="12"/><counter type="LINE" missed="2" covered="54"/><counter type="COMPLEXITY" missed="2" covered="13"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/linear_models/PolynomialRegression" sourcefilename="PolynomialRegression.java"><method name="&lt;init&gt;" desc="()V" line="22"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(I)V" line="22"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fit" desc="([D[D)Lcom/jml/linear_models/PolynomialRegression;" line="70"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="predict" desc="([D)[D" line="99"><counter type="INSTRUCTION" missed="0" covered="58"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="predict" desc="(Llinalg/Matrix;Llinalg/Matrix;)Llinalg/Matrix;" line="122"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParams" desc="()Llinalg/Matrix;" line="131"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="saveModel" desc="(Ljava/lang/String;)V" line="146"><counter type="INSTRUCTION" missed="0" covered="73"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildDetails" desc="()V" line="172"><counter type="INSTRUCTION" missed="1" covered="102"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inspect" desc="()Ljava/lang/String;" line="206"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="217"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="348"/><counter type="BRANCH" missed="3" covered="21"/><counter type="LINE" missed="0" covered="62"/><counter type="COMPLEXITY" missed="3" covered="19"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/linear_models/LinearRegression" sourcefilename="LinearRegression.java"><method name="&lt;init&gt;" desc="()V" line="16"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fit" desc="([D[D)Lcom/jml/linear_models/LinearRegression;" line="43"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildDetails" desc="()V" line="52"><counter type="INSTRUCTION" missed="1" covered="51"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inspect" desc="()Ljava/lang/String;" line="74"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="85"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="78"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/linear_models/LinearModelTags" sourcefilename="LinearModelTags.java"><method name="&lt;clinit&gt;" desc="()V" line="3"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/linear_models/PolynomialRegressionSGD" sourcefilename="PolynomialRegressionSGD.java"><method name="&lt;init&gt;" desc="()V" line="24"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(IDID)V" line="24"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(IDI)V" line="24"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(ID)V" line="24"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(I)V" line="24"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fit" desc="([D[D)Lcom/jml/linear_models/PolynomialRegressionSGD;" line="124"><counter type="INSTRUCTION" missed="1" covered="134"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="16"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLossHist" desc="()[D" line="167"><counter type="INSTRUCTION" missed="5" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validateParams" desc="()V" line="177"><counter type="INSTRUCTION" missed="7" covered="39"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="13" covered="329"/><counter type="BRANCH" missed="3" covered="13"/><counter type="LINE" missed="3" covered="60"/><counter type="COMPLEXITY" missed="3" covered="13"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="PolynomialRegressionSGD.java"><line nr="24" mi="0" ci="15" mb="0" cb="0"/><line nr="25" mi="0" ci="15" mb="0" cb="0"/><line nr="26" mi="0" ci="15" mb="0" cb="0"/><line nr="28" mi="0" ci="25" mb="0" cb="0"/><line nr="34" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="4" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="104" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="2" mb="0" cb="0"/><line nr="108" mi="0" ci="1" mb="0" cb="0"/><line nr="124" mi="0" ci="7" mb="0" cb="0"/><line nr="129" mi="0" ci="10" mb="0" cb="0"/><line nr="130" mi="0" ci="5" mb="0" cb="0"/><line nr="133" mi="0" ci="7" mb="0" cb="0"/><line nr="135" mi="0" ci="8" mb="0" cb="2"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="138" mi="0" ci="16" mb="0" cb="2"/><line nr="139" mi="0" ci="4" mb="0" cb="0"/><line nr="140" mi="0" ci="10" mb="0" cb="0"/><line nr="141" mi="0" ci="18" mb="0" cb="0"/><line nr="145" mi="0" ci="16" mb="0" cb="0"/><line nr="147" mi="0" ci="14" mb="1" cb="1"/><line nr="148" mi="1" ci="0" mb="0" cb="0"/><line nr="153" mi="0" ci="8" mb="0" cb="0"/><line nr="154" mi="0" ci="3" mb="0" cb="0"/><line nr="155" mi="0" ci="2" mb="0" cb="0"/><line nr="157" mi="0" ci="2" mb="0" cb="0"/><line nr="167" mi="0" ci="3" mb="1" cb="1"/><line nr="168" mi="5" ci="0" mb="0" cb="0"/><line nr="171" mi="0" ci="7" mb="0" cb="0"/><line nr="177" mi="0" ci="3" mb="0" cb="2"/><line nr="178" mi="0" ci="7" mb="0" cb="0"/><line nr="179" mi="0" ci="5" mb="0" cb="2"/><line nr="180" mi="0" ci="7" mb="0" cb="0"/><line nr="181" mi="0" ci="5" mb="0" cb="2"/><line nr="182" mi="0" ci="7" mb="0" cb="0"/><line nr="183" mi="0" ci="4" mb="1" cb="1"/><line nr="184" mi="7" ci="0" mb="0" cb="0"/><line nr="186" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="13" covered="329"/><counter type="BRANCH" missed="3" covered="13"/><counter type="LINE" missed="3" covered="60"/><counter type="COMPLEXITY" missed="3" covered="13"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MultipleLinearRegressionSGD.java"><line nr="25" mi="0" ci="15" mb="0" cb="0"/><line nr="26" mi="0" ci="15" mb="0" cb="0"/><line nr="27" mi="0" ci="15" mb="0" cb="0"/><line nr="29" mi="0" ci="25" mb="0" cb="0"/><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="2" mb="0" cb="0"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="101" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="104" mi="0" ci="1" mb="0" cb="0"/><line nr="112" mi="0" ci="7" mb="0" cb="0"/><line nr="117" mi="0" ci="10" mb="0" cb="0"/><line nr="118" mi="0" ci="5" mb="0" cb="0"/><line nr="121" mi="0" ci="7" mb="0" cb="0"/><line nr="123" mi="0" ci="8" mb="0" cb="2"/><line nr="124" mi="0" ci="4" mb="0" cb="0"/><line nr="126" mi="0" ci="16" mb="0" cb="2"/><line nr="127" mi="0" ci="10" mb="0" cb="0"/><line nr="128" mi="0" ci="18" mb="0" cb="0"/><line nr="132" mi="0" ci="16" mb="0" cb="0"/><line nr="134" mi="0" ci="14" mb="1" cb="1"/><line nr="135" mi="1" ci="0" mb="0" cb="0"/><line nr="139" mi="0" ci="8" mb="0" cb="0"/><line nr="140" mi="0" ci="3" mb="0" cb="0"/><line nr="141" mi="0" ci="2" mb="0" cb="0"/><line nr="143" mi="0" ci="2" mb="0" cb="0"/><line nr="153" mi="0" ci="3" mb="1" cb="1"/><line nr="154" mi="5" ci="0" mb="0" cb="0"/><line nr="157" mi="0" ci="7" mb="0" cb="0"/><line nr="163" mi="0" ci="3" mb="0" cb="2"/><line nr="164" mi="0" ci="7" mb="0" cb="0"/><line nr="165" mi="0" ci="5" mb="0" cb="2"/><line nr="166" mi="0" ci="7" mb="0" cb="0"/><line nr="167" mi="0" ci="5" mb="0" cb="2"/><line nr="168" mi="0" ci="7" mb="0" cb="0"/><line nr="169" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="309"/><counter type="BRANCH" missed="2" covered="12"/><counter type="LINE" missed="2" covered="54"/><counter type="COMPLEXITY" missed="2" covered="13"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LinearGradient.java"><line nr="8" mi="3" ci="0" mb="0" cb="0"/><line nr="18" mi="0" ci="14" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="14"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LinearModelTags.java"><line nr="3" mi="0" ci="3" mb="0" cb="0"/><line nr="4" mi="0" ci="30" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LinearRegressionSGD.java"><line nr="24" mi="0" ci="15" mb="0" cb="0"/><line nr="25" mi="0" ci="15" mb="0" cb="0"/><line nr="26" mi="0" ci="15" mb="0" cb="0"/><line nr="28" mi="0" ci="25" mb="0" cb="0"/><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="104" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="2" mb="0" cb="0"/><line nr="108" mi="0" ci="1" mb="0" cb="0"/><line nr="124" mi="0" ci="7" mb="0" cb="0"/><line nr="128" mi="0" ci="10" mb="0" cb="0"/><line nr="129" mi="0" ci="5" mb="0" cb="0"/><line nr="132" mi="0" ci="7" mb="0" cb="0"/><line nr="134" mi="0" ci="8" mb="0" cb="2"/><line nr="135" mi="0" ci="4" mb="0" cb="0"/><line nr="137" mi="0" ci="16" mb="0" cb="2"/><line nr="138" mi="0" ci="10" mb="0" cb="0"/><line nr="139" mi="0" ci="18" mb="0" cb="0"/><line nr="143" mi="0" ci="16" mb="0" cb="0"/><line nr="145" mi="0" ci="14" mb="1" cb="1"/><line nr="146" mi="1" ci="0" mb="0" cb="0"/><line nr="151" mi="0" ci="8" mb="0" cb="0"/><line nr="152" mi="0" ci="3" mb="0" cb="0"/><line nr="153" mi="0" ci="2" mb="0" cb="0"/><line nr="155" mi="0" ci="2" mb="0" cb="0"/><line nr="165" mi="0" ci="3" mb="1" cb="1"/><line nr="166" mi="5" ci="0" mb="0" cb="0"/><line nr="169" mi="0" ci="7" mb="0" cb="0"/><line nr="174" mi="0" ci="3" mb="0" cb="2"/><line nr="175" mi="0" ci="7" mb="0" cb="0"/><line nr="176" mi="0" ci="5" mb="0" cb="2"/><line nr="177" mi="0" ci="7" mb="0" cb="0"/><line nr="178" mi="0" ci="5" mb="0" cb="2"/><line nr="179" mi="0" ci="7" mb="0" cb="0"/><line nr="180" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="309"/><counter type="BRANCH" missed="2" covered="12"/><counter type="LINE" missed="2" covered="54"/><counter type="COMPLEXITY" missed="2" covered="13"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MultipleLinearRegression.java"><line nr="21" mi="0" ci="4" mb="0" cb="0"/><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="8" mb="0" cb="0"/><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="1" cb="1"/><line nr="67" mi="5" ci="0" mb="0" cb="0"/><line nr="71" mi="0" ci="5" mb="0" cb="0"/><line nr="73" mi="0" ci="8" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="2"/><line nr="93" mi="0" ci="5" mb="0" cb="0"/><line nr="96" mi="0" ci="10" mb="0" cb="0"/><line nr="98" mi="0" ci="9" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="2"/><line nr="129" mi="0" ci="5" mb="0" cb="0"/><line nr="131" mi="0" ci="4" mb="0" cb="2"/><line nr="132" mi="0" ci="5" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="10" mb="0" cb="0"/><line nr="139" mi="0" ci="11" mb="0" cb="0"/><line nr="141" mi="0" ci="4" mb="0" cb="0"/><line nr="142" mi="0" ci="1" mb="0" cb="0"/><line nr="147" mi="0" ci="5" mb="0" cb="0"/><line nr="151" mi="1" ci="8" mb="1" cb="1"/><line nr="154" mi="0" ci="6" mb="2" cb="2"/><line nr="155" mi="0" ci="5" mb="0" cb="0"/><line nr="156" mi="0" ci="7" mb="0" cb="0"/><line nr="157" mi="0" ci="12" mb="0" cb="0"/><line nr="159" mi="0" ci="9" mb="0" cb="2"/><line nr="160" mi="0" ci="12" mb="0" cb="0"/><line nr="162" mi="0" ci="7" mb="0" cb="2"/><line nr="163" mi="0" ci="5" mb="0" cb="0"/><line nr="167" mi="0" ci="1" mb="0" cb="0"/><line nr="178" mi="0" ci="3" mb="0" cb="0"/><line nr="189" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="236"/><counter type="BRANCH" missed="4" covered="14"/><counter type="LINE" missed="1" covered="46"/><counter type="COMPLEXITY" missed="4" covered="14"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Perceptron.java"><line nr="24" mi="0" ci="12" mb="0" cb="0"/><line nr="33" mi="0" ci="9" mb="0" cb="0"/><line nr="35" mi="0" ci="24" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="13" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="13" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="0" ci="2" mb="0" cb="0"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><line nr="102" mi="0" ci="2" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="13" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="0" cb="0"/><line nr="111" mi="0" ci="2" mb="0" cb="0"/><line nr="112" mi="0" ci="1" mb="0" cb="0"/><line nr="120" mi="0" ci="3" mb="1" cb="1"/><line nr="121" mi="5" ci="0" mb="0" cb="0"/><line nr="123" mi="0" ci="6" mb="1" cb="1"/><line nr="124" mi="9" ci="0" mb="0" cb="0"/><line nr="127" mi="0" ci="5" mb="1" cb="1"/><line nr="128" mi="9" ci="0" mb="0" cb="0"/><line nr="132" mi="0" ci="12" mb="0" cb="0"/><line nr="133" mi="0" ci="5" mb="0" cb="0"/><line nr="134" mi="0" ci="6" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="136" mi="0" ci="2" mb="0" cb="0"/><line nr="138" mi="0" ci="2" mb="0" cb="0"/><line nr="147" mi="0" ci="5" mb="0" cb="0"/><line nr="157" mi="2" ci="0" mb="0" cb="0"/><line nr="166" mi="2" ci="0" mb="0" cb="0"/><line nr="172" mi="0" ci="3" mb="1" cb="1"/><line nr="173" mi="7" ci="0" mb="0" cb="0"/><line nr="175" mi="0" ci="5" mb="1" cb="1"/><line nr="176" mi="7" ci="0" mb="0" cb="0"/><line nr="178" mi="0" ci="5" mb="1" cb="1"/><line nr="179" mi="7" ci="0" mb="0" cb="0"/><line nr="181" mi="0" ci="4" mb="1" cb="1"/><line nr="182" mi="7" ci="0" mb="0" cb="0"/><line nr="184" mi="0" ci="1" mb="0" cb="0"/><line nr="192" mi="0" ci="4" mb="0" cb="0"/><line nr="193" mi="0" ci="1" mb="0" cb="0"/><line nr="200" mi="0" ci="5" mb="0" cb="0"/><line nr="204" mi="0" ci="9" mb="0" cb="2"/><line nr="207" mi="0" ci="10" mb="0" cb="0"/><line nr="208" mi="0" ci="10" mb="0" cb="0"/><line nr="210" mi="0" ci="3" mb="0" cb="2"/><line nr="211" mi="0" ci="5" mb="0" cb="0"/><line nr="212" mi="0" ci="9" mb="0" cb="0"/><line nr="214" mi="0" ci="1" mb="0" cb="0"/><line nr="222" mi="3" ci="0" mb="0" cb="0"/><line nr="230" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="62" covered="274"/><counter type="BRANCH" missed="7" covered="11"/><counter type="LINE" missed="11" covered="58"/><counter type="COMPLEXITY" missed="11" covered="10"/><counter type="METHOD" missed="4" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PolynomialRegression.java"><line nr="22" mi="0" ci="8" mb="0" cb="0"/><line nr="24" mi="0" ci="6" mb="0" cb="0"/><line nr="33" mi="0" ci="16" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="2"/><line nr="56" mi="0" ci="6" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="5" mb="0" cb="0"/><line nr="71" mi="0" ci="6" mb="0" cb="0"/><line nr="72" mi="0" ci="7" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="5" mb="0" cb="0"/><line nr="79" mi="0" ci="5" mb="0" cb="0"/><line nr="80" mi="0" ci="8" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="2"/><line nr="100" mi="0" ci="5" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="2" mb="0" cb="0"/><line nr="106" mi="0" ci="16" mb="0" cb="2"/><line nr="107" mi="0" ci="10" mb="0" cb="2"/><line nr="108" mi="0" ci="15" mb="0" cb="0"/><line nr="110" mi="0" ci="1" mb="0" cb="0"/><line nr="113" mi="0" ci="2" mb="0" cb="0"/><line nr="122" mi="0" ci="4" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="2"/><line nr="147" mi="0" ci="5" mb="0" cb="0"/><line nr="149" mi="0" ci="8" mb="0" cb="2"/><line nr="150" mi="0" ci="5" mb="0" cb="0"/><line nr="153" mi="0" ci="3" mb="0" cb="2"/><line nr="154" mi="0" ci="3" mb="0" cb="0"/><line nr="155" mi="0" ci="4" mb="0" cb="0"/><line nr="157" mi="0" ci="3" mb="0" cb="0"/><line nr="158" mi="0" ci="3" mb="0" cb="0"/><line nr="159" mi="0" ci="11" mb="0" cb="0"/><line nr="163" mi="0" ci="9" mb="0" cb="0"/><line nr="164" mi="0" ci="11" mb="0" cb="0"/><line nr="166" mi="0" ci="4" mb="0" cb="0"/><line nr="167" mi="0" ci="1" mb="0" cb="0"/><line nr="172" mi="0" ci="5" mb="0" cb="0"/><line nr="176" mi="1" ci="8" mb="1" cb="1"/><line nr="179" mi="0" ci="10" mb="0" cb="0"/><line nr="181" mi="0" ci="6" mb="2" cb="2"/><line nr="182" mi="0" ci="8" mb="0" cb="0"/><line nr="183" mi="0" ci="5" mb="0" cb="0"/><line nr="184" mi="0" ci="7" mb="0" cb="0"/><line nr="185" mi="0" ci="19" mb="0" cb="0"/><line nr="187" mi="0" ci="9" mb="0" cb="2"/><line nr="188" mi="0" ci="12" mb="0" cb="0"/><line nr="190" mi="0" ci="7" mb="0" cb="2"/><line nr="191" mi="0" ci="5" mb="0" cb="0"/><line nr="195" mi="0" ci="1" mb="0" cb="0"/><line nr="206" mi="0" ci="3" mb="0" cb="0"/><line nr="217" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1" covered="348"/><counter type="BRANCH" missed="3" covered="21"/><counter type="LINE" missed="0" covered="62"/><counter type="COMPLEXITY" missed="3" covered="19"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LinearRegression.java"><line nr="16" mi="0" ci="4" mb="0" cb="0"/><line nr="18" mi="0" ci="5" mb="0" cb="0"/><line nr="27" mi="0" ci="2" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="0" ci="5" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="1" ci="7" mb="1" cb="1"/><line nr="57" mi="0" ci="6" mb="2" cb="2"/><line nr="58" mi="0" ci="8" mb="0" cb="0"/><line nr="59" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="0" ci="8" mb="0" cb="0"/><line nr="61" mi="0" ci="13" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1" covered="78"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="98" covered="1930"/><counter type="BRANCH" missed="24" covered="86"/><counter type="LINE" missed="20" covered="354"/><counter type="COMPLEXITY" missed="29" covered="89"/><counter type="METHOD" missed="5" covered="58"/><counter type="CLASS" missed="0" covered="9"/></package><package name="com/jml/neural_network"><class name="com/jml/neural_network/NeuralNetwork" sourcefilename="NeuralNetwork.java"><method name="&lt;init&gt;" desc="()V" line="46"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(I)V" line="46"><counter type="INSTRUCTION" missed="55" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(DI)V" line="46"><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(DII)V" line="46"><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(DIID)V" line="46"><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jml/optimizers/Optimizer;)V" line="46"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/jml/optimizers/Optimizer;I)V" line="46"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jml/optimizers/Optimizer;II)V" line="46"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jml/optimizers/Optimizer;IID)V" line="46"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fit" desc="([[D[[D)Lcom/jml/neural_network/NeuralNetwork;" line="289"><counter type="INSTRUCTION" missed="5" covered="206"/><counter type="BRANCH" missed="1" covered="19"/><counter type="LINE" missed="1" covered="36"/><counter type="COMPLEXITY" missed="1" covered="10"/><counter type="METHOD" missed="0" covered="1"/></method><method name="feedForward" desc="(Llinalg/Matrix;)Llinalg/Matrix;" line="363"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="back" desc="(Llinalg/Matrix;Llinalg/Matrix;Llinalg/Matrix;)V" line="393"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applyUpdates" desc="()V" line="418"><counter type="INSTRUCTION" missed="8" covered="373"/><counter type="BRANCH" missed="3" covered="17"/><counter type="LINE" missed="1" covered="42"/><counter type="COMPLEXITY" missed="3" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initMomentum" desc="()V" line="502"><counter type="INSTRUCTION" missed="8" covered="64"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initAdam" desc="()V" line="522"><counter type="INSTRUCTION" missed="8" covered="105"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="predict" desc="([[D)[[D" line="556"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="predict" desc="(Llinalg/Matrix;Llinalg/Matrix;)Llinalg/Matrix;" line="574"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParams" desc="()Llinalg/Matrix;" line="586"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Lcom/jml/neural_network/layers/BaseLayer;)V" line="604"><counter type="INSTRUCTION" missed="22" covered="55"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="3" covered="10"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLossHist" desc="()Ljava/util/List;" line="632"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="validateParams" desc="()V" line="638"><counter type="INSTRUCTION" missed="28" covered="18"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="4" covered="5"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="saveModel" desc="(Ljava/lang/String;)V" line="662"><counter type="INSTRUCTION" missed="10" covered="100"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="2" covered="19"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildDetails" desc="()V" line="701"><counter type="INSTRUCTION" missed="0" covered="92"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inspect" desc="()Ljava/lang/String;" line="732"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="743"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="202" covered="1503"/><counter type="BRANCH" missed="15" covered="83"/><counter type="LINE" missed="36" covered="242"/><counter type="COMPLEXITY" missed="20" covered="54"/><counter type="METHOD" missed="5" covered="20"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/neural_network/ModelTags" sourcefilename="ModelTags.java"><method name="&lt;clinit&gt;" desc="()V" line="3"><counter type="INSTRUCTION" missed="0" covered="63"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="63"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ModelTags.java"><line nr="3" mi="0" ci="3" mb="0" cb="0"/><line nr="4" mi="0" ci="60" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="63"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NeuralNetwork.java"><line nr="46" mi="8" ci="28" mb="0" cb="0"/><line nr="53" mi="6" ci="21" mb="0" cb="0"/><line nr="55" mi="6" ci="21" mb="0" cb="0"/><line nr="56" mi="10" ci="35" mb="0" cb="0"/><line nr="70" mi="16" ci="56" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="5" mb="0" cb="0"/><line nr="97" mi="0" ci="7" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="0" ci="2" mb="0" cb="0"/><line nr="100" mi="0" ci="1" mb="0" cb="0"/><line nr="113" mi="2" ci="0" mb="0" cb="0"/><line nr="114" mi="4" ci="0" mb="0" cb="0"/><line nr="115" mi="3" ci="0" mb="0" cb="0"/><line nr="116" mi="3" ci="0" mb="0" cb="0"/><line nr="117" mi="3" ci="0" mb="0" cb="0"/><line nr="118" mi="5" ci="0" mb="0" cb="0"/><line nr="120" mi="7" ci="0" mb="0" cb="0"/><line nr="121" mi="2" ci="0" mb="0" cb="0"/><line nr="122" mi="2" ci="0" mb="0" cb="0"/><line nr="123" mi="1" ci="0" mb="0" cb="0"/><line nr="134" mi="0" ci="2" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="0" cb="0"/><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="138" mi="0" ci="5" mb="0" cb="0"/><line nr="139" mi="0" ci="3" mb="0" cb="0"/><line nr="140" mi="0" ci="6" mb="0" cb="0"/><line nr="141" mi="0" ci="2" mb="0" cb="0"/><line nr="142" mi="0" ci="2" mb="0" cb="0"/><line nr="143" mi="0" ci="1" mb="0" cb="0"/><line nr="154" mi="0" ci="2" mb="0" cb="0"/><line nr="155" mi="0" ci="3" mb="0" cb="0"/><line nr="156" mi="0" ci="3" mb="0" cb="0"/><line nr="157" mi="0" ci="3" mb="0" cb="0"/><line nr="158" mi="0" ci="5" mb="0" cb="0"/><line nr="159" mi="0" ci="3" mb="0" cb="0"/><line nr="160" mi="0" ci="6" mb="0" cb="0"/><line nr="161" mi="0" ci="2" mb="0" cb="0"/><line nr="162" mi="0" ci="2" mb="0" cb="0"/><line nr="163" mi="0" ci="1" mb="0" cb="0"/><line nr="176" mi="0" ci="2" mb="0" cb="0"/><line nr="177" mi="0" ci="3" mb="0" cb="0"/><line nr="178" mi="0" ci="3" mb="0" cb="0"/><line nr="179" mi="0" ci="3" mb="0" cb="0"/><line nr="180" mi="0" ci="3" mb="0" cb="0"/><line nr="181" mi="0" ci="5" mb="0" cb="0"/><line nr="183" mi="0" ci="6" mb="0" cb="0"/><line nr="184" mi="0" ci="2" mb="0" cb="0"/><line nr="185" mi="0" ci="2" mb="0" cb="0"/><line nr="186" mi="0" ci="1" mb="0" cb="0"/><line nr="200" mi="2" ci="0" mb="0" cb="0"/><line nr="201" mi="4" ci="0" mb="0" cb="0"/><line nr="202" mi="3" ci="0" mb="0" cb="0"/><line nr="203" mi="3" ci="0" mb="0" cb="0"/><line nr="204" mi="3" ci="0" mb="0" cb="0"/><line nr="205" mi="5" ci="0" mb="0" cb="0"/><line nr="206" mi="3" ci="0" mb="0" cb="0"/><line nr="207" mi="2" ci="0" mb="0" cb="0"/><line nr="208" mi="2" ci="0" mb="0" cb="0"/><line nr="209" mi="1" ci="0" mb="0" cb="0"/><line nr="220" mi="0" ci="2" mb="0" cb="0"/><line nr="221" mi="0" ci="4" mb="0" cb="0"/><line nr="222" mi="0" ci="3" mb="0" cb="0"/><line nr="223" mi="0" ci="3" mb="0" cb="0"/><line nr="224" mi="0" ci="3" mb="0" cb="0"/><line nr="225" mi="0" ci="5" mb="0" cb="0"/><line nr="226" mi="0" ci="3" mb="0" cb="0"/><line nr="227" mi="0" ci="2" mb="0" cb="0"/><line nr="228" mi="0" ci="2" mb="0" cb="0"/><line nr="229" mi="0" ci="1" mb="0" cb="0"/><line nr="241" mi="0" ci="2" mb="0" cb="0"/><line nr="242" mi="0" ci="4" mb="0" cb="0"/><line nr="243" mi="0" ci="3" mb="0" cb="0"/><line nr="244" mi="0" ci="3" mb="0" cb="0"/><line nr="245" mi="0" ci="3" mb="0" cb="0"/><line nr="246" mi="0" ci="5" mb="0" cb="0"/><line nr="247" mi="0" ci="3" mb="0" cb="0"/><line nr="248" mi="0" ci="2" mb="0" cb="0"/><line nr="249" mi="0" ci="2" mb="0" cb="0"/><line nr="250" mi="0" ci="1" mb="0" cb="0"/><line nr="264" mi="0" ci="2" mb="0" cb="0"/><line nr="265" mi="0" ci="4" mb="0" cb="0"/><line nr="266" mi="0" ci="3" mb="0" cb="0"/><line nr="267" mi="0" ci="3" mb="0" cb="0"/><line nr="268" mi="0" ci="3" mb="0" cb="0"/><line nr="269" mi="0" ci="5" mb="0" cb="0"/><line nr="270" mi="0" ci="3" mb="0" cb="0"/><line nr="271" mi="0" ci="2" mb="0" cb="0"/><line nr="272" mi="0" ci="2" mb="0" cb="0"/><line nr="273" mi="0" ci="1" mb="0" cb="0"/><line nr="289" mi="0" ci="4" mb="1" cb="1"/><line nr="290" mi="5" ci="0" mb="0" cb="0"/><line nr="293" mi="0" ci="4" mb="0" cb="2"/><line nr="294" mi="0" ci="3" mb="0" cb="0"/><line nr="295" mi="0" ci="4" mb="0" cb="2"/><line nr="296" mi="0" ci="2" mb="0" cb="0"/><line nr="299" mi="0" ci="3" mb="0" cb="0"/><line nr="301" mi="0" ci="4" mb="0" cb="0"/><line nr="302" mi="0" ci="4" mb="0" cb="0"/><line nr="304" mi="0" ci="9" mb="0" cb="2"/><line nr="306" mi="0" ci="2" mb="0" cb="0"/><line nr="308" mi="0" ci="2" mb="0" cb="0"/><line nr="309" mi="0" ci="5" mb="0" cb="0"/><line nr="314" mi="0" ci="2" mb="0" cb="2"/><line nr="315" mi="0" ci="5" mb="0" cb="0"/><line nr="318" mi="0" ci="7" mb="0" cb="0"/><line nr="319" mi="0" ci="13" mb="0" cb="0"/><line nr="321" mi="0" ci="8" mb="0" cb="2"/><line nr="323" mi="0" ci="2" mb="0" cb="2"/><line nr="325" mi="0" ci="11" mb="0" cb="0"/><line nr="326" mi="0" ci="5" mb="0" cb="0"/><line nr="327" mi="0" ci="5" mb="0" cb="0"/><line nr="330" mi="0" ci="12" mb="0" cb="2"/><line nr="331" mi="0" ci="8" mb="0" cb="0"/><line nr="332" mi="0" ci="9" mb="0" cb="0"/><line nr="333" mi="0" ci="4" mb="0" cb="0"/><line nr="334" mi="0" ci="12" mb="0" cb="0"/><line nr="336" mi="0" ci="2" mb="0" cb="0"/><line nr="339" mi="0" ci="7" mb="0" cb="0"/><line nr="340" mi="0" ci="16" mb="0" cb="0"/><line nr="342" mi="0" ci="14" mb="0" cb="2"/><line nr="343" mi="0" ci="1" mb="0" cb="0"/><line nr="346" mi="0" ci="4" mb="0" cb="2"/><line nr="347" mi="0" ci="6" mb="0" cb="0"/><line nr="351" mi="0" ci="3" mb="0" cb="0"/><line nr="352" mi="0" ci="2" mb="0" cb="0"/><line nr="354" mi="0" ci="2" mb="0" cb="0"/><line nr="363" mi="0" ci="5" mb="0" cb="0"/><line nr="364" mi="0" ci="11" mb="0" cb="2"/><line nr="366" mi="0" ci="3" mb="0" cb="2"/><line nr="367" mi="0" ci="3" mb="0" cb="2"/><line nr="369" mi="0" ci="5" mb="0" cb="0"/><line nr="373" mi="0" ci="4" mb="0" cb="0"/><line nr="375" mi="0" ci="1" mb="0" cb="0"/><line nr="377" mi="0" ci="2" mb="0" cb="0"/><line nr="393" mi="0" ci="4" mb="0" cb="0"/><line nr="395" mi="0" ci="11" mb="0" cb="2"/><line nr="397" mi="0" ci="6" mb="0" cb="2"/><line nr="399" mi="0" ci="8" mb="0" cb="0"/><line nr="403" mi="0" ci="6" mb="0" cb="2"/><line nr="404" mi="0" ci="8" mb="0" cb="0"/><line nr="406" mi="0" ci="1" mb="0" cb="0"/><line nr="418" mi="0" ci="4" mb="0" cb="2"/><line nr="421" mi="0" ci="11" mb="0" cb="2"/><line nr="423" mi="0" ci="3" mb="1" cb="1"/><line nr="424" mi="0" ci="3" mb="0" cb="0"/><line nr="425" mi="0" ci="3" mb="0" cb="0"/><line nr="427" mi="0" ci="24" mb="0" cb="0"/><line nr="428" mi="0" ci="24" mb="0" cb="0"/><line nr="430" mi="0" ci="12" mb="0" cb="0"/><line nr="431" mi="0" ci="2" mb="0" cb="0"/><line nr="433" mi="0" ci="2" mb="0" cb="0"/><line nr="435" mi="0" ci="4" mb="0" cb="2"/><line nr="436" mi="0" ci="2" mb="0" cb="0"/><line nr="441" mi="0" ci="11" mb="0" cb="2"/><line nr="444" mi="0" ci="3" mb="1" cb="1"/><line nr="445" mi="0" ci="3" mb="0" cb="0"/><line nr="446" mi="0" ci="3" mb="0" cb="0"/><line nr="448" mi="0" ci="29" mb="0" cb="0"/><line nr="449" mi="0" ci="31" mb="0" cb="0"/><line nr="452" mi="0" ci="16" mb="0" cb="0"/><line nr="453" mi="0" ci="2" mb="0" cb="0"/><line nr="455" mi="0" ci="7" mb="0" cb="0"/><line nr="456" mi="0" ci="9" mb="0" cb="0"/><line nr="458" mi="0" ci="1" mb="0" cb="0"/><line nr="460" mi="0" ci="1" mb="0" cb="0"/><line nr="462" mi="0" ci="5" mb="1" cb="1"/><line nr="463" mi="0" ci="2" mb="0" cb="0"/><line nr="468" mi="0" ci="11" mb="0" cb="2"/><line nr="471" mi="0" ci="3" mb="0" cb="2"/><line nr="472" mi="0" ci="3" mb="0" cb="0"/><line nr="473" mi="0" ci="3" mb="0" cb="0"/><line nr="475" mi="0" ci="41" mb="0" cb="2"/><line nr="477" mi="0" ci="41" mb="0" cb="0"/><line nr="481" mi="0" ci="16" mb="0" cb="0"/><line nr="482" mi="0" ci="2" mb="0" cb="0"/><line nr="484" mi="0" ci="7" mb="0" cb="0"/><line nr="485" mi="0" ci="9" mb="0" cb="0"/><line nr="487" mi="0" ci="7" mb="0" cb="0"/><line nr="488" mi="0" ci="9" mb="0" cb="0"/><line nr="490" mi="0" ci="1" mb="0" cb="0"/><line nr="492" mi="0" ci="1" mb="0" cb="0"/><line nr="494" mi="0" ci="1" mb="0" cb="0"/><line nr="495" mi="8" ci="0" mb="0" cb="0"/><line nr="497" mi="0" ci="1" mb="0" cb="0"/><line nr="502" mi="0" ci="4" mb="1" cb="1"/><line nr="503" mi="8" ci="0" mb="0" cb="0"/><line nr="506" mi="0" ci="7" mb="0" cb="0"/><line nr="507" mi="0" ci="2" mb="0" cb="0"/><line nr="509" mi="0" ci="9" mb="0" cb="2"/><line nr="511" mi="0" ci="6" mb="1" cb="1"/><line nr="512" mi="0" ci="19" mb="0" cb="0"/><line nr="513" mi="0" ci="15" mb="0" cb="0"/><line nr="514" mi="0" ci="1" mb="0" cb="0"/><line nr="517" mi="0" ci="1" mb="0" cb="0"/><line nr="522" mi="0" ci="4" mb="1" cb="1"/><line nr="523" mi="8" ci="0" mb="0" cb="0"/><line nr="526" mi="0" ci="7" mb="0" cb="0"/><line nr="527" mi="0" ci="7" mb="0" cb="0"/><line nr="528" mi="0" ci="2" mb="0" cb="0"/><line nr="530" mi="0" ci="9" mb="0" cb="2"/><line nr="532" mi="0" ci="6" mb="0" cb="2"/><line nr="534" mi="0" ci="19" mb="0" cb="0"/><line nr="535" mi="0" ci="15" mb="0" cb="0"/><line nr="537" mi="0" ci="19" mb="0" cb="0"/><line nr="538" mi="0" ci="15" mb="0" cb="0"/><line nr="540" mi="0" ci="1" mb="0" cb="0"/><line nr="543" mi="0" ci="1" mb="0" cb="0"/><line nr="556" mi="0" ci="14" mb="0" cb="0"/><line nr="558" mi="0" ci="8" mb="0" cb="2"/><line nr="559" mi="0" ci="15" mb="0" cb="0"/><line nr="562" mi="0" ci="2" mb="0" cb="0"/><line nr="574" mi="2" ci="0" mb="0" cb="0"/><line nr="586" mi="2" ci="0" mb="0" cb="0"/><line nr="604" mi="0" ci="4" mb="0" cb="2"/><line nr="605" mi="0" ci="4" mb="1" cb="1"/><line nr="606" mi="5" ci="0" mb="0" cb="0"/><line nr="610" mi="0" ci="4" mb="0" cb="2"/><line nr="611" mi="0" ci="13" mb="0" cb="0"/><line nr="614" mi="0" ci="13" mb="1" cb="1"/><line nr="615" mi="8" ci="0" mb="0" cb="0"/><line nr="616" mi="9" ci="0" mb="0" cb="0"/><line nr="622" mi="0" ci="3" mb="0" cb="2"/><line nr="623" mi="0" ci="6" mb="0" cb="0"/><line nr="626" mi="0" ci="5" mb="0" cb="0"/><line nr="627" mi="0" ci="2" mb="0" cb="0"/><line nr="628" mi="0" ci="1" mb="0" cb="0"/><line nr="632" mi="3" ci="0" mb="0" cb="0"/><line nr="638" mi="0" ci="3" mb="1" cb="1"/><line nr="639" mi="7" ci="0" mb="0" cb="0"/><line nr="641" mi="0" ci="5" mb="1" cb="1"/><line nr="642" mi="7" ci="0" mb="0" cb="0"/><line nr="644" mi="0" ci="5" mb="1" cb="1"/><line nr="645" mi="7" ci="0" mb="0" cb="0"/><line nr="647" mi="0" ci="4" mb="1" cb="1"/><line nr="648" mi="7" ci="0" mb="0" cb="0"/><line nr="650" mi="0" ci="1" mb="0" cb="0"/><line nr="662" mi="0" ci="3" mb="1" cb="1"/><line nr="663" mi="5" ci="0" mb="0" cb="0"/><line nr="665" mi="0" ci="4" mb="1" cb="1"/><line nr="666" mi="5" ci="0" mb="0" cb="0"/><line nr="669" mi="0" ci="6" mb="0" cb="0"/><line nr="671" mi="0" ci="4" mb="0" cb="0"/><line nr="672" mi="0" ci="7" mb="0" cb="0"/><line nr="673" mi="0" ci="7" mb="0" cb="0"/><line nr="674" mi="0" ci="7" mb="0" cb="0"/><line nr="675" mi="0" ci="5" mb="0" cb="0"/><line nr="678" mi="0" ci="10" mb="0" cb="0"/><line nr="679" mi="0" ci="10" mb="0" cb="0"/><line nr="683" mi="0" ci="2" mb="0" cb="0"/><line nr="684" mi="0" ci="4" mb="0" cb="0"/><line nr="686" mi="0" ci="11" mb="0" cb="2"/><line nr="687" mi="0" ci="3" mb="0" cb="2"/><line nr="688" mi="0" ci="10" mb="0" cb="0"/><line nr="689" mi="0" ci="1" mb="0" cb="0"/><line nr="691" mi="0" ci="1" mb="0" cb="0"/><line nr="693" mi="0" ci="4" mb="0" cb="0"/><line nr="694" mi="0" ci="1" mb="0" cb="0"/><line nr="701" mi="0" ci="5" mb="0" cb="0"/><line nr="705" mi="0" ci="9" mb="0" cb="2"/><line nr="708" mi="0" ci="10" mb="0" cb="0"/><line nr="709" mi="0" ci="10" mb="0" cb="0"/><line nr="710" mi="0" ci="11" mb="0" cb="0"/><line nr="712" mi="0" ci="4" mb="0" cb="2"/><line nr="713" mi="0" ci="13" mb="0" cb="0"/><line nr="715" mi="0" ci="2" mb="0" cb="0"/><line nr="716" mi="0" ci="11" mb="0" cb="2"/><line nr="717" mi="0" ci="14" mb="0" cb="0"/><line nr="718" mi="0" ci="1" mb="0" cb="0"/><line nr="719" mi="0" ci="1" mb="0" cb="0"/><line nr="721" mi="0" ci="1" mb="0" cb="0"/><line nr="732" mi="0" ci="4" mb="0" cb="0"/><line nr="743" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="202" covered="1503"/><counter type="BRANCH" missed="15" covered="83"/><counter type="LINE" missed="36" covered="242"/><counter type="COMPLEXITY" missed="20" covered="54"/><counter type="METHOD" missed="5" covered="20"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="202" covered="1566"/><counter type="BRANCH" missed="15" covered="83"/><counter type="LINE" missed="36" covered="244"/><counter type="COMPLEXITY" missed="20" covered="55"/><counter type="METHOD" missed="5" covered="21"/><counter type="CLASS" missed="0" covered="2"/></package><package name="com/jml/neural_network/layers"><class name="com/jml/neural_network/layers/Dropout" sourcefilename="Dropout.java"><method name="&lt;init&gt;" desc="(D)V" line="21"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(ID)V" line="21"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forward" desc="(Llinalg/Matrix;)Llinalg/Matrix;" line="73"><counter type="INSTRUCTION" missed="13" covered="21"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="back" desc="(Llinalg/Matrix;)Llinalg/Matrix;" line="88"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInDim" desc="()I" line="99"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOutDim" desc="()I" line="109"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="updateInDim" desc="(I)V" line="121"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initMask" desc="(I)V" line="131"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inspect" desc="()Ljava/lang/String;" line="152"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDetails" desc="()Ljava/lang/String;" line="163"><counter type="INSTRUCTION" missed="55" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="74" covered="150"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="9" covered="32"/><counter type="COMPLEXITY" missed="4" covered="10"/><counter type="METHOD" missed="2" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/neural_network/layers/TrainableLayer" sourcefilename="TrainableLayer.java"/><class name="com/jml/neural_network/layers/BaseLayer" sourcefilename="BaseLayer.java"><method name="getParams" desc="()[Llinalg/Matrix;" line="55"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setParams" desc="([Llinalg/Matrix;)V" line="66"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getUpdates" desc="()[Llinalg/Matrix;" line="75"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resetGradients" desc="()V" line="84"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jml/neural_network/layers/Dense" sourcefilename="Dense.java"><method name="&lt;init&gt;" desc="(IILcom/jml/neural_network/activations/ActivationFunction;)V" line="19"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(IILcom/jml/neural_network/activations/ActivationFunction;Lcom/jml/neural_network/layers/initilizers/Initializer;)V" line="19"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(IILcom/jml/neural_network/activations/ActivationFunction;Lcom/jml/neural_network/layers/initilizers/Initializer;Lcom/jml/neural_network/layers/initilizers/Initializer;)V" line="19"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(ILcom/jml/neural_network/activations/ActivationFunction;)V" line="19"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(ILcom/jml/neural_network/activations/ActivationFunction;Lcom/jml/neural_network/layers/initilizers/Initializer;)V" line="19"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(ILcom/jml/neural_network/activations/ActivationFunction;Lcom/jml/neural_network/layers/initilizers/Initializer;Lcom/jml/neural_network/layers/initilizers/Initializer;)V" line="19"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forward" desc="(Llinalg/Matrix;)Llinalg/Matrix;" line="120"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="back" desc="(Llinalg/Matrix;)Llinalg/Matrix;" line="133"><counter type="INSTRUCTION" missed="1" covered="33"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inspect" desc="()Ljava/lang/String;" line="152"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDetails" desc="()Ljava/lang/String;" line="166"><counter type="INSTRUCTION" missed="0" covered="83"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="187"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="215"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="37"/><counter type="COMPLEXITY" missed="2" covered="10"/><counter type="METHOD" missed="1" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/neural_network/layers/Linear" sourcefilename="Linear.java"><method name="&lt;init&gt;" desc="(II)V" line="19"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(IILcom/jml/neural_network/layers/initilizers/Initializer;)V" line="19"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(IILcom/jml/neural_network/layers/initilizers/Initializer;Lcom/jml/neural_network/layers/initilizers/Initializer;)V" line="19"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(I)V" line="19"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(ILcom/jml/neural_network/layers/initilizers/Initializer;)V" line="19"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(ILcom/jml/neural_network/layers/initilizers/Initializer;Lcom/jml/neural_network/layers/initilizers/Initializer;)V" line="19"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forward" desc="(Llinalg/Matrix;)Llinalg/Matrix;" line="147"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="back" desc="(Llinalg/Matrix;)Llinalg/Matrix;" line="163"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resetGradients" desc="()V" line="177"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInDim" desc="()I" line="189"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOutDim" desc="()I" line="200"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="updateInDim" desc="(I)V" line="210"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParams" desc="()[Llinalg/Matrix;" line="222"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getUpdates" desc="()[Llinalg/Matrix;" line="232"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setParams" desc="([Llinalg/Matrix;)V" line="243"><counter type="INSTRUCTION" missed="31" covered="29"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="5" covered="6"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inspect" desc="()Ljava/lang/String;" line="267"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initLayer" desc="()V" line="277"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDetails" desc="()Ljava/lang/String;" line="291"><counter type="INSTRUCTION" missed="0" covered="70"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="311"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="33" covered="357"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="6" covered="76"/><counter type="COMPLEXITY" missed="4" covered="18"/><counter type="METHOD" missed="1" covered="18"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Dense.java"><line nr="19" mi="0" ci="18" mb="0" cb="0"/><line nr="31" mi="0" ci="4" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="6" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="108" mi="0" ci="5" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="1" mb="0" cb="0"/><line nr="120" mi="0" ci="7" mb="0" cb="0"/><line nr="133" mi="1" ci="4" mb="1" cb="1"/><line nr="136" mi="0" ci="8" mb="0" cb="0"/><line nr="137" mi="0" ci="7" mb="0" cb="0"/><line nr="138" mi="0" ci="4" mb="0" cb="0"/><line nr="139" mi="0" ci="7" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="0" cb="0"/><line nr="152" mi="0" ci="16" mb="0" cb="0"/><line nr="154" mi="0" ci="4" mb="0" cb="0"/><line nr="155" mi="0" ci="3" mb="0" cb="0"/><line nr="166" mi="0" ci="4" mb="0" cb="0"/><line nr="169" mi="0" ci="10" mb="0" cb="0"/><line nr="170" mi="0" ci="9" mb="0" cb="0"/><line nr="171" mi="0" ci="11" mb="0" cb="0"/><line nr="172" mi="0" ci="10" mb="0" cb="0"/><line nr="173" mi="0" ci="10" mb="0" cb="0"/><line nr="176" mi="0" ci="26" mb="0" cb="0"/><line nr="178" mi="0" ci="3" mb="0" cb="0"/><line nr="187" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="215"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="37"/><counter type="COMPLEXITY" missed="2" covered="10"/><counter type="METHOD" missed="1" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Linear.java"><line nr="19" mi="0" ci="18" mb="0" cb="0"/><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="5" mb="0" cb="0"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="5" mb="0" cb="0"/><line nr="100" mi="0" ci="5" mb="0" cb="0"/><line nr="101" mi="0" ci="1" mb="0" cb="0"/><line nr="112" mi="0" ci="2" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="0" cb="0"/><line nr="117" mi="0" ci="5" mb="0" cb="0"/><line nr="118" mi="0" ci="1" mb="0" cb="0"/><line nr="130" mi="0" ci="2" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="0"/><line nr="136" mi="0" ci="1" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="0" cb="0"/><line nr="148" mi="0" ci="9" mb="0" cb="0"/><line nr="150" mi="0" ci="3" mb="0" cb="0"/><line nr="163" mi="0" ci="7" mb="0" cb="0"/><line nr="164" mi="0" ci="4" mb="0" cb="0"/><line nr="166" mi="0" ci="7" mb="0" cb="0"/><line nr="168" mi="0" ci="3" mb="0" cb="0"/><line nr="177" mi="0" ci="9" mb="0" cb="0"/><line nr="178" mi="0" ci="8" mb="0" cb="0"/><line nr="179" mi="0" ci="1" mb="0" cb="0"/><line nr="189" mi="0" ci="3" mb="0" cb="0"/><line nr="200" mi="0" ci="3" mb="0" cb="0"/><line nr="210" mi="0" ci="3" mb="0" cb="0"/><line nr="211" mi="0" ci="2" mb="0" cb="0"/><line nr="212" mi="0" ci="1" mb="0" cb="0"/><line nr="222" mi="0" ci="13" mb="0" cb="0"/><line nr="232" mi="0" ci="13" mb="0" cb="0"/><line nr="243" mi="0" ci="4" mb="1" cb="1"/><line nr="244" mi="7" ci="0" mb="0" cb="0"/><line nr="247" mi="0" ci="7" mb="1" cb="1"/><line nr="248" mi="4" ci="0" mb="0" cb="0"/><line nr="249" mi="8" ci="0" mb="0" cb="0"/><line nr="251" mi="0" ci="7" mb="1" cb="1"/><line nr="252" mi="4" ci="0" mb="0" cb="0"/><line nr="253" mi="8" ci="0" mb="0" cb="0"/><line nr="256" mi="0" ci="5" mb="0" cb="0"/><line nr="257" mi="0" ci="5" mb="0" cb="0"/><line nr="258" mi="0" ci="1" mb="0" cb="0"/><line nr="267" mi="0" ci="17" mb="0" cb="0"/><line nr="269" mi="0" ci="3" mb="0" cb="0"/><line nr="277" mi="0" ci="9" mb="0" cb="0"/><line nr="278" mi="0" ci="8" mb="0" cb="0"/><line nr="279" mi="0" ci="2" mb="0" cb="0"/><line nr="280" mi="0" ci="1" mb="0" cb="0"/><line nr="291" mi="0" ci="4" mb="0" cb="0"/><line nr="294" mi="0" ci="10" mb="0" cb="0"/><line nr="295" mi="0" ci="11" mb="0" cb="0"/><line nr="296" mi="0" ci="10" mb="0" cb="0"/><line nr="297" mi="0" ci="10" mb="0" cb="0"/><line nr="300" mi="0" ci="22" mb="0" cb="0"/><line nr="302" mi="0" ci="3" mb="0" cb="0"/><line nr="311" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="33" covered="357"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="6" covered="76"/><counter type="COMPLEXITY" missed="4" covered="18"/><counter type="METHOD" missed="1" covered="18"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BaseLayer.java"><line nr="55" mi="2" ci="0" mb="0" cb="0"/><line nr="66" mi="1" ci="0" mb="0" cb="0"/><line nr="75" mi="2" ci="0" mb="0" cb="0"/><line nr="84" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Dropout.java"><line nr="21" mi="0" ci="6" mb="0" cb="0"/><line nr="33" mi="0" ci="6" mb="0" cb="0"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="7" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="7" mb="0" cb="0"/><line nr="59" mi="0" ci="7" mb="0" cb="0"/><line nr="60" mi="0" ci="7" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="4" ci="5" mb="3" cb="1"/><line nr="74" mi="9" ci="0" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="9" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="3" ci="0" mb="0" cb="0"/><line nr="89" mi="3" ci="0" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="0" ci="7" mb="0" cb="0"/><line nr="123" mi="0" ci="7" mb="0" cb="0"/><line nr="124" mi="0" ci="1" mb="0" cb="0"/><line nr="131" mi="0" ci="7" mb="0" cb="0"/><line nr="133" mi="0" ci="9" mb="0" cb="2"/><line nr="134" mi="0" ci="4" mb="0" cb="0"/><line nr="135" mi="0" ci="2" mb="0" cb="2"/><line nr="136" mi="0" ci="6" mb="0" cb="0"/><line nr="140" mi="0" ci="5" mb="0" cb="0"/><line nr="141" mi="0" ci="6" mb="0" cb="0"/><line nr="142" mi="0" ci="1" mb="0" cb="0"/><line nr="152" mi="0" ci="10" mb="0" cb="0"/><line nr="163" mi="4" ci="0" mb="0" cb="0"/><line nr="166" mi="10" ci="0" mb="0" cb="0"/><line nr="167" mi="11" ci="0" mb="0" cb="0"/><line nr="168" mi="9" ci="0" mb="0" cb="0"/><line nr="171" mi="18" ci="0" mb="0" cb="0"/><line nr="173" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="74" covered="150"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="9" covered="32"/><counter type="COMPLEXITY" missed="4" covered="10"/><counter type="METHOD" missed="2" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TrainableLayer.java"/><counter type="INSTRUCTION" missed="116" covered="722"/><counter type="BRANCH" missed="7" covered="9"/><counter type="LINE" missed="20" covered="145"/><counter type="COMPLEXITY" missed="14" covered="38"/><counter type="METHOD" missed="8" covered="36"/><counter type="CLASS" missed="1" covered="3"/></package><package name="com/jml/core"><class name="com/jml/core/NeuralNetFromData" sourcefilename="NeuralNetFromData.java"><method name="&lt;init&gt;" desc="()V" line="14"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="(Ljava/util/List;Ljava/util/List;)Lcom/jml/core/Model;" line="19"><counter type="INSTRUCTION" missed="17" covered="143"/><counter type="BRANCH" missed="5" covered="11"/><counter type="LINE" missed="2" covered="31"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createLayer" desc="(Ljava/util/List;Ljava/util/List;)Lcom/jml/neural_network/layers/BaseLayer;" line="83"><counter type="INSTRUCTION" missed="27" covered="244"/><counter type="BRANCH" missed="5" covered="27"/><counter type="LINE" missed="5" covered="46"/><counter type="COMPLEXITY" missed="5" covered="12"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="44" covered="390"/><counter type="BRANCH" missed="10" covered="38"/><counter type="LINE" missed="7" covered="78"/><counter type="COMPLEXITY" missed="9" covered="18"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/core/Metrics" sourcefilename="Metrics.java"><method name="&lt;init&gt;" desc="()V" line="6"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accuracy" desc="([[D[[D)D" line="19"><counter type="INSTRUCTION" missed="0" covered="59"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accuracy" desc="([D[D)D" line="45"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accuracy" desc="([I[I)D" line="70"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="48" covered="101"/><counter type="BRANCH" missed="6" covered="14"/><counter type="LINE" missed="9" covered="14"/><counter type="COMPLEXITY" missed="5" covered="9"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/core/LogRegFromData" sourcefilename="LogRegFromData.java"><method name="&lt;init&gt;" desc="()V" line="12"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="(Ljava/util/List;Ljava/util/List;)Lcom/jml/core/Model;" line="16"><counter type="INSTRUCTION" missed="5" covered="72"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="19"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="75"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="20"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/core/Stats" sourcefilename="Stats.java"><method name="&lt;init&gt;" desc="()V" line="17"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="round" desc="(DI)D" line="23"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mean" desc="([D)D" line="36"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="median" desc="([D)D" line="54"><counter type="INSTRUCTION" missed="0" covered="68"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mode" desc="([D)D" line="85"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="variance" desc="([D)D" line="113"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="std" desc="([D)D" line="131"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="stdPop" desc="([D)D" line="149"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="determination" desc="([D[D)D" line="165"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="correlation" desc="([D[D)D" line="184"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sse" desc="([D[D)D" line="196"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sst" desc="([D)D" line="215"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="min" desc="([D)D" line="233"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="minIndex" desc="([D)I" line="252"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="minIndices" desc="([DI)[I" line="274"><counter type="INSTRUCTION" missed="8" covered="88"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="1" covered="16"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="max" desc="([D)D" line="323"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sum" desc="([D)D" line="342"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="genRandBoolean" desc="(D)Z" line="360"><counter type="INSTRUCTION" missed="6" covered="17"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="15"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="26" covered="478"/><counter type="BRANCH" missed="4" covered="54"/><counter type="LINE" missed="5" covered="96"/><counter type="COMPLEXITY" missed="6" covered="42"/><counter type="METHOD" missed="2" covered="17"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/core/KnnFromData" sourcefilename="KnnFromData.java"><method name="&lt;init&gt;" desc="()V" line="15"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="(Ljava/util/List;Ljava/util/List;)Lcom/jml/core/Model;" line="24"><counter type="INSTRUCTION" missed="5" covered="143"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="1" covered="32"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="146"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="1" covered="33"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/core/ModelFromData" sourcefilename="ModelFromData.java"><method name="&lt;init&gt;" desc="()V" line="7"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="create" desc="(Ljava/util/List;)Lcom/jml/core/Model;" line="12"><counter type="INSTRUCTION" missed="15" covered="122"/><counter type="BRANCH" missed="3" covered="17"/><counter type="LINE" missed="3" covered="25"/><counter type="COMPLEXITY" missed="3" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getContent" desc="(Ljava/lang/String;)Ljava/lang/String;" line="69"><counter type="INSTRUCTION" missed="10" covered="88"/><counter type="BRANCH" missed="5" covered="17"/><counter type="LINE" missed="2" covered="16"/><counter type="COMPLEXITY" missed="5" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTag" desc="(Ljava/lang/String;)Ljava/lang/String;" line="114"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="32" covered="255"/><counter type="BRANCH" missed="11" covered="41"/><counter type="LINE" missed="6" covered="51"/><counter type="COMPLEXITY" missed="12" covered="18"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/core/GnbFromData" sourcefilename="GnbFromData.java"><method name="&lt;init&gt;" desc="()V" line="13"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="(Ljava/util/List;Ljava/util/List;)Lcom/jml/core/Model;" line="17"><counter type="INSTRUCTION" missed="6" covered="120"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="1" covered="27"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="123"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="1" covered="28"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/core/Block" sourcefilename="Block.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="17"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildBlock" desc="()V" line="35"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBlock" desc="()Ljava/lang/String;" line="51"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildFileContent" desc="([Lcom/jml/core/Block;)Ljava/lang/String;" line="62"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="87"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/core/Stats$1" sourcefilename="Stats.java"><method name="&lt;init&gt;" desc="()V" line="292"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compare" desc="(Ljava/util/Map$Entry;Ljava/util/Map$Entry;)I" line="295"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/core/MultRegFromData" sourcefilename="MultRegFromData.java"><method name="&lt;init&gt;" desc="()V" line="11"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="(Ljava/util/List;Ljava/util/List;)Lcom/jml/core/Model;" line="16"><counter type="INSTRUCTION" missed="6" covered="72"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="18"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="75"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="19"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/core/LinRegFromData" sourcefilename="LinRegFromData.java"><method name="&lt;init&gt;" desc="()V" line="11"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="(Ljava/util/List;Ljava/util/List;)Lcom/jml/core/Model;" line="20"><counter type="INSTRUCTION" missed="5" covered="72"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="19"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="75"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="20"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/core/DataLoader" sourcefilename="DataLoader.java"><method name="&lt;init&gt;" desc="()V" line="13"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="loadFeaturesAndTargets" desc="(Ljava/lang/String;)Ljava/util/List;" line="29"><counter type="INSTRUCTION" missed="0" covered="77"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="loadFeaturesAndTargets" desc="(Ljava/lang/String;[I[I)Ljava/util/List;" line="60"><counter type="INSTRUCTION" missed="0" covered="126"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="203"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="2" covered="29"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/core/ModelTypes" sourcefilename="ModelTypes.java"><method name="&lt;clinit&gt;" desc="()V" line="3"><counter type="INSTRUCTION" missed="0" covered="69"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="69"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/core/Model" sourcefilename="Model.java"><method name="&lt;init&gt;" desc="()V" line="17"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="load" desc="(Ljava/lang/String;)Lcom/jml/core/Model;" line="106"><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextBlock" desc="(Ljava/util/List;)Ljava/lang/String;" line="140"><counter type="INSTRUCTION" missed="5" covered="106"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="1" covered="19"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="158"/><counter type="BRANCH" missed="2" covered="20"/><counter type="LINE" missed="1" covered="32"/><counter type="COMPLEXITY" missed="2" covered="12"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/core/PolyRegFromData" sourcefilename="PolyRegFromData.java"><method name="&lt;init&gt;" desc="()V" line="11"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="(Ljava/util/List;Ljava/util/List;)Lcom/jml/core/Model;" line="21"><counter type="INSTRUCTION" missed="5" covered="82"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="1" covered="21"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="85"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="1" covered="22"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="DataLoader.java"><line nr="13" mi="2" ci="0" mb="0" cb="0"/><line nr="14" mi="5" ci="0" mb="0" cb="0"/><line nr="29" mi="0" ci="4" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="10" mb="0" cb="0"/><line nr="33" mi="0" ci="5" mb="0" cb="0"/><line nr="35" mi="0" ci="8" mb="0" cb="2"/><line nr="36" mi="0" ci="22" mb="1" cb="1"/><line nr="38" mi="0" ci="15" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="10" mb="0" cb="2"/><line nr="64" mi="0" ci="13" mb="0" cb="0"/><line nr="69" mi="0" ci="6" mb="0" cb="0"/><line nr="70" mi="0" ci="6" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="16" mb="0" cb="2"/><line nr="74" mi="0" ci="8" mb="0" cb="2"/><line nr="75" mi="0" ci="10" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="16" mb="0" cb="2"/><line nr="83" mi="0" ci="8" mb="0" cb="2"/><line nr="84" mi="0" ci="10" mb="0" cb="0"/><line nr="86" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="203"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="2" covered="29"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Block.java"><line nr="17" mi="0" ci="5" mb="0" cb="0"/><line nr="26" mi="0" ci="2" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="2" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="5" mb="0" cb="0"/><line nr="36" mi="0" ci="6" mb="0" cb="0"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="0" ci="6" mb="0" cb="0"/><line nr="39" mi="0" ci="5" mb="0" cb="0"/><line nr="40" mi="0" ci="6" mb="0" cb="0"/><line nr="41" mi="0" ci="5" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="16" mb="0" cb="2"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="87"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Metrics.java"><line nr="6" mi="2" ci="0" mb="0" cb="0"/><line nr="7" mi="5" ci="0" mb="0" cb="0"/><line nr="19" mi="0" ci="2" mb="0" cb="0"/><line nr="21" mi="0" ci="14" mb="0" cb="4"/><line nr="22" mi="0" ci="17" mb="0" cb="0"/><line nr="27" mi="0" ci="8" mb="0" cb="2"/><line nr="28" mi="0" ci="8" mb="0" cb="2"/><line nr="29" mi="0" ci="4" mb="0" cb="0"/><line nr="33" mi="0" ci="6" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="5" mb="0" cb="2"/><line nr="48" mi="0" ci="9" mb="0" cb="0"/><line nr="52" mi="0" ci="8" mb="0" cb="2"/><line nr="53" mi="0" ci="8" mb="0" cb="2"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="6" mb="0" cb="0"/><line nr="70" mi="2" ci="0" mb="0" cb="0"/><line nr="72" mi="5" ci="0" mb="2" cb="0"/><line nr="73" mi="9" ci="0" mb="0" cb="0"/><line nr="77" mi="8" ci="0" mb="2" cb="0"/><line nr="78" mi="7" ci="0" mb="2" cb="0"/><line nr="79" mi="4" ci="0" mb="0" cb="0"/><line nr="83" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="48" covered="101"/><counter type="BRANCH" missed="6" covered="14"/><counter type="LINE" missed="9" covered="14"/><counter type="COMPLEXITY" missed="5" covered="9"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ModelTypes.java"><line nr="3" mi="0" ci="3" mb="0" cb="0"/><line nr="4" mi="0" ci="18" mb="0" cb="0"/><line nr="5" mi="0" ci="30" mb="0" cb="0"/><line nr="6" mi="0" ci="18" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="69"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LinRegFromData.java"><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="4" mb="0" cb="0"/><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="6" mb="1" cb="3"/><line nr="25" mi="0" ci="5" mb="0" cb="0"/><line nr="26" mi="0" ci="5" mb="0" cb="0"/><line nr="27" mi="0" ci="5" mb="0" cb="0"/><line nr="29" mi="0" ci="5" mb="1" cb="1"/><line nr="30" mi="0" ci="4" mb="0" cb="0"/><line nr="32" mi="0" ci="4" mb="0" cb="0"/><line nr="33" mi="0" ci="1" mb="0" cb="0"/><line nr="34" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="0" ci="9" mb="0" cb="0"/><line nr="37" mi="0" ci="6" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="5" ci="0" mb="0" cb="0"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="75"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="20"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="GnbFromData.java"><line nr="13" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="0" ci="4" mb="0" cb="0"/><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="2" mb="0" cb="0"/><line nr="23" mi="0" ci="2" mb="0" cb="0"/><line nr="25" mi="0" ci="6" mb="1" cb="3"/><line nr="27" mi="0" ci="5" mb="0" cb="0"/><line nr="28" mi="0" ci="5" mb="0" cb="0"/><line nr="29" mi="0" ci="5" mb="0" cb="0"/><line nr="31" mi="0" ci="5" mb="0" cb="2"/><line nr="33" mi="0" ci="4" mb="0" cb="0"/><line nr="34" mi="0" ci="7" mb="0" cb="0"/><line nr="35" mi="0" ci="5" mb="0" cb="0"/><line nr="37" mi="0" ci="8" mb="0" cb="2"/><line nr="38" mi="0" ci="6" mb="0" cb="0"/><line nr="40" mi="0" ci="10" mb="0" cb="2"/><line nr="41" mi="0" ci="9" mb="0" cb="0"/><line nr="46" mi="0" ci="6" mb="1" cb="1"/><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="6" ci="0" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="123"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="1" covered="28"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ModelFromData.java"><line nr="7" mi="7" ci="0" mb="0" cb="0"/><line nr="12" mi="0" ci="2" mb="0" cb="0"/><line nr="14" mi="0" ci="8" mb="0" cb="0"/><line nr="16" mi="0" ci="3" mb="0" cb="2"/><line nr="17" mi="0" ci="5" mb="0" cb="0"/><line nr="18" mi="0" ci="5" mb="0" cb="0"/><line nr="19" mi="0" ci="6" mb="0" cb="0"/><line nr="22" mi="0" ci="7" mb="1" cb="1"/><line nr="23" mi="5" ci="0" mb="0" cb="0"/><line nr="26" mi="0" ci="5" mb="0" cb="0"/><line nr="27" mi="0" ci="4" mb="0" cb="0"/><line nr="29" mi="0" ci="5" mb="0" cb="2"/><line nr="30" mi="0" ci="5" mb="0" cb="0"/><line nr="32" mi="0" ci="5" mb="0" cb="2"/><line nr="33" mi="0" ci="5" mb="0" cb="0"/><line nr="35" mi="0" ci="5" mb="0" cb="2"/><line nr="36" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="0" ci="5" mb="0" cb="2"/><line nr="39" mi="0" ci="5" mb="0" cb="0"/><line nr="41" mi="0" ci="5" mb="0" cb="2"/><line nr="42" mi="0" ci="5" mb="0" cb="0"/><line nr="44" mi="0" ci="5" mb="0" cb="2"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="47" mi="0" ci="5" mb="1" cb="1"/><line nr="48" mi="5" ci="0" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="1" cb="1"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="54" mi="5" ci="0" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="6" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="8" mb="1" cb="1"/><line nr="74" mi="0" ci="11" mb="1" cb="5"/><line nr="75" mi="0" ci="5" mb="0" cb="0"/><line nr="76" mi="0" ci="8" mb="0" cb="4"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="10" mb="1" cb="1"/><line nr="80" mi="0" ci="5" mb="0" cb="2"/><line nr="81" mi="0" ci="6" mb="0" cb="0"/><line nr="87" mi="0" ci="5" mb="0" cb="2"/><line nr="88" mi="0" ci="2" mb="0" cb="0"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="1" cb="1"/><line nr="95" mi="5" ci="0" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="1" cb="1"/><line nr="99" mi="5" ci="0" mb="0" cb="0"/><line nr="102" mi="0" ci="8" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="0" cb="0"/><line nr="115" mi="0" ci="4" mb="0" cb="0"/><line nr="117" mi="0" ci="8" mb="1" cb="1"/><line nr="118" mi="0" ci="5" mb="0" cb="2"/><line nr="119" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="7" mb="1" cb="3"/><line nr="121" mi="0" ci="7" mb="0" cb="0"/><line nr="122" mi="0" ci="5" mb="1" cb="1"/><line nr="123" mi="0" ci="1" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="32" covered="255"/><counter type="BRANCH" missed="11" covered="41"/><counter type="LINE" missed="6" covered="51"/><counter type="COMPLEXITY" missed="12" covered="18"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LogRegFromData.java"><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="4" mb="0" cb="0"/><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="6" mb="1" cb="3"/><line nr="21" mi="0" ci="5" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><line nr="23" mi="0" ci="5" mb="0" cb="0"/><line nr="25" mi="0" ci="5" mb="1" cb="1"/><line nr="26" mi="0" ci="4" mb="0" cb="0"/><line nr="28" mi="0" ci="4" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="32" mi="0" ci="9" mb="0" cb="0"/><line nr="33" mi="0" ci="6" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><line nr="36" mi="5" ci="0" mb="0" cb="0"/><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="75"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="20"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MultRegFromData.java"><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="4" mb="0" cb="0"/><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="6" mb="1" cb="3"/><line nr="23" mi="0" ci="5" mb="0" cb="0"/><line nr="24" mi="0" ci="5" mb="0" cb="0"/><line nr="25" mi="0" ci="5" mb="0" cb="0"/><line nr="27" mi="0" ci="5" mb="1" cb="1"/><line nr="28" mi="0" ci="4" mb="0" cb="0"/><line nr="30" mi="0" ci="4" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="32" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="0" ci="9" mb="0" cb="0"/><line nr="35" mi="0" ci="6" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="38" mi="6" ci="0" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="75"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="19"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Model.java"><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="0" cb="2"/><line nr="107" mi="0" ci="5" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="4" mb="0" cb="2"/><line nr="113" mi="0" ci="2" mb="0" cb="0"/><line nr="115" mi="0" ci="4" mb="0" cb="0"/><line nr="116" mi="0" ci="4" mb="0" cb="0"/><line nr="117" mi="0" ci="6" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="2"/><line nr="120" mi="0" ci="6" mb="0" cb="0"/><line nr="123" mi="0" ci="2" mb="0" cb="0"/><line nr="125" mi="0" ci="6" mb="0" cb="0"/><line nr="140" mi="0" ci="4" mb="0" cb="0"/><line nr="141" mi="0" ci="4" mb="0" cb="0"/><line nr="142" mi="0" ci="2" mb="0" cb="0"/><line nr="144" mi="0" ci="2" mb="0" cb="2"/><line nr="145" mi="0" ci="14" mb="0" cb="4"/><line nr="146" mi="0" ci="2" mb="1" cb="1"/><line nr="147" mi="5" ci="0" mb="0" cb="0"/><line nr="151" mi="0" ci="9" mb="0" cb="0"/><line nr="153" mi="0" ci="7" mb="0" cb="0"/><line nr="154" mi="0" ci="4" mb="0" cb="0"/><line nr="156" mi="0" ci="4" mb="0" cb="2"/><line nr="157" mi="0" ci="3" mb="0" cb="0"/><line nr="160" mi="0" ci="16" mb="1" cb="5"/><line nr="161" mi="0" ci="2" mb="0" cb="0"/><line nr="166" mi="0" ci="6" mb="0" cb="0"/><line nr="168" mi="0" ci="7" mb="0" cb="0"/><line nr="169" mi="0" ci="5" mb="0" cb="0"/><line nr="171" mi="0" ci="7" mb="0" cb="0"/><line nr="172" mi="0" ci="5" mb="0" cb="0"/><line nr="176" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="158"/><counter type="BRANCH" missed="2" covered="20"/><counter type="LINE" missed="1" covered="32"/><counter type="COMPLEXITY" missed="2" covered="12"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="KnnFromData.java"><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="4" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="0" ci="6" mb="1" cb="3"/><line nr="29" mi="0" ci="5" mb="0" cb="0"/><line nr="30" mi="0" ci="5" mb="0" cb="0"/><line nr="31" mi="0" ci="5" mb="0" cb="0"/><line nr="33" mi="0" ci="5" mb="0" cb="2"/><line nr="34" mi="0" ci="5" mb="0" cb="0"/><line nr="36" mi="0" ci="5" mb="0" cb="2"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="39" mi="0" ci="5" mb="0" cb="2"/><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="0" ci="8" mb="0" cb="2"/><line nr="46" mi="0" ci="10" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="6" mb="0" cb="0"/><line nr="54" mi="0" ci="8" mb="0" cb="2"/><line nr="55" mi="0" ci="7" mb="0" cb="0"/><line nr="58" mi="0" ci="6" mb="0" cb="0"/><line nr="60" mi="0" ci="6" mb="1" cb="1"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="6" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="5" ci="0" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="146"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="1" covered="33"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PolyRegFromData.java"><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="4" mb="0" cb="0"/><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="6" mb="1" cb="3"/><line nr="26" mi="0" ci="5" mb="0" cb="0"/><line nr="27" mi="0" ci="5" mb="0" cb="0"/><line nr="28" mi="0" ci="5" mb="0" cb="0"/><line nr="30" mi="0" ci="5" mb="0" cb="2"/><line nr="31" mi="0" ci="5" mb="0" cb="0"/><line nr="33" mi="0" ci="5" mb="1" cb="1"/><line nr="34" mi="0" ci="4" mb="0" cb="0"/><line nr="36" mi="0" ci="4" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="38" mi="0" ci="2" mb="0" cb="0"/><line nr="40" mi="0" ci="9" mb="0" cb="0"/><line nr="41" mi="0" ci="6" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="5" ci="0" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="85"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="1" covered="22"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NeuralNetFromData.java"><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="4" mb="0" cb="0"/><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="6" mb="1" cb="3"/><line nr="25" mi="0" ci="5" mb="0" cb="0"/><line nr="26" mi="0" ci="5" mb="0" cb="0"/><line nr="27" mi="0" ci="5" mb="0" cb="0"/><line nr="29" mi="0" ci="5" mb="0" cb="2"/><line nr="30" mi="0" ci="4" mb="0" cb="0"/><line nr="32" mi="0" ci="4" mb="1" cb="1"/><line nr="33" mi="5" ci="0" mb="0" cb="0"/><line nr="36" mi="0" ci="6" mb="0" cb="0"/><line nr="37" mi="0" ci="6" mb="0" cb="0"/><line nr="38" mi="0" ci="6" mb="0" cb="0"/><line nr="39" mi="0" ci="6" mb="0" cb="0"/><line nr="41" mi="0" ci="6" mb="1" cb="1"/><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="8" mb="0" cb="0"/><line nr="49" mi="0" ci="6" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="2"/><line nr="59" mi="0" ci="6" mb="0" cb="0"/><line nr="63" mi="0" ci="10" mb="0" cb="2"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><line nr="70" mi="6" ci="1" mb="2" cb="0"/><line nr="74" mi="6" ci="0" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="0" ci="8" mb="1" cb="1"/><line nr="90" mi="4" ci="0" mb="0" cb="0"/><line nr="91" mi="5" ci="0" mb="0" cb="0"/><line nr="93" mi="0" ci="4" mb="0" cb="0"/><line nr="94" mi="0" ci="5" mb="0" cb="0"/><line nr="97" mi="0" ci="6" mb="1" cb="3"/><line nr="98" mi="0" ci="5" mb="0" cb="0"/><line nr="99" mi="0" ci="5" mb="0" cb="0"/><line nr="101" mi="0" ci="5" mb="0" cb="2"/><line nr="103" mi="0" ci="4" mb="0" cb="2"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="0" cb="2"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="0" cb="2"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="4" mb="1" cb="1"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="116" mi="6" ci="0" mb="0" cb="0"/><line nr="119" mi="0" ci="5" mb="0" cb="2"/><line nr="121" mi="0" ci="4" mb="0" cb="0"/><line nr="122" mi="0" ci="5" mb="0" cb="0"/><line nr="123" mi="0" ci="5" mb="0" cb="0"/><line nr="125" mi="0" ci="6" mb="0" cb="2"/><line nr="127" mi="0" ci="4" mb="0" cb="0"/><line nr="128" mi="0" ci="7" mb="0" cb="0"/><line nr="129" mi="0" ci="5" mb="0" cb="0"/><line nr="131" mi="0" ci="8" mb="0" cb="2"/><line nr="132" mi="0" ci="6" mb="0" cb="0"/><line nr="134" mi="0" ci="10" mb="0" cb="2"/><line nr="135" mi="0" ci="9" mb="0" cb="0"/><line nr="139" mi="0" ci="5" mb="0" cb="0"/><line nr="141" mi="0" ci="6" mb="1" cb="1"/><line nr="143" mi="0" ci="4" mb="0" cb="0"/><line nr="144" mi="0" ci="5" mb="0" cb="0"/><line nr="146" mi="0" ci="8" mb="0" cb="2"/><line nr="147" mi="0" ci="9" mb="0" cb="0"/><line nr="150" mi="0" ci="5" mb="0" cb="0"/><line nr="152" mi="0" ci="1" mb="0" cb="0"/><line nr="153" mi="6" ci="0" mb="0" cb="0"/><line nr="158" mi="0" ci="4" mb="0" cb="2"/><line nr="159" mi="0" ci="7" mb="0" cb="0"/><line nr="160" mi="0" ci="13" mb="0" cb="0"/><line nr="162" mi="0" ci="4" mb="1" cb="1"/><line nr="163" mi="0" ci="6" mb="0" cb="0"/><line nr="164" mi="0" ci="13" mb="0" cb="0"/><line nr="167" mi="6" ci="0" mb="0" cb="0"/><line nr="170" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="44" covered="390"/><counter type="BRANCH" missed="10" covered="38"/><counter type="LINE" missed="7" covered="78"/><counter type="COMPLEXITY" missed="9" covered="18"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Stats.java"><line nr="15" mi="0" ci="5" mb="0" cb="0"/><line nr="17" mi="2" ci="0" mb="0" cb="0"/><line nr="18" mi="5" ci="0" mb="0" cb="0"/><line nr="23" mi="0" ci="6" mb="0" cb="0"/><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="37" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="0" ci="16" mb="0" cb="2"/><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="6" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="2"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="59" mi="0" ci="4" mb="0" cb="2"/><line nr="60" mi="0" ci="11" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="7" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="67" mi="0" ci="5" mb="0" cb="2"/><line nr="68" mi="0" ci="13" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="88" mi="0" ci="8" mb="0" cb="2"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="8" mb="0" cb="2"/><line nr="91" mi="0" ci="8" mb="0" cb="2"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="2"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="2" mb="0" cb="0"/><line nr="113" mi="0" ci="4" mb="0" cb="2"/><line nr="114" mi="0" ci="5" mb="0" cb="0"/><line nr="117" mi="0" ci="9" mb="0" cb="0"/><line nr="131" mi="0" ci="4" mb="0" cb="2"/><line nr="132" mi="0" ci="2" mb="0" cb="0"/><line nr="134" mi="0" ci="10" mb="0" cb="0"/><line nr="149" mi="0" ci="4" mb="0" cb="2"/><line nr="150" mi="0" ci="2" mb="0" cb="0"/><line nr="152" mi="0" ci="8" mb="0" cb="0"/><line nr="165" mi="0" ci="3" mb="0" cb="0"/><line nr="167" mi="0" ci="3" mb="0" cb="0"/><line nr="168" mi="0" ci="4" mb="0" cb="2"/><line nr="169" mi="0" ci="5" mb="0" cb="0"/><line nr="172" mi="0" ci="8" mb="0" cb="0"/><line nr="184" mi="5" ci="0" mb="0" cb="0"/><line nr="196" mi="0" ci="2" mb="0" cb="0"/><line nr="198" mi="0" ci="3" mb="0" cb="0"/><line nr="200" mi="0" ci="8" mb="0" cb="2"/><line nr="201" mi="0" ci="12" mb="0" cb="0"/><line nr="204" mi="0" ci="2" mb="0" cb="0"/><line nr="215" mi="0" ci="3" mb="0" cb="0"/><line nr="216" mi="0" ci="2" mb="0" cb="0"/><line nr="218" mi="0" ci="8" mb="0" cb="2"/><line nr="219" mi="0" ci="10" mb="0" cb="0"/><line nr="222" mi="0" ci="2" mb="0" cb="0"/><line nr="233" mi="0" ci="2" mb="0" cb="0"/><line nr="235" mi="0" ci="8" mb="0" cb="2"/><line nr="236" mi="0" ci="6" mb="0" cb="2"/><line nr="237" mi="0" ci="4" mb="0" cb="0"/><line nr="241" mi="0" ci="2" mb="0" cb="0"/><line nr="252" mi="0" ci="2" mb="0" cb="0"/><line nr="253" mi="0" ci="2" mb="0" cb="0"/><line nr="255" mi="0" ci="8" mb="0" cb="2"/><line nr="256" mi="0" ci="6" mb="0" cb="2"/><line nr="257" mi="0" ci="4" mb="0" cb="0"/><line nr="258" mi="0" ci="2" mb="0" cb="0"/><line nr="262" mi="0" ci="2" mb="0" cb="0"/><line nr="274" mi="0" ci="4" mb="1" cb="1"/><line nr="275" mi="8" ci="0" mb="0" cb="0"/><line nr="279" mi="0" ci="3" mb="0" cb="0"/><line nr="281" mi="0" ci="4" mb="0" cb="0"/><line nr="283" mi="0" ci="8" mb="0" cb="2"/><line nr="284" mi="0" ci="9" mb="0" cb="0"/><line nr="288" mi="0" ci="3" mb="0" cb="0"/><line nr="289" mi="0" ci="3" mb="0" cb="0"/><line nr="292" mi="0" ci="8" mb="0" cb="0"/><line nr="295" mi="0" ci="8" mb="0" cb="0"/><line nr="300" mi="0" ci="4" mb="0" cb="0"/><line nr="301" mi="0" ci="10" mb="0" cb="2"/><line nr="302" mi="0" ci="9" mb="0" cb="0"/><line nr="303" mi="0" ci="1" mb="0" cb="0"/><line nr="306" mi="0" ci="4" mb="0" cb="0"/><line nr="308" mi="0" ci="11" mb="1" cb="3"/><line nr="309" mi="0" ci="8" mb="0" cb="0"/><line nr="312" mi="0" ci="2" mb="0" cb="0"/><line nr="323" mi="0" ci="2" mb="0" cb="0"/><line nr="325" mi="0" ci="8" mb="0" cb="2"/><line nr="326" mi="0" ci="6" mb="0" cb="2"/><line nr="327" mi="0" ci="4" mb="0" cb="0"/><line nr="331" mi="0" ci="2" mb="0" cb="0"/><line nr="342" mi="0" ci="2" mb="0" cb="0"/><line nr="344" mi="0" ci="16" mb="0" cb="2"/><line nr="345" mi="0" ci="4" mb="0" cb="0"/><line nr="348" mi="0" ci="2" mb="0" cb="0"/><line nr="360" mi="0" ci="8" mb="2" cb="2"/><line nr="361" mi="6" ci="0" mb="0" cb="0"/><line nr="364" mi="0" ci="9" mb="0" cb="2"/><counter type="INSTRUCTION" missed="26" covered="489"/><counter type="BRANCH" missed="4" covered="54"/><counter type="LINE" missed="5" covered="97"/><counter type="COMPLEXITY" missed="6" covered="44"/><counter type="METHOD" missed="2" covered="19"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="194" covered="2331"/><counter type="BRANCH" missed="46" covered="224"/><counter type="LINE" missed="36" covered="466"/><counter type="COMPLEXITY" missed="48" covered="142"/><counter type="METHOD" missed="6" covered="49"/><counter type="CLASS" missed="0" covered="15"/></package><package name="com/jml/neural_network/activations"><class name="com/jml/neural_network/activations/Tanh" sourcefilename="Tanh.java"><method name="&lt;init&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forward" desc="(Llinalg/Matrix;)Llinalg/Matrix;" line="22"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="back" desc="(Llinalg/Matrix;)Llinalg/Matrix;" line="45"><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Ljava/lang/String;" line="67"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="101"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/neural_network/activations/Softmax" sourcefilename="Softmax.java"><method name="&lt;init&gt;" desc="()V" line="11"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="forward" desc="(Llinalg/Matrix;)Llinalg/Matrix;" line="24"><counter type="INSTRUCTION" missed="75" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="back" desc="(Llinalg/Matrix;)Llinalg/Matrix;" line="59"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toDiag" desc="([D)Llinalg/Matrix;" line="68"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getName" desc="()Ljava/lang/String;" line="84"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="148" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="26" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jml/neural_network/activations/Relu" sourcefilename="Relu.java"><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forward" desc="(Llinalg/Matrix;)Llinalg/Matrix;" line="21"><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="back" desc="(Llinalg/Matrix;)Llinalg/Matrix;" line="47"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Ljava/lang/String;" line="69"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="101"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/neural_network/activations/ActivationFunction" sourcefilename="ActivationFunction.java"/><class name="com/jml/neural_network/activations/Sigmoid" sourcefilename="Sigmoid.java"><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forward" desc="(Llinalg/Matrix;)Llinalg/Matrix;" line="22"><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="back" desc="(Llinalg/Matrix;)Llinalg/Matrix;" line="51"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Ljava/lang/String;" line="70"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="114"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/neural_network/activations/Linear" sourcefilename="Linear.java"><method name="&lt;init&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forward" desc="(Llinalg/Matrix;)Llinalg/Matrix;" line="22"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="back" desc="(Llinalg/Matrix;)Llinalg/Matrix;" line="34"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Ljava/lang/String;" line="45"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/neural_network/activations/Activations" sourcefilename="Activations.java"><method name="&lt;init&gt;" desc="()V" line="7"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sigmoid" desc="()Lcom/jml/neural_network/activations/ActivationFunction;" line="20"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="relu" desc="()Lcom/jml/neural_network/activations/ActivationFunction;" line="35"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="linear" desc="()Lcom/jml/neural_network/activations/ActivationFunction;" line="50"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tanh" desc="()Lcom/jml/neural_network/activations/ActivationFunction;" line="67"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="softmax" desc="()Lcom/jml/neural_network/activations/ActivationFunction;" line="78"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="12"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="23" covered="17"/><counter type="LINE" missed="6" covered="4"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="6" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Relu.java"><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="6" mb="0" cb="0"/><line nr="24" mi="0" ci="8" mb="0" cb="2"/><line nr="25" mi="0" ci="8" mb="0" cb="2"/><line nr="26" mi="0" ci="5" mb="0" cb="0"/><line nr="27" mi="0" ci="4" mb="0" cb="2"/><line nr="28" mi="0" ci="7" mb="0" cb="0"/><line nr="30" mi="0" ci="6" mb="0" cb="0"/><line nr="35" mi="0" ci="5" mb="0" cb="0"/><line nr="47" mi="0" ci="6" mb="0" cb="0"/><line nr="50" mi="0" ci="8" mb="0" cb="2"/><line nr="51" mi="0" ci="8" mb="0" cb="2"/><line nr="52" mi="0" ci="7" mb="0" cb="2"/><line nr="53" mi="0" ci="7" mb="0" cb="0"/><line nr="55" mi="0" ci="6" mb="0" cb="0"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="101"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Linear.java"><line nr="10" mi="0" ci="2" mb="0" cb="0"/><line nr="12" mi="0" ci="4" mb="0" cb="0"/><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Sigmoid.java"><line nr="9" mi="0" ci="2" mb="0" cb="0"/><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="12" mi="0" ci="4" mb="0" cb="0"/><line nr="22" mi="0" ci="6" mb="0" cb="0"/><line nr="25" mi="0" ci="8" mb="0" cb="2"/><line nr="26" mi="0" ci="8" mb="0" cb="2"/><line nr="27" mi="0" ci="5" mb="0" cb="0"/><line nr="29" mi="0" ci="4" mb="0" cb="2"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="4" mb="0" cb="2"/><line nr="32" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="12" mb="0" cb="0"/><line nr="39" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="6" mb="0" cb="0"/><line nr="54" mi="0" ci="8" mb="0" cb="2"/><line nr="55" mi="0" ci="8" mb="0" cb="2"/><line nr="56" mi="0" ci="7" mb="0" cb="0"/><line nr="57" mi="0" ci="12" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="114"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Activations.java"><line nr="7" mi="3" ci="0" mb="0" cb="0"/><line nr="12" mi="0" ci="4" mb="0" cb="0"/><line nr="20" mi="4" ci="0" mb="0" cb="0"/><line nr="27" mi="0" ci="4" mb="0" cb="0"/><line nr="35" mi="4" ci="0" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="4" ci="0" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="67" mi="4" ci="0" mb="0" cb="0"/><line nr="78" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="23" covered="17"/><counter type="LINE" missed="6" covered="4"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="6" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ActivationFunction.java"/><sourcefile name="Softmax.java"><line nr="11" mi="2" ci="0" mb="0" cb="0"/><line nr="13" mi="3" ci="0" mb="0" cb="0"/><line nr="14" mi="7" ci="0" mb="0" cb="0"/><line nr="24" mi="4" ci="0" mb="2" cb="0"/><line nr="25" mi="7" ci="0" mb="0" cb="0"/><line nr="28" mi="4" ci="0" mb="0" cb="0"/><line nr="30" mi="4" ci="0" mb="0" cb="0"/><line nr="31" mi="2" ci="0" mb="0" cb="0"/><line nr="32" mi="3" ci="0" mb="0" cb="0"/><line nr="34" mi="8" ci="0" mb="2" cb="0"/><line nr="35" mi="10" ci="0" mb="0" cb="0"/><line nr="38" mi="4" ci="0" mb="2" cb="0"/><line nr="39" mi="8" ci="0" mb="2" cb="0"/><line nr="40" mi="12" ci="0" mb="0" cb="0"/><line nr="44" mi="6" ci="0" mb="0" cb="0"/><line nr="46" mi="3" ci="0" mb="0" cb="0"/><line nr="59" mi="5" ci="0" mb="0" cb="0"/><line nr="60" mi="4" ci="0" mb="0" cb="0"/><line nr="61" mi="7" ci="0" mb="0" cb="0"/><line nr="62" mi="7" ci="0" mb="0" cb="0"/><line nr="64" mi="6" ci="0" mb="0" cb="0"/><line nr="68" mi="6" ci="0" mb="0" cb="0"/><line nr="70" mi="8" ci="0" mb="2" cb="0"/><line nr="71" mi="8" ci="0" mb="0" cb="0"/><line nr="74" mi="5" ci="0" mb="0" cb="0"/><line nr="84" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="148" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="26" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Tanh.java"><line nr="10" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="6" mb="0" cb="0"/><line nr="25" mi="0" ci="8" mb="0" cb="2"/><line nr="26" mi="0" ci="8" mb="0" cb="2"/><line nr="27" mi="0" ci="8" mb="0" cb="0"/><line nr="29" mi="0" ci="12" mb="0" cb="0"/><line nr="33" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="0" ci="6" mb="0" cb="0"/><line nr="48" mi="0" ci="8" mb="0" cb="2"/><line nr="49" mi="0" ci="8" mb="0" cb="2"/><line nr="50" mi="0" ci="8" mb="0" cb="0"/><line nr="52" mi="0" ci="14" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="101"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="171" covered="348"/><counter type="BRANCH" missed="10" covered="32"/><counter type="LINE" missed="32" covered="60"/><counter type="COMPLEXITY" missed="16" covered="33"/><counter type="METHOD" missed="11" covered="17"/><counter type="CLASS" missed="1" covered="5"/></package><package name="com/jml/preprocessing"><class name="com/jml/preprocessing/OneHotEncoder" sourcefilename="OneHotEncoder.java"><method name="&lt;init&gt;" desc="()V" line="17"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Z)V" line="17"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fit" desc="([[Ljava/lang/String;)V" line="54"><counter type="INSTRUCTION" missed="0" covered="109"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encode" desc="([[Ljava/lang/String;)[[I" line="99"><counter type="INSTRUCTION" missed="5" covered="57"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decode" desc="([[I)[[Ljava/lang/String;" line="132"><counter type="INSTRUCTION" missed="5" covered="31"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsArrayKey" desc="(Ljava/util/Map;[Ljava/lang/String;)Z" line="153"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getArray" desc="(Ljava/util/Map;[Ljava/lang/String;)[I" line="174"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getArray" desc="(Ljava/util/Map;[I)[Ljava/lang/String;" line="196"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="10" covered="310"/><counter type="BRANCH" missed="3" covered="29"/><counter type="LINE" missed="2" covered="62"/><counter type="COMPLEXITY" missed="3" covered="21"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/preprocessing/Normalize" sourcefilename="Normalize.java"><method name="&lt;init&gt;" desc="()V" line="22"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="minMaxScale" desc="([D)[D" line="37"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="minMaxScale" desc="([DDD)[D" line="53"><counter type="INSTRUCTION" missed="0" covered="58"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="meanNormalize" desc="([D)[D" line="81"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="l1" desc="([D)[D" line="105"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="l2" desc="([D)[D" line="120"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="l2" desc="([[D)[[D" line="136"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="zScore" desc="([D)[D" line="154"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="zScore" desc="([[D)[[D" line="178"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="33" covered="212"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="6" covered="38"/><counter type="COMPLEXITY" missed="2" covered="15"/><counter type="METHOD" missed="2" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/preprocessing/DataSplitter" sourcefilename="DataSplitter.java"><method name="&lt;init&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="trainTestSplit" desc="([[D[[DD)Ljava/util/Map;" line="32"><counter type="INSTRUCTION" missed="6" covered="129"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="1" covered="22"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="splitByClass" desc="([[D[I)Ljava/util/Map;" line="79"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="13" covered="183"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="3" covered="31"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/preprocessing/ClassEncoder" sourcefilename="ClassEncoder.java"><method name="&lt;init&gt;" desc="()V" line="25"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Z)V" line="39"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fit" desc="([[Ljava/lang/String;)V" line="53"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encode" desc="([[Ljava/lang/String;)[[I" line="84"><counter type="INSTRUCTION" missed="0" covered="81"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="decode" desc="([[I)[[Ljava/lang/String;" line="119"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="217"/><counter type="BRANCH" missed="0" covered="20"/><counter type="LINE" missed="0" covered="40"/><counter type="COMPLEXITY" missed="0" covered="15"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/preprocessing/OneHotBase" sourcefilename="OneHotBase.java"><method name="&lt;init&gt;" desc="()V" line="16"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fit" desc="([Ljava/lang/String;)V" line="26"><counter type="INSTRUCTION" missed="0" covered="60"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="68"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/preprocessing/Encoder" sourcefilename="Encoder.java"/><sourcefile name="OneHotBase.java"><line nr="16" mi="0" ci="2" mb="0" cb="0"/><line nr="17" mi="0" ci="5" mb="0" cb="0"/><line nr="18" mi="0" ci="1" mb="0" cb="0"/><line nr="26" mi="0" ci="4" mb="0" cb="0"/><line nr="27" mi="0" ci="4" mb="0" cb="0"/><line nr="28" mi="0" ci="2" mb="0" cb="0"/><line nr="31" mi="0" ci="16" mb="0" cb="2"/><line nr="33" mi="0" ci="4" mb="0" cb="2"/><line nr="34" mi="0" ci="4" mb="0" cb="0"/><line nr="38" mi="0" ci="8" mb="0" cb="2"/><line nr="39" mi="0" ci="4" mb="0" cb="0"/><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="9" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="68"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ClassEncoder.java"><line nr="25" mi="0" ci="2" mb="0" cb="0"/><line nr="26" mi="0" ci="5" mb="0" cb="0"/><line nr="27" mi="0" ci="5" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="40" mi="0" ci="5" mb="0" cb="0"/><line nr="41" mi="0" ci="5" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="16" mb="0" cb="2"/><line nr="62" mi="0" ci="5" mb="0" cb="2"/><line nr="65" mi="0" ci="7" mb="0" cb="0"/><line nr="66" mi="0" ci="7" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="2"/><line nr="85" mi="0" ci="5" mb="0" cb="0"/><line nr="88" mi="0" ci="8" mb="0" cb="0"/><line nr="90" mi="0" ci="8" mb="0" cb="2"/><line nr="91" mi="0" ci="10" mb="0" cb="2"/><line nr="92" mi="0" ci="9" mb="0" cb="2"/><line nr="94" mi="0" ci="16" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="2"/><line nr="98" mi="0" ci="7" mb="0" cb="0"/><line nr="101" mi="0" ci="10" mb="0" cb="0"/><line nr="107" mi="0" ci="2" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="2"/><line nr="120" mi="0" ci="5" mb="0" cb="0"/><line nr="123" mi="0" ci="8" mb="0" cb="0"/><line nr="125" mi="0" ci="8" mb="0" cb="2"/><line nr="126" mi="0" ci="10" mb="0" cb="2"/><line nr="127" mi="0" ci="15" mb="0" cb="0"/><line nr="131" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="217"/><counter type="BRANCH" missed="0" covered="20"/><counter type="LINE" missed="0" covered="40"/><counter type="COMPLEXITY" missed="0" covered="15"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Encoder.java"/><sourcefile name="DataSplitter.java"><line nr="10" mi="2" ci="0" mb="0" cb="0"/><line nr="11" mi="5" ci="0" mb="0" cb="0"/><line nr="32" mi="0" ci="8" mb="2" cb="2"/><line nr="33" mi="6" ci="0" mb="0" cb="0"/><line nr="37" mi="0" ci="6" mb="0" cb="0"/><line nr="38" mi="0" ci="9" mb="0" cb="0"/><line nr="39" mi="0" ci="5" mb="0" cb="0"/><line nr="41" mi="0" ci="5" mb="0" cb="0"/><line nr="42" mi="0" ci="5" mb="0" cb="0"/><line nr="43" mi="0" ci="5" mb="0" cb="0"/><line nr="44" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="11" mb="0" cb="0"/><line nr="52" mi="0" ci="8" mb="0" cb="2"/><line nr="53" mi="0" ci="3" mb="0" cb="2"/><line nr="54" mi="0" ci="6" mb="0" cb="0"/><line nr="55" mi="0" ci="7" mb="0" cb="0"/><line nr="57" mi="0" ci="8" mb="0" cb="0"/><line nr="58" mi="0" ci="8" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="66" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="8" mb="0" cb="2"/><line nr="83" mi="0" ci="7" mb="0" cb="2"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="6" mb="0" cb="0"/><line nr="86" mi="0" ci="9" mb="0" cb="0"/><line nr="88" mi="0" ci="8" mb="0" cb="0"/><line nr="89" mi="0" ci="6" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="13" covered="183"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="3" covered="31"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Normalize.java"><line nr="22" mi="2" ci="0" mb="0" cb="0"/><line nr="23" mi="5" ci="0" mb="0" cb="0"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="2"/><line nr="54" mi="0" ci="7" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="2"/><line nr="62" mi="0" ci="5" mb="0" cb="0"/><line nr="65" mi="0" ci="8" mb="0" cb="2"/><line nr="66" mi="0" ci="18" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="0" cb="2"/><line nr="87" mi="0" ci="5" mb="0" cb="0"/><line nr="90" mi="0" ci="8" mb="0" cb="2"/><line nr="91" mi="0" ci="12" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="6" ci="0" mb="0" cb="0"/><line nr="106" mi="3" ci="0" mb="0" cb="0"/><line nr="107" mi="8" ci="0" mb="0" cb="0"/><line nr="109" mi="9" ci="0" mb="0" cb="0"/><line nr="120" mi="0" ci="6" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="0" ci="8" mb="0" cb="0"/><line nr="124" mi="0" ci="8" mb="0" cb="0"/><line nr="136" mi="0" ci="8" mb="0" cb="0"/><line nr="138" mi="0" ci="8" mb="0" cb="2"/><line nr="139" mi="0" ci="7" mb="0" cb="0"/><line nr="142" mi="0" ci="2" mb="0" cb="0"/><line nr="154" mi="0" ci="4" mb="0" cb="0"/><line nr="155" mi="0" ci="3" mb="0" cb="0"/><line nr="156" mi="0" ci="3" mb="0" cb="0"/><line nr="158" mi="0" ci="8" mb="0" cb="2"/><line nr="159" mi="0" ci="10" mb="0" cb="0"/><line nr="162" mi="0" ci="2" mb="0" cb="0"/><line nr="178" mi="0" ci="8" mb="0" cb="0"/><line nr="180" mi="0" ci="8" mb="0" cb="2"/><line nr="181" mi="0" ci="7" mb="0" cb="0"/><line nr="184" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="33" covered="212"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="6" covered="38"/><counter type="COMPLEXITY" missed="2" covered="15"/><counter type="METHOD" missed="2" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="OneHotEncoder.java"><line nr="17" mi="0" ci="6" mb="0" cb="0"/><line nr="25" mi="0" ci="2" mb="0" cb="0"/><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="0" ci="5" mb="0" cb="0"/><line nr="28" mi="0" ci="5" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><line nr="38" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="5" mb="0" cb="0"/><line nr="41" mi="0" ci="5" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="6" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="6" mb="0" cb="0"/><line nr="60" mi="0" ci="8" mb="0" cb="2"/><line nr="61" mi="0" ci="6" mb="0" cb="0"/><line nr="62" mi="0" ci="7" mb="0" cb="0"/><line nr="63" mi="0" ci="10" mb="0" cb="0"/><line nr="66" mi="0" ci="8" mb="0" cb="2"/><line nr="68" mi="0" ci="8" mb="0" cb="2"/><line nr="70" mi="0" ci="10" mb="0" cb="2"/><line nr="71" mi="0" ci="14" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="8" mb="0" cb="0"/><line nr="78" mi="0" ci="8" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="1" cb="1"/><line nr="100" mi="5" ci="0" mb="0" cb="0"/><line nr="103" mi="0" ci="6" mb="0" cb="0"/><line nr="105" mi="0" ci="8" mb="0" cb="2"/><line nr="107" mi="0" ci="8" mb="0" cb="2"/><line nr="109" mi="0" ci="11" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="2"/><line nr="113" mi="0" ci="7" mb="0" cb="0"/><line nr="116" mi="0" ci="9" mb="0" cb="0"/><line nr="121" mi="0" ci="2" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="1" cb="1"/><line nr="133" mi="5" ci="0" mb="0" cb="0"/><line nr="136" mi="0" ci="8" mb="0" cb="0"/><line nr="138" mi="0" ci="8" mb="0" cb="2"/><line nr="139" mi="0" ci="10" mb="0" cb="0"/><line nr="142" mi="0" ci="2" mb="0" cb="0"/><line nr="153" mi="0" ci="2" mb="0" cb="0"/><line nr="155" mi="0" ci="11" mb="0" cb="2"/><line nr="157" mi="0" ci="4" mb="0" cb="2"/><line nr="158" mi="0" ci="2" mb="0" cb="0"/><line nr="159" mi="0" ci="1" mb="0" cb="0"/><line nr="161" mi="0" ci="1" mb="0" cb="0"/><line nr="163" mi="0" ci="2" mb="0" cb="0"/><line nr="174" mi="0" ci="2" mb="0" cb="0"/><line nr="178" mi="0" ci="11" mb="1" cb="1"/><line nr="179" mi="0" ci="4" mb="0" cb="2"/><line nr="180" mi="0" ci="5" mb="0" cb="0"/><line nr="181" mi="0" ci="1" mb="0" cb="0"/><line nr="183" mi="0" ci="1" mb="0" cb="0"/><line nr="185" mi="0" ci="2" mb="0" cb="0"/><line nr="196" mi="0" ci="2" mb="0" cb="0"/><line nr="200" mi="0" ci="11" mb="0" cb="2"/><line nr="201" mi="0" ci="4" mb="0" cb="2"/><line nr="202" mi="0" ci="5" mb="0" cb="0"/><line nr="203" mi="0" ci="1" mb="0" cb="0"/><line nr="205" mi="0" ci="1" mb="0" cb="0"/><line nr="207" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="10" covered="310"/><counter type="BRANCH" missed="3" covered="29"/><counter type="LINE" missed="2" covered="62"/><counter type="COMPLEXITY" missed="3" covered="21"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="56" covered="990"/><counter type="BRANCH" missed="5" covered="81"/><counter type="LINE" missed="11" covered="185"/><counter type="COMPLEXITY" missed="8" covered="62"/><counter type="METHOD" missed="3" covered="24"/><counter type="CLASS" missed="0" covered="5"/></package><package name="com/jml/losses"><class name="com/jml/losses/Loss" sourcefilename="Loss.java"><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mse" desc="([[D[[D)D" line="21"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sse" desc="([[D[[D)D" line="34"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="binCrossEntropy" desc="([[D[[D)D" line="48"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="crossEntropy" desc="([[D[[D)D" line="62"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="59" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jml/losses/LossFunctions" sourcefilename="LossFunctions.java"><method name="&lt;init&gt;" desc="()V" line="21"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$static$3" desc="(Llinalg/Matrix;Llinalg/Matrix;)Llinalg/Matrix;" line="85"><counter type="INSTRUCTION" missed="5" covered="87"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$2" desc="(Llinalg/Matrix;Llinalg/Matrix;)Llinalg/Matrix;" line="51"><counter type="INSTRUCTION" missed="0" covered="93"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$1" desc="(Llinalg/Matrix;Llinalg/Matrix;)Llinalg/Matrix;" line="41"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$0" desc="(Llinalg/Matrix;Llinalg/Matrix;)Llinalg/Matrix;" line="32"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="32"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="12" covered="211"/><counter type="BRANCH" missed="1" covered="19"/><counter type="LINE" missed="3" covered="32"/><counter type="COMPLEXITY" missed="2" covered="14"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/losses/Function" sourcefilename="Function.java"/><sourcefile name="Function.java"/><sourcefile name="LossFunctions.java"><line nr="21" mi="2" ci="0" mb="0" cb="0"/><line nr="22" mi="5" ci="0" mb="0" cb="0"/><line nr="32" mi="0" ci="15" mb="0" cb="0"/><line nr="41" mi="0" ci="11" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="2"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="0" ci="8" mb="0" cb="2"/><line nr="62" mi="0" ci="7" mb="0" cb="2"/><line nr="63" mi="0" ci="6" mb="0" cb="0"/><line nr="64" mi="0" ci="7" mb="0" cb="2"/><line nr="65" mi="0" ci="7" mb="0" cb="0"/><line nr="68" mi="0" ci="15" mb="0" cb="0"/><line nr="69" mi="0" ci="13" mb="0" cb="0"/><line nr="72" mi="0" ci="10" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="0" ci="5" mb="0" cb="0"/><line nr="90" mi="0" ci="8" mb="0" cb="2"/><line nr="91" mi="0" ci="8" mb="0" cb="2"/><line nr="93" mi="0" ci="7" mb="0" cb="2"/><line nr="94" mi="0" ci="6" mb="0" cb="0"/><line nr="95" mi="0" ci="7" mb="0" cb="2"/><line nr="96" mi="0" ci="7" mb="0" cb="0"/><line nr="99" mi="0" ci="7" mb="0" cb="2"/><line nr="100" mi="0" ci="9" mb="0" cb="0"/><line nr="101" mi="0" ci="7" mb="1" cb="1"/><line nr="102" mi="5" ci="0" mb="0" cb="0"/><line nr="107" mi="0" ci="10" mb="0" cb="0"/><line nr="109" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="211"/><counter type="BRANCH" missed="1" covered="19"/><counter type="LINE" missed="3" covered="32"/><counter type="COMPLEXITY" missed="2" covered="14"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Loss.java"><line nr="9" mi="3" ci="0" mb="0" cb="0"/><line nr="21" mi="14" ci="0" mb="0" cb="0"/><line nr="34" mi="14" ci="0" mb="0" cb="0"/><line nr="48" mi="14" ci="0" mb="0" cb="0"/><line nr="62" mi="14" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="59" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="71" covered="211"/><counter type="BRANCH" missed="1" covered="19"/><counter type="LINE" missed="8" covered="32"/><counter type="COMPLEXITY" missed="7" covered="14"/><counter type="METHOD" missed="6" covered="5"/><counter type="CLASS" missed="1" covered="1"/></package><package name="com/jml/util"><class name="com/jml/util/ArrayUtils" sourcefilename="ArrayUtils.java"><method name="&lt;init&gt;" desc="()V" line="11"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="round" desc="([DI)[D" line="22"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="round" desc="([[DI)[[D" line="42"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asString" desc="([I)Ljava/lang/String;" line="59"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asString" desc="([[I)Ljava/lang/String;" line="70"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asString" desc="([D)Ljava/lang/String;" line="81"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asString" desc="([[D)Ljava/lang/String;" line="92"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asString" desc="([Ljava/lang/Object;)Ljava/lang/String;" line="103"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asString2D" desc="([[Ljava/lang/Object;)Ljava/lang/String;" line="124"><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toObject" desc="(Ljava/lang/Object;)[Ljava/lang/Object;" line="150"><counter type="INSTRUCTION" missed="3" covered="24"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toObject2D" desc="(Ljava/lang/Object;)[[Ljava/lang/Object;" line="168"><counter type="INSTRUCTION" missed="3" covered="41"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toDouble" desc="([Ljava/lang/String;)[D" line="192"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toDouble" desc="([[Ljava/lang/String;)[[D" line="210"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toDouble2D" desc="(Ljava/lang/Object;)[[D" line="227"><counter type="INSTRUCTION" missed="3" covered="44"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toDoubleFlat" desc="([[Ljava/lang/String;)[D" line="251"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toIntFlat" desc="([[Ljava/lang/String;)[I" line="273"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toInt" desc="([D)[I" line="295"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shuffle" desc="([D)V" line="313"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="shuffle" desc="([[D)V" line="346"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="shuffle" desc="([[[D)V" line="392"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="randomIndices" desc="(I)[I" line="412"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sortByCol" desc="([[Ljava/lang/String;I)[[Ljava/lang/String;" line="440"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sortByCol" desc="([[Ljava/lang/String;)[[Ljava/lang/String;" line="454"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="append" desc="([[I)[I" line="468"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="transpose" desc="([[Ljava/lang/String;)[[Ljava/lang/String;" line="487"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="flatten" desc="([[Ljava/lang/String;)[Ljava/lang/String;" line="505"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="flatten" desc="([[I)[I" line="525"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$append$2" desc="(Ljava/lang/Integer;)I" line="476"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$sortByCol$1" desc="([Ljava/lang/String;[Ljava/lang/String;)I" line="456"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$sortByCol$0" desc="(I[Ljava/lang/String;[Ljava/lang/String;)I" line="442"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="12"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="239" covered="575"/><counter type="BRANCH" missed="19" covered="59"/><counter type="LINE" missed="43" covered="98"/><counter type="COMPLEXITY" missed="23" covered="47"/><counter type="METHOD" missed="12" covered="19"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/util/FileManager" sourcefilename="FileManager.java"><method name="&lt;init&gt;" desc="()V" line="14"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="stringToFile" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="26"><counter type="INSTRUCTION" missed="5" covered="13"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readFile" desc="(Ljava/lang/String;)Ljava/lang/String;" line="40"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readCSVtoString" desc="(Ljava/lang/String;)[[Ljava/lang/String;" line="60"><counter type="INSTRUCTION" missed="5" covered="66"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="2" covered="13"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readCSVtoDouble" desc="(Ljava/lang/String;)[[D" line="98"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$readFile$0" desc="(Ljava/lang/StringBuilder;Ljava/lang/String;)V" line="43"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="23" covered="110"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="8" covered="24"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/util/ArrayErrors" sourcefilename="ArrayErrors.java"><method name="&lt;init&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="checkNotEmpty" desc="([D)V" line="21"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkSameLength" desc="([D[D)V" line="35"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="FileManager.java"><line nr="14" mi="2" ci="0" mb="0" cb="0"/><line nr="15" mi="5" ci="0" mb="0" cb="0"/><line nr="26" mi="0" ci="8" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="1" ci="0" mb="0" cb="0"/><line nr="29" mi="4" ci="0" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="7" mb="0" cb="0"/><line nr="43" mi="0" ci="11" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="8" mb="0" cb="0"/><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="2"/><line nr="68" mi="0" ci="6" mb="0" cb="0"/><line nr="71" mi="0" ci="6" mb="0" cb="0"/><line nr="72" mi="0" ci="10" mb="0" cb="0"/><line nr="74" mi="0" ci="8" mb="0" cb="2"/><line nr="75" mi="0" ci="11" mb="0" cb="0"/><line nr="79" mi="1" ci="0" mb="0" cb="0"/><line nr="80" mi="4" ci="0" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="1" cb="1"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="0" ci="2" mb="0" cb="0"/><line nr="98" mi="3" ci="0" mb="0" cb="0"/><line nr="99" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="23" covered="110"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="8" covered="24"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ArrayErrors.java"><line nr="10" mi="2" ci="0" mb="0" cb="0"/><line nr="11" mi="5" ci="0" mb="0" cb="0"/><line nr="21" mi="0" ci="3" mb="0" cb="2"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><line nr="24" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="5" mb="0" cb="2"/><line nr="36" mi="0" ci="9" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ArrayUtils.java"><line nr="11" mi="3" ci="0" mb="0" cb="0"/><line nr="12" mi="0" ci="5" mb="0" cb="0"/><line nr="22" mi="0" ci="4" mb="0" cb="0"/><line nr="25" mi="0" ci="8" mb="0" cb="2"/><line nr="26" mi="0" ci="8" mb="0" cb="0"/><line nr="27" mi="0" ci="5" mb="0" cb="0"/><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="0" ci="8" mb="0" cb="0"/><line nr="44" mi="0" ci="8" mb="0" cb="2"/><line nr="45" mi="0" ci="8" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="4" ci="0" mb="0" cb="0"/><line nr="70" mi="4" ci="0" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="103" mi="0" ci="4" mb="0" cb="0"/><line nr="105" mi="0" ci="8" mb="0" cb="2"/><line nr="106" mi="0" ci="7" mb="0" cb="0"/><line nr="108" mi="0" ci="6" mb="0" cb="2"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="124" mi="0" ci="4" mb="0" cb="0"/><line nr="127" mi="0" ci="8" mb="0" cb="2"/><line nr="128" mi="0" ci="10" mb="0" cb="2"/><line nr="129" mi="0" ci="9" mb="0" cb="0"/><line nr="131" mi="0" ci="8" mb="0" cb="2"/><line nr="132" mi="0" ci="4" mb="0" cb="0"/><line nr="136" mi="0" ci="6" mb="0" cb="2"/><line nr="137" mi="0" ci="4" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="0" cb="0"/><line nr="150" mi="0" ci="3" mb="1" cb="1"/><line nr="151" mi="3" ci="0" mb="0" cb="0"/><line nr="152" mi="0" ci="3" mb="0" cb="0"/><line nr="153" mi="0" ci="3" mb="0" cb="0"/><line nr="155" mi="0" ci="7" mb="0" cb="2"/><line nr="156" mi="0" ci="6" mb="0" cb="0"/><line nr="159" mi="0" ci="2" mb="0" cb="0"/><line nr="168" mi="0" ci="3" mb="1" cb="1"/><line nr="169" mi="3" ci="0" mb="0" cb="0"/><line nr="170" mi="0" ci="3" mb="0" cb="0"/><line nr="171" mi="0" ci="5" mb="0" cb="0"/><line nr="172" mi="0" ci="4" mb="0" cb="0"/><line nr="174" mi="0" ci="7" mb="0" cb="2"/><line nr="175" mi="0" ci="7" mb="0" cb="2"/><line nr="176" mi="0" ci="10" mb="0" cb="0"/><line nr="180" mi="0" ci="2" mb="0" cb="0"/><line nr="192" mi="4" ci="0" mb="0" cb="0"/><line nr="194" mi="8" ci="0" mb="2" cb="0"/><line nr="195" mi="8" ci="0" mb="0" cb="0"/><line nr="198" mi="2" ci="0" mb="0" cb="0"/><line nr="210" mi="0" ci="8" mb="0" cb="0"/><line nr="212" mi="0" ci="8" mb="0" cb="2"/><line nr="213" mi="0" ci="10" mb="0" cb="2"/><line nr="214" mi="0" ci="12" mb="0" cb="0"/><line nr="218" mi="0" ci="2" mb="0" cb="0"/><line nr="227" mi="0" ci="3" mb="1" cb="1"/><line nr="228" mi="3" ci="0" mb="0" cb="0"/><line nr="229" mi="0" ci="3" mb="0" cb="0"/><line nr="230" mi="0" ci="5" mb="0" cb="0"/><line nr="231" mi="0" ci="4" mb="0" cb="0"/><line nr="233" mi="0" ci="7" mb="0" cb="2"/><line nr="234" mi="0" ci="7" mb="0" cb="2"/><line nr="235" mi="0" ci="13" mb="0" cb="0"/><line nr="239" mi="0" ci="2" mb="0" cb="0"/><line nr="251" mi="9" ci="0" mb="0" cb="0"/><line nr="252" mi="2" ci="0" mb="0" cb="0"/><line nr="254" mi="8" ci="0" mb="2" cb="0"/><line nr="255" mi="10" ci="0" mb="2" cb="0"/><line nr="256" mi="10" ci="0" mb="0" cb="0"/><line nr="257" mi="1" ci="0" mb="0" cb="0"/><line nr="261" mi="2" ci="0" mb="0" cb="0"/><line nr="273" mi="9" ci="0" mb="0" cb="0"/><line nr="274" mi="2" ci="0" mb="0" cb="0"/><line nr="276" mi="8" ci="0" mb="2" cb="0"/><line nr="277" mi="10" ci="0" mb="2" cb="0"/><line nr="278" mi="10" ci="0" mb="0" cb="0"/><line nr="279" mi="1" ci="0" mb="0" cb="0"/><line nr="283" mi="2" ci="0" mb="0" cb="0"/><line nr="295" mi="0" ci="4" mb="0" cb="0"/><line nr="297" mi="0" ci="8" mb="0" cb="2"/><line nr="298" mi="0" ci="7" mb="0" cb="0"/><line nr="300" mi="0" ci="2" mb="0" cb="0"/><line nr="313" mi="9" ci="0" mb="2" cb="0"/><line nr="316" mi="6" ci="0" mb="0" cb="0"/><line nr="319" mi="4" ci="0" mb="0" cb="0"/><line nr="320" mi="6" ci="0" mb="0" cb="0"/><line nr="321" mi="4" ci="0" mb="0" cb="0"/><line nr="323" mi="1" ci="0" mb="0" cb="0"/><line nr="346" mi="11" ci="0" mb="2" cb="0"/><line nr="349" mi="6" ci="0" mb="0" cb="0"/><line nr="351" mi="8" ci="0" mb="2" cb="0"/><line nr="353" mi="6" ci="0" mb="0" cb="0"/><line nr="354" mi="10" ci="0" mb="0" cb="0"/><line nr="355" mi="6" ci="0" mb="0" cb="0"/><line nr="358" mi="1" ci="0" mb="0" cb="0"/><line nr="392" mi="0" ci="11" mb="0" cb="2"/><line nr="395" mi="0" ci="6" mb="0" cb="0"/><line nr="397" mi="0" ci="8" mb="0" cb="2"/><line nr="399" mi="0" ci="6" mb="0" cb="0"/><line nr="400" mi="0" ci="10" mb="0" cb="0"/><line nr="401" mi="0" ci="6" mb="0" cb="0"/><line nr="404" mi="0" ci="1" mb="0" cb="0"/><line nr="412" mi="0" ci="3" mb="0" cb="0"/><line nr="415" mi="0" ci="7" mb="0" cb="2"/><line nr="416" mi="0" ci="4" mb="0" cb="0"/><line nr="419" mi="0" ci="9" mb="0" cb="2"/><line nr="421" mi="0" ci="6" mb="0" cb="0"/><line nr="424" mi="0" ci="4" mb="0" cb="0"/><line nr="425" mi="0" ci="6" mb="0" cb="0"/><line nr="426" mi="0" ci="4" mb="0" cb="0"/><line nr="429" mi="0" ci="2" mb="0" cb="0"/><line nr="440" mi="4" ci="0" mb="0" cb="0"/><line nr="442" mi="12" ci="0" mb="0" cb="0"/><line nr="444" mi="2" ci="0" mb="0" cb="0"/><line nr="454" mi="4" ci="0" mb="0" cb="0"/><line nr="456" mi="11" ci="0" mb="0" cb="0"/><line nr="458" mi="2" ci="0" mb="0" cb="0"/><line nr="468" mi="0" ci="4" mb="0" cb="0"/><line nr="470" mi="0" ci="8" mb="0" cb="2"/><line nr="471" mi="0" ci="10" mb="0" cb="2"/><line nr="472" mi="0" ci="9" mb="0" cb="0"/><line nr="476" mi="0" ci="9" mb="0" cb="0"/><line nr="487" mi="0" ci="8" mb="0" cb="0"/><line nr="489" mi="0" ci="8" mb="0" cb="2"/><line nr="490" mi="0" ci="10" mb="0" cb="2"/><line nr="491" mi="0" ci="10" mb="0" cb="0"/><line nr="495" mi="0" ci="2" mb="0" cb="0"/><line nr="505" mi="0" ci="9" mb="0" cb="0"/><line nr="506" mi="0" ci="2" mb="0" cb="0"/><line nr="508" mi="0" ci="8" mb="0" cb="2"/><line nr="509" mi="0" ci="10" mb="0" cb="2"/><line nr="510" mi="0" ci="8" mb="0" cb="0"/><line nr="511" mi="0" ci="1" mb="0" cb="0"/><line nr="515" mi="0" ci="2" mb="0" cb="0"/><line nr="525" mi="0" ci="9" mb="0" cb="0"/><line nr="526" mi="0" ci="2" mb="0" cb="0"/><line nr="528" mi="0" ci="8" mb="0" cb="2"/><line nr="529" mi="0" ci="10" mb="0" cb="2"/><line nr="530" mi="0" ci="8" mb="0" cb="0"/><line nr="531" mi="0" ci="1" mb="0" cb="0"/><line nr="535" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="239" covered="575"/><counter type="BRANCH" missed="19" covered="59"/><counter type="LINE" missed="43" covered="98"/><counter type="COMPLEXITY" missed="23" covered="47"/><counter type="METHOD" missed="12" covered="19"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="269" covered="709"/><counter type="BRANCH" missed="20" covered="68"/><counter type="LINE" missed="53" covered="128"/><counter type="COMPLEXITY" missed="27" covered="57"/><counter type="METHOD" missed="15" covered="25"/><counter type="CLASS" missed="0" covered="3"/></package><package name="com/jml/classifiers"><class name="com/jml/classifiers/KDTree" sourcefilename="KDTree.java"><method name="&lt;init&gt;" desc="(I)V" line="22"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insert" desc="([D)V" line="37"><counter type="INSTRUCTION" missed="0" covered="77"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inOrder" desc="()Ljava/util/List;" line="80"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inOrder" desc="(Lcom/jml/classifiers/KDTree$PointNode;Ljava/util/List;)Ljava/util/List;" line="93"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="123"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="0" covered="31"/><counter type="COMPLEXITY" missed="1" covered="11"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/classifiers/KNearestNeighbors" sourcefilename="KNearestNeighbors.java"><method name="&lt;init&gt;" desc="()V" line="21"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(I)V" line="21"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(II)V" line="21"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fit" desc="([[D[I)Lcom/jml/core/Model;" line="87"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="predict" desc="([[D)[I" line="110"><counter type="INSTRUCTION" missed="0" covered="98"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="predict" desc="(Llinalg/Matrix;Llinalg/Matrix;)Llinalg/Matrix;" line="153"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParams" desc="()Llinalg/Matrix;" line="166"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="validateParams" desc="()V" line="172"><counter type="INSTRUCTION" missed="14" covered="8"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="saveModel" desc="(Ljava/lang/String;)V" line="191"><counter type="INSTRUCTION" missed="0" covered="81"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildDetails" desc="()V" line="213"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inspect" desc="()Ljava/lang/String;" line="232"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="243"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="324"/><counter type="BRANCH" missed="2" covered="16"/><counter type="LINE" missed="5" covered="61"/><counter type="COMPLEXITY" missed="5" covered="16"/><counter type="METHOD" missed="3" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/classifiers/ClassifierTags" sourcefilename="ClassifierTags.java"><method name="&lt;clinit&gt;" desc="()V" line="3"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/classifiers/LogisticRegression" sourcefilename="LogisticRegression.java"><method name="&lt;init&gt;" desc="()V" line="24"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(DID)V" line="24"><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(DI)V" line="24"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(D)V" line="24"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fit" desc="([[D[D)Lcom/jml/core/Model;" line="118"><counter type="INSTRUCTION" missed="1" covered="114"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="grad" desc="(Llinalg/Matrix;Llinalg/Matrix;Llinalg/Matrix;)Llinalg/Matrix;" line="158"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="predict" desc="([[D)[D" line="188"><counter type="INSTRUCTION" missed="0" covered="58"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="predict" desc="(Llinalg/Matrix;Llinalg/Matrix;)Llinalg/Matrix;" line="216"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParams" desc="()Llinalg/Matrix;" line="234"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLossHist" desc="()[D" line="248"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validateParams" desc="()V" line="258"><counter type="INSTRUCTION" missed="21" covered="14"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="3" covered="4"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="saveModel" desc="(Ljava/lang/String;)V" line="279"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildDetails" desc="()V" line="297"><counter type="INSTRUCTION" missed="1" covered="82"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inspect" desc="()Ljava/lang/String;" line="330"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="341"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="26" covered="612"/><counter type="BRANCH" missed="7" covered="33"/><counter type="LINE" missed="5" covered="94"/><counter type="COMPLEXITY" missed="8" covered="27"/><counter type="METHOD" missed="1" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/classifiers/KDTree$PointNode" sourcefilename="KDTree.java"><method name="&lt;init&gt;" desc="(Lcom/jml/classifiers/KDTree;[D)V" line="115"><counter type="INSTRUCTION" missed="9" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="()[D" line="130"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="(I)D" line="141"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="22"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ClassifierTags.java"><line nr="3" mi="0" ci="3" mb="0" cb="0"/><line nr="4" mi="0" ci="30" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="KDTree.java"><line nr="22" mi="0" ci="2" mb="0" cb="0"/><line nr="23" mi="0" ci="3" mb="0" cb="2"/><line nr="24" mi="0" ci="6" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="0" ci="5" mb="0" cb="2"/><line nr="38" mi="0" ci="9" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="2"/><line nr="43" mi="0" ci="8" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="1" cb="1"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="8" mb="0" cb="2"/><line nr="53" mi="0" ci="3" mb="0" cb="2"/><line nr="54" mi="0" ci="7" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="2"/><line nr="61" mi="0" ci="7" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="6" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="0" cb="2"/><line nr="94" mi="0" ci="6" mb="0" cb="0"/><line nr="95" mi="0" ci="5" mb="0" cb="0"/><line nr="96" mi="0" ci="6" mb="0" cb="0"/><line nr="99" mi="0" ci="2" mb="0" cb="0"/><line nr="115" mi="0" ci="5" mb="0" cb="0"/><line nr="116" mi="0" ci="5" mb="1" cb="1"/><line nr="117" mi="9" ci="0" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="0" ci="1" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="0"/><line nr="141" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="145"/><counter type="BRANCH" missed="2" covered="16"/><counter type="LINE" missed="1" covered="37"/><counter type="COMPLEXITY" missed="2" covered="14"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="KNearestNeighbors.java"><line nr="21" mi="0" ci="12" mb="0" cb="0"/><line nr="25" mi="0" ci="9" mb="0" cb="0"/><line nr="28" mi="0" ci="24" mb="0" cb="0"/><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="0" ci="5" mb="0" cb="2"/><line nr="88" mi="0" ci="5" mb="0" cb="0"/><line nr="91" mi="0" ci="6" mb="0" cb="0"/><line nr="92" mi="0" ci="7" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><line nr="110" mi="0" ci="7" mb="0" cb="0"/><line nr="111" mi="0" ci="4" mb="0" cb="0"/><line nr="115" mi="0" ci="5" mb="0" cb="0"/><line nr="119" mi="0" ci="8" mb="0" cb="2"/><line nr="120" mi="0" ci="8" mb="0" cb="0"/><line nr="121" mi="0" ci="5" mb="0" cb="0"/><line nr="123" mi="0" ci="9" mb="0" cb="2"/><line nr="124" mi="0" ci="13" mb="0" cb="0"/><line nr="127" mi="0" ci="7" mb="0" cb="0"/><line nr="128" mi="0" ci="4" mb="0" cb="0"/><line nr="130" mi="0" ci="8" mb="0" cb="2"/><line nr="131" mi="0" ci="12" mb="0" cb="0"/><line nr="134" mi="0" ci="6" mb="0" cb="0"/><line nr="137" mi="0" ci="2" mb="0" cb="0"/><line nr="153" mi="8" ci="0" mb="0" cb="0"/><line nr="166" mi="3" ci="0" mb="0" cb="0"/><line nr="172" mi="0" ci="3" mb="1" cb="1"/><line nr="173" mi="7" ci="0" mb="0" cb="0"/><line nr="175" mi="0" ci="4" mb="1" cb="1"/><line nr="176" mi="7" ci="0" mb="0" cb="0"/><line nr="179" mi="0" ci="1" mb="0" cb="0"/><line nr="191" mi="0" ci="3" mb="0" cb="2"/><line nr="192" mi="0" ci="5" mb="0" cb="0"/><line nr="194" mi="0" ci="4" mb="0" cb="2"/><line nr="195" mi="0" ci="5" mb="0" cb="0"/><line nr="198" mi="0" ci="3" mb="0" cb="0"/><line nr="201" mi="0" ci="10" mb="0" cb="0"/><line nr="202" mi="0" ci="11" mb="0" cb="0"/><line nr="203" mi="0" ci="11" mb="0" cb="0"/><line nr="204" mi="0" ci="12" mb="0" cb="0"/><line nr="205" mi="0" ci="12" mb="0" cb="0"/><line nr="207" mi="0" ci="4" mb="0" cb="0"/><line nr="208" mi="0" ci="1" mb="0" cb="0"/><line nr="213" mi="0" ci="5" mb="0" cb="0"/><line nr="217" mi="0" ci="13" mb="0" cb="2"/><line nr="221" mi="0" ci="1" mb="0" cb="0"/><line nr="232" mi="0" ci="4" mb="0" cb="0"/><line nr="243" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="28" covered="324"/><counter type="BRANCH" missed="2" covered="16"/><counter type="LINE" missed="5" covered="61"/><counter type="COMPLEXITY" missed="5" covered="16"/><counter type="METHOD" missed="3" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LogisticRegression.java"><line nr="24" mi="0" ci="12" mb="0" cb="0"/><line nr="26" mi="0" ci="16" mb="0" cb="0"/><line nr="31" mi="0" ci="12" mb="0" cb="0"/><line nr="32" mi="0" ci="12" mb="0" cb="0"/><line nr="33" mi="0" ci="12" mb="0" cb="0"/><line nr="36" mi="0" ci="20" mb="0" cb="0"/><line nr="39" mi="0" ci="32" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="7" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="6" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="6" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="6" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="104" mi="0" ci="1" mb="0" cb="0"/><line nr="118" mi="0" ci="5" mb="0" cb="2"/><line nr="119" mi="0" ci="9" mb="0" cb="0"/><line nr="124" mi="0" ci="10" mb="0" cb="0"/><line nr="125" mi="0" ci="5" mb="0" cb="0"/><line nr="127" mi="0" ci="7" mb="0" cb="0"/><line nr="129" mi="0" ci="8" mb="0" cb="2"/><line nr="130" mi="0" ci="7" mb="0" cb="0"/><line nr="131" mi="0" ci="18" mb="0" cb="0"/><line nr="134" mi="0" ci="16" mb="0" cb="0"/><line nr="136" mi="0" ci="14" mb="1" cb="1"/><line nr="137" mi="1" ci="0" mb="0" cb="0"/><line nr="141" mi="0" ci="8" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="0" cb="0"/><line nr="144" mi="0" ci="2" mb="0" cb="0"/><line nr="146" mi="0" ci="2" mb="0" cb="0"/><line nr="158" mi="0" ci="7" mb="0" cb="0"/><line nr="159" mi="0" ci="5" mb="0" cb="0"/><line nr="162" mi="0" ci="8" mb="0" cb="2"/><line nr="163" mi="0" ci="2" mb="0" cb="0"/><line nr="166" mi="0" ci="8" mb="0" cb="2"/><line nr="167" mi="0" ci="17" mb="0" cb="0"/><line nr="170" mi="0" ci="5" mb="0" cb="0"/><line nr="173" mi="0" ci="2" mb="0" cb="0"/><line nr="188" mi="0" ci="3" mb="0" cb="2"/><line nr="189" mi="0" ci="5" mb="0" cb="0"/><line nr="192" mi="0" ci="6" mb="0" cb="0"/><line nr="193" mi="0" ci="10" mb="0" cb="0"/><line nr="195" mi="0" ci="8" mb="0" cb="2"/><line nr="196" mi="0" ci="20" mb="0" cb="0"/><line nr="200" mi="0" ci="6" mb="0" cb="0"/><line nr="216" mi="0" ci="6" mb="0" cb="0"/><line nr="218" mi="0" ci="8" mb="0" cb="2"/><line nr="219" mi="0" ci="19" mb="0" cb="0"/><line nr="223" mi="0" ci="2" mb="0" cb="0"/><line nr="234" mi="0" ci="3" mb="0" cb="2"/><line nr="235" mi="0" ci="5" mb="0" cb="0"/><line nr="238" mi="0" ci="3" mb="0" cb="0"/><line nr="248" mi="0" ci="3" mb="0" cb="2"/><line nr="249" mi="0" ci="5" mb="0" cb="0"/><line nr="252" mi="0" ci="7" mb="0" cb="0"/><line nr="258" mi="0" ci="5" mb="1" cb="1"/><line nr="259" mi="7" ci="0" mb="0" cb="0"/><line nr="261" mi="0" ci="3" mb="1" cb="1"/><line nr="262" mi="7" ci="0" mb="0" cb="0"/><line nr="264" mi="0" ci="5" mb="1" cb="1"/><line nr="265" mi="7" ci="0" mb="0" cb="0"/><line nr="267" mi="0" ci="1" mb="0" cb="0"/><line nr="279" mi="0" ci="3" mb="0" cb="2"/><line nr="280" mi="0" ci="5" mb="0" cb="0"/><line nr="282" mi="0" ci="4" mb="0" cb="2"/><line nr="283" mi="0" ci="5" mb="0" cb="0"/><line nr="286" mi="0" ci="3" mb="0" cb="0"/><line nr="289" mi="0" ci="10" mb="0" cb="0"/><line nr="290" mi="0" ci="11" mb="0" cb="0"/><line nr="292" mi="0" ci="4" mb="0" cb="0"/><line nr="293" mi="0" ci="1" mb="0" cb="0"/><line nr="297" mi="0" ci="5" mb="0" cb="0"/><line nr="301" mi="1" ci="8" mb="1" cb="1"/><line nr="304" mi="0" ci="6" mb="2" cb="2"/><line nr="305" mi="0" ci="5" mb="0" cb="0"/><line nr="306" mi="0" ci="7" mb="0" cb="0"/><line nr="307" mi="0" ci="12" mb="0" cb="0"/><line nr="309" mi="0" ci="9" mb="0" cb="2"/><line nr="310" mi="0" ci="12" mb="0" cb="0"/><line nr="312" mi="0" ci="7" mb="0" cb="2"/><line nr="313" mi="0" ci="5" mb="0" cb="0"/><line nr="317" mi="0" ci="5" mb="0" cb="0"/><line nr="319" mi="0" ci="1" mb="0" cb="0"/><line nr="330" mi="0" ci="4" mb="0" cb="0"/><line nr="341" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="26" covered="612"/><counter type="BRANCH" missed="7" covered="33"/><counter type="LINE" missed="5" covered="94"/><counter type="COMPLEXITY" missed="8" covered="27"/><counter type="METHOD" missed="1" covered="14"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="63" covered="1114"/><counter type="BRANCH" missed="11" covered="65"/><counter type="LINE" missed="11" covered="194"/><counter type="COMPLEXITY" missed="15" covered="58"/><counter type="METHOD" missed="4" covered="31"/><counter type="CLASS" missed="0" covered="5"/></package><package name="com/jml/classifiers/naive_bayes"><class name="com/jml/classifiers/naive_bayes/GaussianNaiveBayes" sourcefilename="GaussianNaiveBayes.java"><method name="&lt;init&gt;" desc="()V" line="23"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fit" desc="([[D[D)Lcom/jml/classifiers/naive_bayes/GaussianNaiveBayes;" line="59"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="summarize" desc="()V" line="77"><counter type="INSTRUCTION" missed="0" covered="91"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="predict" desc="([[D)[D" line="106"><counter type="INSTRUCTION" missed="19" covered="91"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="2" covered="14"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="normalPdf" desc="([D[D[D)[D" line="153"><counter type="INSTRUCTION" missed="11" covered="63"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="log" desc="([D)[D" line="180"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="argmax" desc="(Ljava/util/Map;)I" line="197"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="predict" desc="(Llinalg/Matrix;Llinalg/Matrix;)Llinalg/Matrix;" line="214"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParams" desc="()Llinalg/Matrix;" line="221"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="saveModel" desc="(Ljava/lang/String;)V" line="229"><counter type="INSTRUCTION" missed="10" covered="47"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildInspection" desc="()V" line="249"><counter type="INSTRUCTION" missed="1" covered="24"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inspect" desc="()Ljava/lang/String;" line="262"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="269"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="51" covered="428"/><counter type="BRANCH" missed="7" covered="25"/><counter type="LINE" missed="9" covered="72"/><counter type="COMPLEXITY" missed="11" covered="18"/><counter type="METHOD" missed="4" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="GaussianNaiveBayes.java"><line nr="23" mi="0" ci="4" mb="0" cb="0"/><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="0" ci="5" mb="0" cb="0"/><line nr="28" mi="0" ci="5" mb="0" cb="0"/><line nr="29" mi="0" ci="5" mb="0" cb="0"/><line nr="34" mi="0" ci="8" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="6" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="0" ci="13" mb="0" cb="2"/><line nr="78" mi="0" ci="14" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="8" mb="0" cb="2"/><line nr="83" mi="0" ci="7" mb="0" cb="0"/><line nr="84" mi="0" ci="7" mb="0" cb="0"/><line nr="88" mi="0" ci="7" mb="0" cb="0"/><line nr="89" mi="0" ci="7" mb="0" cb="0"/><line nr="90" mi="0" ci="18" mb="0" cb="0"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="106" mi="0" ci="10" mb="1" cb="1"/><line nr="107" mi="14" ci="0" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="1" cb="1"/><line nr="111" mi="5" ci="0" mb="0" cb="0"/><line nr="114" mi="0" ci="4" mb="0" cb="0"/><line nr="120" mi="0" ci="4" mb="0" cb="0"/><line nr="123" mi="0" ci="8" mb="0" cb="2"/><line nr="124" mi="0" ci="13" mb="0" cb="2"/><line nr="125" mi="0" ci="7" mb="0" cb="0"/><line nr="126" mi="0" ci="7" mb="0" cb="0"/><line nr="127" mi="0" ci="8" mb="0" cb="0"/><line nr="129" mi="0" ci="11" mb="0" cb="0"/><line nr="130" mi="0" ci="7" mb="0" cb="0"/><line nr="131" mi="0" ci="1" mb="0" cb="0"/><line nr="132" mi="0" ci="6" mb="0" cb="0"/><line nr="135" mi="0" ci="2" mb="0" cb="0"/><line nr="153" mi="0" ci="10" mb="2" cb="2"/><line nr="154" mi="11" ci="0" mb="0" cb="0"/><line nr="158" mi="0" ci="4" mb="0" cb="0"/><line nr="160" mi="0" ci="8" mb="0" cb="2"/><line nr="163" mi="0" ci="12" mb="0" cb="2"/><line nr="166" mi="0" ci="16" mb="0" cb="0"/><line nr="167" mi="0" ci="11" mb="0" cb="0"/><line nr="170" mi="0" ci="2" mb="0" cb="0"/><line nr="180" mi="0" ci="4" mb="0" cb="0"/><line nr="182" mi="0" ci="8" mb="0" cb="2"/><line nr="183" mi="0" ci="7" mb="0" cb="0"/><line nr="186" mi="0" ci="2" mb="0" cb="0"/><line nr="197" mi="0" ci="2" mb="0" cb="0"/><line nr="198" mi="0" ci="2" mb="0" cb="0"/><line nr="200" mi="0" ci="12" mb="0" cb="2"/><line nr="201" mi="0" ci="9" mb="0" cb="2"/><line nr="202" mi="0" ci="7" mb="0" cb="0"/><line nr="203" mi="0" ci="2" mb="0" cb="0"/><line nr="205" mi="0" ci="1" mb="0" cb="0"/><line nr="207" mi="0" ci="2" mb="0" cb="0"/><line nr="214" mi="2" ci="0" mb="0" cb="0"/><line nr="221" mi="2" ci="0" mb="0" cb="0"/><line nr="229" mi="0" ci="3" mb="1" cb="1"/><line nr="230" mi="5" ci="0" mb="0" cb="0"/><line nr="232" mi="0" ci="4" mb="1" cb="1"/><line nr="233" mi="5" ci="0" mb="0" cb="0"/><line nr="236" mi="0" ci="3" mb="0" cb="0"/><line nr="239" mi="0" ci="10" mb="0" cb="0"/><line nr="240" mi="0" ci="11" mb="0" cb="0"/><line nr="241" mi="0" ci="11" mb="0" cb="0"/><line nr="243" mi="0" ci="4" mb="0" cb="0"/><line nr="244" mi="0" ci="1" mb="0" cb="0"/><line nr="249" mi="0" ci="5" mb="0" cb="0"/><line nr="253" mi="1" ci="8" mb="1" cb="1"/><line nr="256" mi="0" ci="10" mb="0" cb="0"/><line nr="257" mi="0" ci="1" mb="0" cb="0"/><line nr="262" mi="4" ci="0" mb="0" cb="0"/><line nr="269" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="51" covered="428"/><counter type="BRANCH" missed="7" covered="25"/><counter type="LINE" missed="9" covered="72"/><counter type="COMPLEXITY" missed="11" covered="18"/><counter type="METHOD" missed="4" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="51" covered="428"/><counter type="BRANCH" missed="7" covered="25"/><counter type="LINE" missed="9" covered="72"/><counter type="COMPLEXITY" missed="11" covered="18"/><counter type="METHOD" missed="4" covered="9"/><counter type="CLASS" missed="0" covered="1"/></package><package name="com/jml/neural_network/layers/initilizers"><class name="com/jml/neural_network/layers/initilizers/HeNormal" sourcefilename="HeNormal.java"><method name="&lt;init&gt;" desc="()V" line="18"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(J)V" line="27"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="init" desc="(II)Llinalg/Matrix;" line="41"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="47"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="3" covered="9"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/neural_network/layers/initilizers/Initializer" sourcefilename="Initializer.java"/><class name="com/jml/neural_network/layers/initilizers/RandomNormal" sourcefilename="RandomNormal.java"><method name="&lt;init&gt;" desc="()V" line="20"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(D)V" line="31"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(DD)V" line="43"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(DDJ)V" line="56"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="init" desc="(II)Llinalg/Matrix;" line="71"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="29" covered="65"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="10" covered="15"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/neural_network/layers/initilizers/GlorotUniform" sourcefilename="GlorotUniform.java"><method name="&lt;init&gt;" desc="()V" line="19"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(J)V" line="28"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="init" desc="(II)Llinalg/Matrix;" line="42"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="54"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="3" covered="9"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/neural_network/layers/initilizers/HeUniform" sourcefilename="HeUniform.java"><method name="&lt;init&gt;" desc="()V" line="20"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(J)V" line="29"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="init" desc="(II)Llinalg/Matrix;" line="43"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="52"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="3" covered="9"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/neural_network/layers/initilizers/RandomUniform" sourcefilename="RandomUniform.java"><method name="&lt;init&gt;" desc="()V" line="13"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(DD)V" line="13"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(DDJ)V" line="13"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="init" desc="(II)Llinalg/Matrix;" line="61"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="21" covered="80"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="5" covered="17"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/neural_network/layers/initilizers/Constant" sourcefilename="Constant.java"><method name="&lt;init&gt;" desc="()V" line="13"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(D)V" line="22"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="init" desc="(II)Llinalg/Matrix;" line="36"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/neural_network/layers/initilizers/Orthogonal" sourcefilename="Orthogonal.java"><method name="&lt;init&gt;" desc="()V" line="13"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="init" desc="(II)Llinalg/Matrix;" line="25"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/neural_network/layers/initilizers/Ones" sourcefilename="Ones.java"><method name="&lt;init&gt;" desc="()V" line="14"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="init" desc="(II)Llinalg/Matrix;" line="25"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/neural_network/layers/initilizers/GlorotNormal" sourcefilename="GlorotNormal.java"><method name="&lt;init&gt;" desc="()V" line="20"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(J)V" line="29"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="init" desc="(II)Llinalg/Matrix;" line="43"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="49"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="3" covered="9"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/neural_network/layers/initilizers/Zeros" sourcefilename="Zeros.java"><method name="&lt;init&gt;" desc="()V" line="14"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="init" desc="(II)Llinalg/Matrix;" line="25"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="HeNormal.java"><line nr="18" mi="0" ci="2" mb="0" cb="0"/><line nr="19" mi="0" ci="5" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="27" mi="2" ci="0" mb="0" cb="0"/><line nr="28" mi="6" ci="0" mb="0" cb="0"/><line nr="29" mi="1" ci="0" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="6" mb="0" cb="0"/><line nr="44" mi="0" ci="7" mb="0" cb="2"/><line nr="45" mi="0" ci="7" mb="0" cb="2"/><line nr="46" mi="0" ci="10" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="47"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="3" covered="9"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="RandomUniform.java"><line nr="13" mi="3" ci="6" mb="0" cb="0"/><line nr="14" mi="3" ci="6" mb="0" cb="0"/><line nr="20" mi="0" ci="2" mb="0" cb="0"/><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="5" mb="0" cb="0"/><line nr="24" mi="0" ci="1" mb="0" cb="0"/><line nr="32" mi="0" ci="2" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="5" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="2" ci="0" mb="0" cb="0"/><line nr="46" mi="3" ci="0" mb="0" cb="0"/><line nr="47" mi="3" ci="0" mb="0" cb="0"/><line nr="48" mi="6" ci="0" mb="0" cb="0"/><line nr="49" mi="1" ci="0" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="7" mb="0" cb="2"/><line nr="64" mi="0" ci="7" mb="0" cb="2"/><line nr="65" mi="0" ci="17" mb="0" cb="0"/><line nr="69" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="21" covered="80"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="5" covered="17"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="RandomNormal.java"><line nr="20" mi="0" ci="2" mb="0" cb="0"/><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="5" mb="0" cb="0"/><line nr="24" mi="0" ci="1" mb="0" cb="0"/><line nr="31" mi="2" ci="0" mb="0" cb="0"/><line nr="32" mi="3" ci="0" mb="0" cb="0"/><line nr="33" mi="3" ci="0" mb="0" cb="0"/><line nr="34" mi="5" ci="0" mb="0" cb="0"/><line nr="35" mi="1" ci="0" mb="0" cb="0"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="5" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="2" ci="0" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="0" cb="0"/><line nr="58" mi="3" ci="0" mb="0" cb="0"/><line nr="59" mi="6" ci="0" mb="0" cb="0"/><line nr="60" mi="1" ci="0" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="7" mb="0" cb="2"/><line nr="74" mi="0" ci="7" mb="0" cb="2"/><line nr="75" mi="0" ci="14" mb="0" cb="0"/><line nr="79" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="29" covered="65"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="10" covered="15"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="HeUniform.java"><line nr="20" mi="0" ci="2" mb="0" cb="0"/><line nr="21" mi="0" ci="5" mb="0" cb="0"/><line nr="22" mi="0" ci="1" mb="0" cb="0"/><line nr="29" mi="2" ci="0" mb="0" cb="0"/><line nr="30" mi="6" ci="0" mb="0" cb="0"/><line nr="31" mi="1" ci="0" mb="0" cb="0"/><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="0" ci="6" mb="0" cb="0"/><line nr="46" mi="0" ci="7" mb="0" cb="2"/><line nr="47" mi="0" ci="7" mb="0" cb="2"/><line nr="48" mi="0" ci="15" mb="0" cb="0"/><line nr="52" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="52"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="3" covered="9"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Orthogonal.java"><line nr="13" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="2"/><line nr="26" mi="0" ci="7" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="GlorotNormal.java"><line nr="20" mi="0" ci="2" mb="0" cb="0"/><line nr="21" mi="0" ci="5" mb="0" cb="0"/><line nr="22" mi="0" ci="1" mb="0" cb="0"/><line nr="29" mi="2" ci="0" mb="0" cb="0"/><line nr="30" mi="6" ci="0" mb="0" cb="0"/><line nr="31" mi="1" ci="0" mb="0" cb="0"/><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="0" ci="8" mb="0" cb="0"/><line nr="46" mi="0" ci="7" mb="0" cb="2"/><line nr="47" mi="0" ci="7" mb="0" cb="2"/><line nr="48" mi="0" ci="10" mb="0" cb="0"/><line nr="52" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="49"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="3" covered="9"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="GlorotUniform.java"><line nr="19" mi="0" ci="2" mb="0" cb="0"/><line nr="20" mi="0" ci="5" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="28" mi="2" ci="0" mb="0" cb="0"/><line nr="29" mi="6" ci="0" mb="0" cb="0"/><line nr="30" mi="1" ci="0" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="8" mb="0" cb="0"/><line nr="45" mi="0" ci="7" mb="0" cb="2"/><line nr="46" mi="0" ci="7" mb="0" cb="2"/><line nr="47" mi="0" ci="15" mb="0" cb="0"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="54"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="3" covered="9"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Ones.java"><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Initializer.java"/><sourcefile name="Zeros.java"><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Constant.java"><line nr="13" mi="0" ci="2" mb="0" cb="0"/><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="2" mb="0" cb="0"/><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="1" mb="0" cb="0"/><line nr="36" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="86" covered="399"/><counter type="BRANCH" missed="0" covered="26"/><counter type="LINE" missed="27" covered="83"/><counter type="COMPLEXITY" missed="7" covered="36"/><counter type="METHOD" missed="7" covered="23"/><counter type="CLASS" missed="0" covered="10"/></package><counter type="INSTRUCTION" missed="1509" covered="11064"/><counter type="BRANCH" missed="157" covered="733"/><counter type="LINE" missed="299" covered="2029"/><counter type="COMPLEXITY" missed="220" covered="621"/><counter type="METHOD" missed="84" covered="312"/><counter type="CLASS" missed="3" covered="65"/></report>