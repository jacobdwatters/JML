<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="java-machine-learning"><sessioninfo id="DESKTOP-3F0SSFQ-3aa963e0" start="1638999069911" dump="1638999070869"/><sessioninfo id="DESKTOP-3F0SSFQ-b4795597" start="1638999143775" dump="1638999149282"/><sessioninfo id="DESKTOP-3F0SSFQ-591ad04b" start="1638999230771" dump="1638999231727"/><sessioninfo id="DESKTOP-3F0SSFQ-92e2fe8a" start="1638999274735" dump="1638999280101"/><sessioninfo id="DESKTOP-3F0SSFQ-84d684af" start="1638999331523" dump="1638999336990"/><sessioninfo id="DESKTOP-3F0SSFQ-95ac81a8" start="1638999352593" dump="1638999358137"/><sessioninfo id="DESKTOP-3F0SSFQ-9a6b20e2" start="1638999380068" dump="1638999385412"/><sessioninfo id="DESKTOP-3F0SSFQ-cbb68e29" start="1638999395043" dump="1638999400526"/><sessioninfo id="DESKTOP-3F0SSFQ-7a2e524c" start="1638999417699" dump="1638999423500"/><sessioninfo id="DESKTOP-3F0SSFQ-8be093e3" start="1638999434538" dump="1638999439954"/><sessioninfo id="DESKTOP-3F0SSFQ-53622486" start="1638999452082" dump="1638999457844"/><sessioninfo id="DESKTOP-3F0SSFQ-24a585b0" start="1638999467141" dump="1638999472809"/><sessioninfo id="DESKTOP-3F0SSFQ-81d0a1e6" start="1638999484356" dump="1638999490014"/><sessioninfo id="DESKTOP-3F0SSFQ-2bb6333e" start="1638999506272" dump="1638999511937"/><sessioninfo id="DESKTOP-3F0SSFQ-7e38bd7b" start="1638999520075" dump="1638999521018"/><sessioninfo id="DESKTOP-3F0SSFQ-ac914fec" start="1638999548093" dump="1638999549064"/><sessioninfo id="DESKTOP-3F0SSFQ-4ece702c" start="1638999563083" dump="1638999568717"/><sessioninfo id="DESKTOP-3F0SSFQ-625c5df4" start="1638999579134" dump="1638999584632"/><sessioninfo id="DESKTOP-3F0SSFQ-da249726" start="1638999596017" dump="1638999601676"/><sessioninfo id="DESKTOP-3F0SSFQ-f50a0446" start="1638999613570" dump="1638999619023"/><sessioninfo id="DESKTOP-3F0SSFQ-a4bc5590" start="1638999631429" dump="1638999632395"/><sessioninfo id="DESKTOP-3F0SSFQ-ab09a7da" start="1638999899797" dump="1638999900715"/><sessioninfo id="DESKTOP-3F0SSFQ-4384038d" start="1638999938018" dump="1638999938976"/><sessioninfo id="DESKTOP-3F0SSFQ-6f2387bb" start="1638999964687" dump="1638999965671"/><sessioninfo id="DESKTOP-3F0SSFQ-f2f9422" start="1639000013774" dump="1639000014873"/><sessioninfo id="DESKTOP-3F0SSFQ-f041e0f6" start="1639000052190" dump="1639000053215"/><sessioninfo id="DESKTOP-3F0SSFQ-f4f89574" start="1639000247501" dump="1639000248526"/><sessioninfo id="DESKTOP-3F0SSFQ-1acebaaf" start="1639000305847" dump="1639000307076"/><sessioninfo id="DESKTOP-3F0SSFQ-395eba8f" start="1639000332372" dump="1639000333423"/><sessioninfo id="DESKTOP-3F0SSFQ-2b65f914" start="1639000402355" dump="1639000407928"/><sessioninfo id="DESKTOP-3F0SSFQ-cf7b2e6d" start="1639000440081" dump="1639000446910"/><sessioninfo id="DESKTOP-3F0SSFQ-f1e1fc5c" start="1639000718178" dump="1639000723759"/><sessioninfo id="DESKTOP-3F0SSFQ-61189f2e" start="1639000782040" dump="1639000787765"/><sessioninfo id="DESKTOP-3F0SSFQ-c288504e" start="1639000794958" dump="1639000800920"/><sessioninfo id="DESKTOP-3F0SSFQ-e0e35b07" start="1639000903803" dump="1639000911172"/><sessioninfo id="DESKTOP-3F0SSFQ-b2f54030" start="1639000904529" dump="1639000911908"/><sessioninfo id="DESKTOP-3F0SSFQ-3be1a05d" start="1639001067799" dump="1639001073501"/><sessioninfo id="DESKTOP-3F0SSFQ-6bf282e4" start="1639001127947" dump="1639001133515"/><sessioninfo id="DESKTOP-3F0SSFQ-1aa99e42" start="1639001602856" dump="1639001608139"/><sessioninfo id="DESKTOP-3F0SSFQ-4a6bc3cf" start="1639001652387" dump="1639001657749"/><sessioninfo id="DESKTOP-3F0SSFQ-19947c6b" start="1639001874033" dump="1639001879783"/><sessioninfo id="DESKTOP-3F0SSFQ-a23cec2c" start="1639002103951" dump="1639002104998"/><sessioninfo id="DESKTOP-3F0SSFQ-dcad4a5" start="1639002184729" dump="1639002190134"/><sessioninfo id="DESKTOP-3F0SSFQ-13367dcd" start="1639002272457" dump="1639002278270"/><sessioninfo id="DESKTOP-3F0SSFQ-b64eec06" start="1639002355673" dump="1639002360663"/><sessioninfo id="DESKTOP-3F0SSFQ-393a6f9d" start="1639004542199" dump="1639004548096"/><sessioninfo id="DESKTOP-3F0SSFQ-eae032b0" start="1639005326925" dump="1639005332967"/><sessioninfo id="DESKTOP-3F0SSFQ-29c45851" start="1639005356889" dump="1639005362999"/><sessioninfo id="DESKTOP-3F0SSFQ-363a3434" start="1639006009873" dump="1639006015547"/><sessioninfo id="DESKTOP-3F0SSFQ-cfe6780f" start="1639007204356" dump="1639007205327"/><sessioninfo id="DESKTOP-3F0SSFQ-47c9991c" start="1639007269199" dump="1639007270087"/><sessioninfo id="DESKTOP-3F0SSFQ-97da15b3" start="1639007367683" dump="1639007368552"/><sessioninfo id="DESKTOP-3F0SSFQ-7b009bc9" start="1639007408094" dump="1639007409033"/><sessioninfo id="DESKTOP-3F0SSFQ-892eb8f8" start="1639007437380" dump="1639007438658"/><sessioninfo id="DESKTOP-3F0SSFQ-19c486f2" start="1639007465311" dump="1639007466346"/><sessioninfo id="DESKTOP-3F0SSFQ-6d3e83d4" start="1639007519327" dump="1639007525211"/><sessioninfo id="DESKTOP-3F0SSFQ-5b353800" start="1639007622837" dump="1639007623951"/><sessioninfo id="DESKTOP-3F0SSFQ-42d353b0" start="1639007674536" dump="1639007675449"/><sessioninfo id="DESKTOP-3F0SSFQ-395744c8" start="1639007753482" dump="1639007754506"/><sessioninfo id="DESKTOP-3F0SSFQ-aad84f4d" start="1639007826239" dump="1639007827121"/><sessioninfo id="DESKTOP-3F0SSFQ-af8dd743" start="1639007865240" dump="1639007866207"/><sessioninfo id="DESKTOP-3F0SSFQ-55095936" start="1639007915137" dump="1639007920824"/><sessioninfo id="DESKTOP-3F0SSFQ-244f657a" start="1639008035838" dump="1639008041484"/><sessioninfo id="DESKTOP-3F0SSFQ-678d8c59" start="1639008106780" dump="1639008112379"/><sessioninfo id="DESKTOP-3F0SSFQ-71cfc664" start="1639008191343" dump="1639008196848"/><sessioninfo id="DESKTOP-3F0SSFQ-2add2cef" start="1639008568773" dump="1639008574844"/><sessioninfo id="DESKTOP-3F0SSFQ-2a06afb5" start="1639008612871" dump="1639008619171"/><sessioninfo id="DESKTOP-3F0SSFQ-26c4176" start="1639008652628" dump="1639008658685"/><sessioninfo id="DESKTOP-3F0SSFQ-9ceb9f04" start="1639008714660" dump="1639008715727"/><sessioninfo id="DESKTOP-3F0SSFQ-4ec61ed1" start="1639008774466" dump="1639008775546"/><sessioninfo id="DESKTOP-3F0SSFQ-cd6e2c55" start="1639008815520" dump="1639008816497"/><sessioninfo id="DESKTOP-3F0SSFQ-e3d97767" start="1639008907707" dump="1639008908636"/><sessioninfo id="DESKTOP-3F0SSFQ-4fbc1dae" start="1639009046137" dump="1639009047125"/><sessioninfo id="DESKTOP-3F0SSFQ-538056d6" start="1639009091151" dump="1639009092353"/><sessioninfo id="DESKTOP-3F0SSFQ-fd07e866" start="1639009264209" dump="1639009270160"/><sessioninfo id="DESKTOP-3F0SSFQ-9d10e40a" start="1639009399908" dump="1639009405932"/><sessioninfo id="DESKTOP-3F0SSFQ-8d1c387d" start="1639009494375" dump="1639009500452"/><sessioninfo id="DESKTOP-3F0SSFQ-dfb3958b" start="1639009579316" dump="1639009585580"/><sessioninfo id="DESKTOP-3F0SSFQ-e33ae945" start="1639009812193" dump="1639009818685"/><sessioninfo id="DESKTOP-3F0SSFQ-e390d3ac" start="1639010000762" dump="1639010006832"/><sessioninfo id="DESKTOP-3F0SSFQ-57800594" start="1639010218274" dump="1639010223877"/><sessioninfo id="DESKTOP-3F0SSFQ-6a445301" start="1639011017894" dump="1639011023106"/><sessioninfo id="DESKTOP-3F0SSFQ-5fd657a1" start="1639011092117" dump="1639011097286"/><sessioninfo id="DESKTOP-3F0SSFQ-c05ec611" start="1639011138610" dump="1639011144153"/><sessioninfo id="DESKTOP-3F0SSFQ-dccbb523" start="1639011162825" dump="1639011168252"/><sessioninfo id="DESKTOP-3F0SSFQ-fc77992c" start="1639011218566" dump="1639011223867"/><sessioninfo id="DESKTOP-3F0SSFQ-c476e462" start="1639011282523" dump="1639011287766"/><sessioninfo id="DESKTOP-3F0SSFQ-8b8a7cd0" start="1639011314724" dump="1639011320212"/><sessioninfo id="DESKTOP-3F0SSFQ-9f02fc4b" start="1639011400212" dump="1639011405481"/><sessioninfo id="DESKTOP-3F0SSFQ-116c5409" start="1639011486128" dump="1639011491514"/><sessioninfo id="DESKTOP-3F0SSFQ-6069f639" start="1639011616466" dump="1639011621726"/><sessioninfo id="DESKTOP-3F0SSFQ-9fb0ed57" start="1639011697611" dump="1639011703103"/><sessioninfo id="DESKTOP-3F0SSFQ-8da4a9a0" start="1639011780166" dump="1639011785650"/><sessioninfo id="DESKTOP-3F0SSFQ-89ff406b" start="1639011866283" dump="1639011871550"/><sessioninfo id="DESKTOP-3F0SSFQ-91d441d0" start="1639011973274" dump="1639011978665"/><sessioninfo id="DESKTOP-3F0SSFQ-27ea929a" start="1639012004668" dump="1639012009962"/><sessioninfo id="DESKTOP-3F0SSFQ-99774054" start="1639012045970" dump="1639012051241"/><sessioninfo id="DESKTOP-3F0SSFQ-172e3335" start="1639012084015" dump="1639012089335"/><sessioninfo id="DESKTOP-3F0SSFQ-3956920c" start="1639012134290" dump="1639012140310"/><sessioninfo id="DESKTOP-3F0SSFQ-72ba3e23" start="1639081985152" dump="1639081991955"/><sessioninfo id="DESKTOP-3F0SSFQ-51ea5bfb" start="1639082054165" dump="1639082060904"/><sessioninfo id="DESKTOP-3F0SSFQ-4a451c92" start="1639082143279" dump="1639082150327"/><sessioninfo id="DESKTOP-3F0SSFQ-a6a9c805" start="1639082232733" dump="1639082239499"/><sessioninfo id="DESKTOP-3F0SSFQ-962843c9" start="1639082314762" dump="1639082321553"/><sessioninfo id="DESKTOP-3F0SSFQ-196357af" start="1639082436551" dump="1639082443095"/><sessioninfo id="DESKTOP-3F0SSFQ-492c0697" start="1639082602868" dump="1639082609079"/><sessioninfo id="DESKTOP-3F0SSFQ-6825b13c" start="1639082889810" dump="1639082896154"/><sessioninfo id="DESKTOP-3F0SSFQ-43cb15b4" start="1639084220487" dump="1639084226825"/><sessioninfo id="DESKTOP-3F0SSFQ-4697d71" start="1639084266016" dump="1639084271711"/><sessioninfo id="DESKTOP-3F0SSFQ-53b9655e" start="1639084355272" dump="1639084361379"/><sessioninfo id="DESKTOP-3F0SSFQ-979f099f" start="1639084703326" dump="1639084709819"/><sessioninfo id="DESKTOP-3F0SSFQ-1d2880ac" start="1639088552226" dump="1639088558769"/><sessioninfo id="DESKTOP-3F0SSFQ-c73b4e62" start="1639090102131" dump="1639090107980"/><sessioninfo id="DESKTOP-3F0SSFQ-9e075aeb" start="1639090170337" dump="1639090176218"/><sessioninfo id="DESKTOP-3F0SSFQ-d69093f1" start="1639090251480" dump="1639090257325"/><sessioninfo id="DESKTOP-3F0SSFQ-9cd1bc71" start="1639090376966" dump="1639090382946"/><sessioninfo id="DESKTOP-3F0SSFQ-d05065a8" start="1639090442795" dump="1639090448448"/><sessioninfo id="DESKTOP-3F0SSFQ-d91233be" start="1639090511810" dump="1639090517711"/><sessioninfo id="DESKTOP-3F0SSFQ-d572b98c" start="1639090529123" dump="1639090535216"/><sessioninfo id="DESKTOP-3F0SSFQ-c1379180" start="1639090601255" dump="1639090607069"/><sessioninfo id="DESKTOP-3F0SSFQ-e893305d" start="1639091054387" dump="1639091060238"/><sessioninfo id="DESKTOP-3F0SSFQ-b4c06d85" start="1639091152812" dump="1639091158948"/><sessioninfo id="DESKTOP-3F0SSFQ-9c279e45" start="1639091204938" dump="1639091210942"/><sessioninfo id="DESKTOP-3F0SSFQ-7aadeb91" start="1639091293352" dump="1639091299484"/><sessioninfo id="DESKTOP-3F0SSFQ-52836dcf" start="1639091345948" dump="1639091351971"/><sessioninfo id="DESKTOP-3F0SSFQ-7d52d1bb" start="1639099158020" dump="1639099164080"/><sessioninfo id="DESKTOP-3F0SSFQ-5cfa54d2" start="1639099257686" dump="1639099263660"/><sessioninfo id="DESKTOP-3F0SSFQ-9b15edaf" start="1639099614406" dump="1639099620568"/><sessioninfo id="DESKTOP-3F0SSFQ-44af0c15" start="1639099632120" dump="1639099637912"/><sessioninfo id="DESKTOP-3F0SSFQ-58c3a14" start="1639099683323" dump="1639099689327"/><sessioninfo id="DESKTOP-3F0SSFQ-acee39f0" start="1639099974270" dump="1639099980407"/><sessioninfo id="DESKTOP-3F0SSFQ-1b50ebcf" start="1639099997944" dump="1639100003996"/><sessioninfo id="DESKTOP-3F0SSFQ-edd90476" start="1639100593944" dump="1639100599709"/><sessioninfo id="DESKTOP-3F0SSFQ-2a0fd166" start="1639100654740" dump="1639100665413"/><sessioninfo id="DESKTOP-3F0SSFQ-a16db705" start="1639100660572" dump="1639100668152"/><sessioninfo id="DESKTOP-3F0SSFQ-63f9da86" start="1639100661990" dump="1639100669357"/><sessioninfo id="DESKTOP-3F0SSFQ-d48ca5b5" start="1639100775476" dump="1639100781347"/><sessioninfo id="DESKTOP-3F0SSFQ-bbe104f" start="1639100976360" dump="1639100982463"/><sessioninfo id="DESKTOP-3F0SSFQ-cb42aa53" start="1639100992002" dump="1639100997931"/><sessioninfo id="DESKTOP-3F0SSFQ-4f8d2cc5" start="1639101054151" dump="1639101060131"/><sessioninfo id="DESKTOP-3F0SSFQ-fc6d903b" start="1639101824480" dump="1639101830165"/><sessioninfo id="DESKTOP-3F0SSFQ-dee4b894" start="1639101872258" dump="1639101878116"/><sessioninfo id="DESKTOP-3F0SSFQ-2918a391" start="1639101980262" dump="1639101986141"/><sessioninfo id="DESKTOP-3F0SSFQ-31715dc9" start="1639102255766" dump="1639102261891"/><sessioninfo id="DESKTOP-3F0SSFQ-238e24eb" start="1639102281543" dump="1639102287652"/><sessioninfo id="DESKTOP-3F0SSFQ-b0c94920" start="1639103802253" dump="1639103808328"/><sessioninfo id="DESKTOP-3F0SSFQ-da05d531" start="1639103841693" dump="1639103847062"/><sessioninfo id="DESKTOP-3F0SSFQ-f77b4ecf" start="1639103858375" dump="1639103864536"/><sessioninfo id="DESKTOP-3F0SSFQ-efefe032" start="1639103941821" dump="1639103947502"/><sessioninfo id="DESKTOP-3F0SSFQ-65fb3f84" start="1639104142906" dump="1639104148609"/><sessioninfo id="DESKTOP-3F0SSFQ-a99e5fde" start="1639104314412" dump="1639104319962"/><sessioninfo id="DESKTOP-3F0SSFQ-8c1daa7c" start="1639104452635" dump="1639104458420"/><sessioninfo id="DESKTOP-3F0SSFQ-2ccba6af" start="1639104667713" dump="1639104673286"/><sessioninfo id="DESKTOP-3F0SSFQ-f6c3e1a9" start="1639104938320" dump="1639104944058"/><sessioninfo id="DESKTOP-3F0SSFQ-acd40eac" start="1639105036800" dump="1639105042597"/><sessioninfo id="DESKTOP-3F0SSFQ-408e7e69" start="1639106162785" dump="1639106170022"/><sessioninfo id="DESKTOP-3F0SSFQ-cbed3426" start="1639106459191" dump="1639106465214"/><sessioninfo id="DESKTOP-3F0SSFQ-a7b6c20a" start="1639107057485" dump="1639107063413"/><sessioninfo id="DESKTOP-3F0SSFQ-b51125d9" start="1639107150591" dump="1639107156332"/><sessioninfo id="DESKTOP-3F0SSFQ-dfaf1418" start="1639107478039" dump="1639107484328"/><sessioninfo id="DESKTOP-3F0SSFQ-ea80ef3b" start="1639107513345" dump="1639107519494"/><sessioninfo id="DESKTOP-3F0SSFQ-289fd1b9" start="1639107540978" dump="1639107547359"/><sessioninfo id="DESKTOP-3F0SSFQ-a56e8fa1" start="1639107561515" dump="1639107567557"/><sessioninfo id="DESKTOP-3F0SSFQ-34d28806" start="1639107652313" dump="1639107658080"/><sessioninfo id="DESKTOP-3F0SSFQ-c0d6d4b6" start="1639107676169" dump="1639107682431"/><sessioninfo id="DESKTOP-3F0SSFQ-7b9a305f" start="1639107702285" dump="1639107708162"/><sessioninfo id="DESKTOP-3F0SSFQ-ba2e969f" start="1639107840617" dump="1639107846907"/><sessioninfo id="DESKTOP-3F0SSFQ-41243fc4" start="1639107861088" dump="1639107868096"/><sessioninfo id="DESKTOP-3F0SSFQ-c73e9e0f" start="1639107963699" dump="1639107969616"/><sessioninfo id="DESKTOP-3F0SSFQ-5248d8c7" start="1639107999844" dump="1639108006728"/><sessioninfo id="DESKTOP-3F0SSFQ-dd2a0d94" start="1639108054938" dump="1639108060660"/><sessioninfo id="DESKTOP-3F0SSFQ-ecca17bc" start="1639108083691" dump="1639108100186"/><sessioninfo id="DESKTOP-3F0SSFQ-bfdfd3f8" start="1639108152420" dump="1639109113914"/><sessioninfo id="DESKTOP-3F0SSFQ-31b78c64" start="1639109145606" dump="1639109206462"/><sessioninfo id="DESKTOP-3F0SSFQ-efbf5c32" start="1639110729380" dump="1639110741914"/><sessioninfo id="DESKTOP-3F0SSFQ-b3362555" start="1639111308052" dump="1639111315584"/><sessioninfo id="DESKTOP-3F0SSFQ-5972b30b" start="1639111349214" dump="1639111359636"/><sessioninfo id="DESKTOP-3F0SSFQ-30a1dfec" start="1639111409431" dump="1639111420796"/><sessioninfo id="DESKTOP-3F0SSFQ-82729842" start="1639112865622" dump="1639112891039"/><sessioninfo id="DESKTOP-3F0SSFQ-c454b737" start="1639112877243" dump="1639112899160"/><sessioninfo id="DESKTOP-3F0SSFQ-4774005c" start="1639112877301" dump="1639112899894"/><sessioninfo id="DESKTOP-3F0SSFQ-520519c0" start="1639112880875" dump="1639112900980"/><sessioninfo id="DESKTOP-3F0SSFQ-7f33ac3a" start="1639112883889" dump="1639112902742"/><sessioninfo id="DESKTOP-3F0SSFQ-a52da74b" start="1639113526247" dump="1639113537292"/><sessioninfo id="DESKTOP-3F0SSFQ-6aced929" start="1639113574557" dump="1639113586056"/><sessioninfo id="DESKTOP-3F0SSFQ-ec02e689" start="1639113616003" dump="1639113626712"/><sessioninfo id="DESKTOP-3F0SSFQ-1b95e19d" start="1639113658546" dump="1639113669974"/><sessioninfo id="DESKTOP-3F0SSFQ-ad0df49b" start="1639113769415" dump="1639113780952"/><sessioninfo id="DESKTOP-3F0SSFQ-96562caf" start="1639113863319" dump="1639113874380"/><sessioninfo id="DESKTOP-3F0SSFQ-454fb453" start="1639113908299" dump="1639113919668"/><sessioninfo id="DESKTOP-3F0SSFQ-d5813500" start="1639114019520" dump="1639114030723"/><sessioninfo id="DESKTOP-3F0SSFQ-39279b34" start="1639114056293" dump="1639114067789"/><sessioninfo id="DESKTOP-3F0SSFQ-1411385d" start="1639114114790" dump="1639114125753"/><sessioninfo id="DESKTOP-3F0SSFQ-7110880" start="1639114142554" dump="1639114153275"/><sessioninfo id="DESKTOP-3F0SSFQ-3e1b8e92" start="1639114199454" dump="1639114210812"/><sessioninfo id="DESKTOP-3F0SSFQ-904d61b" start="1639114275726" dump="1639114286793"/><package name="com/jml/optimizers"><class name="com/jml/optimizers/StochasticGradientDescent" sourcefilename="StochasticGradientDescent.java"><method name="&lt;init&gt;" desc="(Lcom/jml/core/Model;)V" line="27"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/jml/core/Model;D)V" line="38"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lcom/jml/core/Model;DI)V" line="51"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lcom/jml/core/Model;DID)V" line="67"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLossHist" desc="()Ljava/util/List;" line="82"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="optimize" desc="(Lcom/jml/losses/Function;Llinalg/Matrix;Llinalg/Matrix;)Llinalg/Matrix;" line="96"><counter type="INSTRUCTION" missed="4" covered="89"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="22" covered="116"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="9" covered="22"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/optimizers/StepLearningRate" sourcefilename="StepLearningRate.java"><method name="&lt;init&gt;" desc="()V" line="21"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(D)V" line="32"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(DI)V" line="44"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Lcom/jml/optimizers/Optimizer;)V" line="57"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="32"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="4" covered="10"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/optimizers/Scheduler" sourcefilename="Scheduler.java"><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/optimizers/Optimizer" sourcefilename="Optimizer.java"><method name="&lt;init&gt;" desc="()V" line="18"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setScheduler" desc="(Lcom/jml/optimizers/Scheduler;)V" line="52"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="StepLearningRate.java"><line nr="21" mi="2" ci="0" mb="0" cb="0"/><line nr="22" mi="3" ci="0" mb="0" cb="0"/><line nr="23" mi="3" ci="0" mb="0" cb="0"/><line nr="24" mi="1" ci="0" mb="0" cb="0"/><line nr="32" mi="0" ci="2" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="9" mb="2" cb="2"/><line nr="58" mi="0" ci="7" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="32"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="4" covered="10"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Optimizer.java"><line nr="18" mi="0" ci="2" mb="0" cb="0"/><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="6" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Scheduler.java"><line nr="9" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="StochasticGradientDescent.java"><line nr="27" mi="2" ci="0" mb="0" cb="0"/><line nr="28" mi="3" ci="0" mb="0" cb="0"/><line nr="29" mi="1" ci="0" mb="0" cb="0"/><line nr="38" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="52" mi="3" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="54" mi="3" ci="0" mb="0" cb="0"/><line nr="55" mi="1" ci="0" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="6" mb="0" cb="0"/><line nr="97" mi="0" ci="6" mb="0" cb="0"/><line nr="99" mi="0" ci="12" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="19" mb="1" cb="3"/><line nr="104" mi="0" ci="13" mb="0" cb="0"/><line nr="105" mi="0" ci="6" mb="0" cb="0"/><line nr="106" mi="0" ci="12" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="1" cb="1"/><line nr="109" mi="4" ci="0" mb="0" cb="0"/><line nr="112" mi="0" ci="7" mb="0" cb="0"/><line nr="115" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="22" covered="116"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="9" covered="22"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="31" covered="172"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="13" covered="40"/><counter type="COMPLEXITY" missed="7" covered="11"/><counter type="METHOD" missed="3" covered="10"/><counter type="CLASS" missed="0" covered="4"/></package><package name="com/jml/linear_models"><class name="com/jml/linear_models/MultipleLinearRegression" sourcefilename="MultipleLinearRegression.java"><method name="&lt;init&gt;" desc="()V" line="21"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fit" desc="([[D[D)Lcom/jml/linear_models/MultipleLinearRegression;" line="45"><counter type="INSTRUCTION" missed="5" covered="54"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="13"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="predict" desc="([[D)[D" line="80"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="predict" desc="(Llinalg/Matrix;Llinalg/Matrix;)Llinalg/Matrix;" line="94"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParams" desc="()Llinalg/Matrix;" line="103"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="saveModel" desc="(Ljava/lang/String;)V" line="116"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildDetails" desc="()V" line="135"><counter type="INSTRUCTION" missed="1" covered="72"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inspect" desc="()Ljava/lang/String;" line="166"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="177"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="231"/><counter type="BRANCH" missed="4" covered="14"/><counter type="LINE" missed="1" covered="45"/><counter type="COMPLEXITY" missed="4" covered="14"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/linear_models/Perceptron" sourcefilename="Perceptron.java"><method name="&lt;init&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(DIID)V" line="27"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(DIIDLcom/jml/neural_network/activations/ActivationFunction;)V" line="27"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fit" desc="([[D[[D)Lcom/jml/linear_models/Perceptron;" line="118"><counter type="INSTRUCTION" missed="23" covered="44"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="3" covered="9"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="predict" desc="([[D)[[D" line="145"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="predict" desc="(Llinalg/Matrix;Llinalg/Matrix;)Llinalg/Matrix;" line="155"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParams" desc="()Llinalg/Matrix;" line="164"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="saveModel" desc="(Ljava/lang/String;)V" line="173"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildDetails" desc="()V" line="181"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inspect" desc="()Ljava/lang/String;" line="203"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="211"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="34" covered="243"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="7" covered="50"/><counter type="COMPLEXITY" missed="7" covered="9"/><counter type="METHOD" missed="4" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/linear_models/LinearRegressionSGD" sourcefilename="LinearRegressionSGD.java"><method name="&lt;init&gt;" desc="()V" line="23"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(DIDLcom/jml/optimizers/Scheduler;)V" line="23"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(DID)V" line="23"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(DI)V" line="23"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(D)V" line="23"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(I)V" line="23"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fit" desc="([D[D)Lcom/jml/linear_models/LinearRegressionSGD;" line="146"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLossHist" desc="()[D" line="169"><counter type="INSTRUCTION" missed="5" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="paramCheck" desc="()V" line="177"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="232"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="54"/><counter type="COMPLEXITY" missed="1" covered="12"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/linear_models/MultipleLinearRegressionSGD" sourcefilename="MultipleLinearRegressionSGD.java"><method name="&lt;init&gt;" desc="()V" line="23"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(DIDLcom/jml/optimizers/Scheduler;)V" line="23"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(DID)V" line="23"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(DI)V" line="23"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(D)V" line="23"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(I)V" line="23"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fit" desc="([[D[D)Lcom/jml/linear_models/MultipleLinearRegressionSGD;" line="131"><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLossHist" desc="()[D" line="154"><counter type="INSTRUCTION" missed="5" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="paramCheck" desc="()V" line="163"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="240"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="55"/><counter type="COMPLEXITY" missed="1" covered="12"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/linear_models/PolynomialRegression" sourcefilename="PolynomialRegression.java"><method name="&lt;init&gt;" desc="()V" line="22"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(I)V" line="22"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fit" desc="([D[D)Lcom/jml/linear_models/PolynomialRegression;" line="70"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="predict" desc="([D)[D" line="97"><counter type="INSTRUCTION" missed="0" covered="58"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="predict" desc="(Llinalg/Matrix;Llinalg/Matrix;)Llinalg/Matrix;" line="120"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParams" desc="()Llinalg/Matrix;" line="129"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="saveModel" desc="(Ljava/lang/String;)V" line="144"><counter type="INSTRUCTION" missed="0" covered="76"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildDetails" desc="()V" line="170"><counter type="INSTRUCTION" missed="1" covered="91"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inspect" desc="()Ljava/lang/String;" line="204"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="215"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="340"/><counter type="BRANCH" missed="3" covered="21"/><counter type="LINE" missed="0" covered="62"/><counter type="COMPLEXITY" missed="3" covered="19"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/linear_models/LinearRegression" sourcefilename="LinearRegression.java"><method name="&lt;init&gt;" desc="()V" line="14"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fit" desc="([D[D)Lcom/jml/linear_models/LinearRegression;" line="34"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildDetails" desc="()V" line="43"><counter type="INSTRUCTION" missed="1" covered="51"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inspect" desc="()Ljava/lang/String;" line="65"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="76"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="78"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/linear_models/LinearModelTags" sourcefilename="LinearModelTags.java"><method name="&lt;clinit&gt;" desc="()V" line="3"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/linear_models/PolynomialRegressionSGD" sourcefilename="PolynomialRegressionSGD.java"><method name="&lt;init&gt;" desc="()V" line="22"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(IDIDLcom/jml/optimizers/Scheduler;)V" line="22"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(IDID)V" line="22"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(IDI)V" line="22"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(ID)V" line="22"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(I)V" line="22"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fit" desc="([D[D)Lcom/jml/linear_models/PolynomialRegressionSGD;" line="146"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLossHist" desc="()[D" line="169"><counter type="INSTRUCTION" missed="5" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="paramCheck" desc="()V" line="178"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="247"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="59"/><counter type="COMPLEXITY" missed="1" covered="12"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="LinearModelTags.java"><line nr="3" mi="0" ci="3" mb="0" cb="0"/><line nr="4" mi="0" ci="18" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LinearRegressionSGD.java"><line nr="23" mi="0" ci="18" mb="0" cb="0"/><line nr="24" mi="0" ci="18" mb="0" cb="0"/><line nr="25" mi="0" ci="18" mb="0" cb="0"/><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="101" mi="0" ci="1" mb="0" cb="0"/><line nr="111" mi="0" ci="2" mb="0" cb="0"/><line nr="112" mi="0" ci="4" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="0" cb="0"/><line nr="115" mi="0" ci="1" mb="0" cb="0"/><line nr="126" mi="0" ci="2" mb="0" cb="0"/><line nr="127" mi="0" ci="4" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="0" ci="2" mb="0" cb="0"/><line nr="130" mi="0" ci="1" mb="0" cb="0"/><line nr="146" mi="0" ci="12" mb="0" cb="0"/><line nr="147" mi="0" ci="5" mb="0" cb="0"/><line nr="150" mi="0" ci="10" mb="0" cb="0"/><line nr="151" mi="0" ci="5" mb="0" cb="0"/><line nr="153" mi="0" ci="8" mb="0" cb="0"/><line nr="156" mi="0" ci="3" mb="0" cb="0"/><line nr="157" mi="0" ci="2" mb="0" cb="0"/><line nr="159" mi="0" ci="2" mb="0" cb="0"/><line nr="169" mi="0" ci="3" mb="1" cb="1"/><line nr="170" mi="5" ci="0" mb="0" cb="0"/><line nr="173" mi="0" ci="8" mb="0" cb="0"/><line nr="177" mi="0" ci="5" mb="0" cb="2"/><line nr="178" mi="0" ci="7" mb="0" cb="0"/><line nr="179" mi="0" ci="4" mb="0" cb="2"/><line nr="180" mi="0" ci="7" mb="0" cb="0"/><line nr="181" mi="0" ci="4" mb="0" cb="2"/><line nr="182" mi="0" ci="7" mb="0" cb="0"/><line nr="183" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="232"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="54"/><counter type="COMPLEXITY" missed="1" covered="12"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MultipleLinearRegression.java"><line nr="21" mi="0" ci="2" mb="0" cb="0"/><line nr="22" mi="0" ci="4" mb="0" cb="0"/><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="9" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="0" ci="5" mb="0" cb="0"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="5" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="1" cb="1"/><line nr="55" mi="5" ci="0" mb="0" cb="0"/><line nr="59" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="8" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="2"/><line nr="81" mi="0" ci="5" mb="0" cb="0"/><line nr="84" mi="0" ci="10" mb="0" cb="0"/><line nr="86" mi="0" ci="9" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="116" mi="0" ci="3" mb="0" cb="2"/><line nr="117" mi="0" ci="5" mb="0" cb="0"/><line nr="119" mi="0" ci="4" mb="0" cb="2"/><line nr="120" mi="0" ci="5" mb="0" cb="0"/><line nr="123" mi="0" ci="3" mb="0" cb="0"/><line nr="126" mi="0" ci="10" mb="0" cb="0"/><line nr="127" mi="0" ci="11" mb="0" cb="0"/><line nr="129" mi="0" ci="4" mb="0" cb="0"/><line nr="130" mi="0" ci="1" mb="0" cb="0"/><line nr="135" mi="0" ci="5" mb="0" cb="0"/><line nr="139" mi="1" ci="8" mb="1" cb="1"/><line nr="142" mi="0" ci="6" mb="2" cb="2"/><line nr="143" mi="0" ci="5" mb="0" cb="0"/><line nr="144" mi="0" ci="7" mb="0" cb="0"/><line nr="145" mi="0" ci="9" mb="0" cb="0"/><line nr="147" mi="0" ci="9" mb="0" cb="2"/><line nr="148" mi="0" ci="10" mb="0" cb="0"/><line nr="150" mi="0" ci="7" mb="0" cb="2"/><line nr="151" mi="0" ci="5" mb="0" cb="0"/><line nr="155" mi="0" ci="1" mb="0" cb="0"/><line nr="166" mi="0" ci="3" mb="0" cb="0"/><line nr="177" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="231"/><counter type="BRANCH" missed="4" covered="14"/><counter type="LINE" missed="1" covered="45"/><counter type="COMPLEXITY" missed="4" covered="14"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PolynomialRegressionSGD.java"><line nr="22" mi="0" ci="18" mb="0" cb="0"/><line nr="23" mi="0" ci="18" mb="0" cb="0"/><line nr="24" mi="0" ci="18" mb="0" cb="0"/><line nr="32" mi="0" ci="2" mb="0" cb="0"/><line nr="33" mi="0" ci="4" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="2" mb="0" cb="0"/><line nr="100" mi="0" ci="1" mb="0" cb="0"/><line nr="111" mi="0" ci="2" mb="0" cb="0"/><line nr="112" mi="0" ci="4" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="0" ci="1" mb="0" cb="0"/><line nr="126" mi="0" ci="2" mb="0" cb="0"/><line nr="127" mi="0" ci="4" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="0" ci="2" mb="0" cb="0"/><line nr="130" mi="0" ci="1" mb="0" cb="0"/><line nr="146" mi="0" ci="12" mb="0" cb="0"/><line nr="147" mi="0" ci="5" mb="0" cb="0"/><line nr="150" mi="0" ci="10" mb="0" cb="0"/><line nr="151" mi="0" ci="5" mb="0" cb="0"/><line nr="153" mi="0" ci="8" mb="0" cb="0"/><line nr="156" mi="0" ci="3" mb="0" cb="0"/><line nr="157" mi="0" ci="2" mb="0" cb="0"/><line nr="159" mi="0" ci="2" mb="0" cb="0"/><line nr="169" mi="0" ci="3" mb="1" cb="1"/><line nr="170" mi="5" ci="0" mb="0" cb="0"/><line nr="173" mi="0" ci="8" mb="0" cb="0"/><line nr="178" mi="0" ci="5" mb="0" cb="2"/><line nr="179" mi="0" ci="7" mb="0" cb="0"/><line nr="180" mi="0" ci="4" mb="0" cb="2"/><line nr="181" mi="0" ci="7" mb="0" cb="0"/><line nr="182" mi="0" ci="4" mb="0" cb="2"/><line nr="183" mi="0" ci="7" mb="0" cb="0"/><line nr="184" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="247"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="59"/><counter type="COMPLEXITY" missed="1" covered="12"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Perceptron.java"><line nr="27" mi="0" ci="12" mb="0" cb="0"/><line nr="34" mi="0" ci="9" mb="0" cb="0"/><line nr="36" mi="0" ci="24" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="13" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="13" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="101" mi="0" ci="2" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="13" mb="0" cb="0"/><line nr="109" mi="0" ci="2" mb="0" cb="0"/><line nr="110" mi="0" ci="1" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="1" cb="1"/><line nr="119" mi="5" ci="0" mb="0" cb="0"/><line nr="121" mi="0" ci="6" mb="1" cb="1"/><line nr="122" mi="9" ci="0" mb="0" cb="0"/><line nr="125" mi="0" ci="5" mb="1" cb="1"/><line nr="126" mi="9" ci="0" mb="0" cb="0"/><line nr="130" mi="0" ci="12" mb="0" cb="0"/><line nr="131" mi="0" ci="5" mb="0" cb="0"/><line nr="132" mi="0" ci="6" mb="0" cb="0"/><line nr="133" mi="0" ci="3" mb="0" cb="0"/><line nr="134" mi="0" ci="2" mb="0" cb="0"/><line nr="136" mi="0" ci="2" mb="0" cb="0"/><line nr="145" mi="0" ci="5" mb="0" cb="0"/><line nr="155" mi="2" ci="0" mb="0" cb="0"/><line nr="164" mi="2" ci="0" mb="0" cb="0"/><line nr="173" mi="0" ci="4" mb="0" cb="0"/><line nr="174" mi="0" ci="1" mb="0" cb="0"/><line nr="181" mi="0" ci="5" mb="0" cb="0"/><line nr="185" mi="0" ci="9" mb="0" cb="2"/><line nr="188" mi="0" ci="7" mb="0" cb="0"/><line nr="189" mi="0" ci="7" mb="0" cb="0"/><line nr="191" mi="0" ci="3" mb="0" cb="2"/><line nr="192" mi="0" ci="5" mb="0" cb="0"/><line nr="193" mi="0" ci="8" mb="0" cb="0"/><line nr="195" mi="0" ci="1" mb="0" cb="0"/><line nr="203" mi="3" ci="0" mb="0" cb="0"/><line nr="211" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="34" covered="243"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="7" covered="50"/><counter type="COMPLEXITY" missed="7" covered="9"/><counter type="METHOD" missed="4" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MultipleLinearRegressionSGD.java"><line nr="23" mi="0" ci="18" mb="0" cb="0"/><line nr="24" mi="0" ci="18" mb="0" cb="0"/><line nr="25" mi="0" ci="18" mb="0" cb="0"/><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="0" ci="4" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="104" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="2" mb="0" cb="0"/><line nr="108" mi="0" ci="1" mb="0" cb="0"/><line nr="119" mi="0" ci="2" mb="0" cb="0"/><line nr="120" mi="0" ci="4" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="0" ci="2" mb="0" cb="0"/><line nr="123" mi="0" ci="1" mb="0" cb="0"/><line nr="131" mi="0" ci="12" mb="0" cb="0"/><line nr="132" mi="0" ci="5" mb="0" cb="0"/><line nr="135" mi="0" ci="10" mb="0" cb="0"/><line nr="136" mi="0" ci="5" mb="0" cb="0"/><line nr="138" mi="0" ci="8" mb="0" cb="0"/><line nr="139" mi="0" ci="8" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="0" cb="0"/><line nr="142" mi="0" ci="2" mb="0" cb="0"/><line nr="144" mi="0" ci="2" mb="0" cb="0"/><line nr="154" mi="0" ci="3" mb="1" cb="1"/><line nr="155" mi="5" ci="0" mb="0" cb="0"/><line nr="158" mi="0" ci="8" mb="0" cb="0"/><line nr="163" mi="0" ci="5" mb="0" cb="2"/><line nr="164" mi="0" ci="7" mb="0" cb="0"/><line nr="165" mi="0" ci="4" mb="0" cb="2"/><line nr="166" mi="0" ci="7" mb="0" cb="0"/><line nr="167" mi="0" ci="4" mb="0" cb="2"/><line nr="168" mi="0" ci="7" mb="0" cb="0"/><line nr="169" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="240"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="55"/><counter type="COMPLEXITY" missed="1" covered="12"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PolynomialRegression.java"><line nr="22" mi="0" ci="8" mb="0" cb="0"/><line nr="24" mi="0" ci="6" mb="0" cb="0"/><line nr="33" mi="0" ci="16" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="2"/><line nr="56" mi="0" ci="6" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="5" mb="0" cb="0"/><line nr="71" mi="0" ci="6" mb="0" cb="0"/><line nr="72" mi="0" ci="7" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="5" mb="0" cb="0"/><line nr="77" mi="0" ci="5" mb="0" cb="0"/><line nr="78" mi="0" ci="8" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="2"/><line nr="98" mi="0" ci="5" mb="0" cb="0"/><line nr="101" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="0" ci="2" mb="0" cb="0"/><line nr="104" mi="0" ci="16" mb="0" cb="2"/><line nr="105" mi="0" ci="10" mb="0" cb="2"/><line nr="106" mi="0" ci="15" mb="0" cb="0"/><line nr="108" mi="0" ci="1" mb="0" cb="0"/><line nr="111" mi="0" ci="2" mb="0" cb="0"/><line nr="120" mi="0" ci="4" mb="0" cb="0"/><line nr="129" mi="0" ci="3" mb="0" cb="0"/><line nr="144" mi="0" ci="3" mb="0" cb="2"/><line nr="145" mi="0" ci="5" mb="0" cb="0"/><line nr="147" mi="0" ci="11" mb="0" cb="2"/><line nr="148" mi="0" ci="5" mb="0" cb="0"/><line nr="151" mi="0" ci="3" mb="0" cb="2"/><line nr="152" mi="0" ci="3" mb="0" cb="0"/><line nr="153" mi="0" ci="4" mb="0" cb="0"/><line nr="155" mi="0" ci="3" mb="0" cb="0"/><line nr="156" mi="0" ci="3" mb="0" cb="0"/><line nr="157" mi="0" ci="11" mb="0" cb="0"/><line nr="161" mi="0" ci="9" mb="0" cb="0"/><line nr="162" mi="0" ci="11" mb="0" cb="0"/><line nr="164" mi="0" ci="4" mb="0" cb="0"/><line nr="165" mi="0" ci="1" mb="0" cb="0"/><line nr="170" mi="0" ci="5" mb="0" cb="0"/><line nr="174" mi="1" ci="8" mb="1" cb="1"/><line nr="177" mi="0" ci="7" mb="0" cb="0"/><line nr="179" mi="0" ci="6" mb="2" cb="2"/><line nr="180" mi="0" ci="8" mb="0" cb="0"/><line nr="181" mi="0" ci="5" mb="0" cb="0"/><line nr="182" mi="0" ci="7" mb="0" cb="0"/><line nr="183" mi="0" ci="13" mb="0" cb="0"/><line nr="185" mi="0" ci="9" mb="0" cb="2"/><line nr="186" mi="0" ci="10" mb="0" cb="0"/><line nr="188" mi="0" ci="7" mb="0" cb="2"/><line nr="189" mi="0" ci="5" mb="0" cb="0"/><line nr="193" mi="0" ci="1" mb="0" cb="0"/><line nr="204" mi="0" ci="3" mb="0" cb="0"/><line nr="215" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1" covered="340"/><counter type="BRANCH" missed="3" covered="21"/><counter type="LINE" missed="0" covered="62"/><counter type="COMPLEXITY" missed="3" covered="19"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LinearRegression.java"><line nr="14" mi="0" ci="2" mb="0" cb="0"/><line nr="15" mi="0" ci="4" mb="0" cb="0"/><line nr="16" mi="0" ci="6" mb="0" cb="0"/><line nr="34" mi="0" ci="5" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="1" ci="7" mb="1" cb="1"/><line nr="48" mi="0" ci="6" mb="2" cb="2"/><line nr="49" mi="0" ci="8" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="8" mb="0" cb="0"/><line nr="52" mi="0" ci="13" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1" covered="78"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="57" covered="1632"/><counter type="BRANCH" missed="16" covered="66"/><counter type="LINE" missed="11" covered="343"/><counter type="COMPLEXITY" missed="20" covered="84"/><counter type="METHOD" missed="4" covered="59"/><counter type="CLASS" missed="0" covered="8"/></package><package name="com/jml/neural_network"><class name="com/jml/neural_network/NeuralNetwork" sourcefilename="NeuralNetwork.java"><method name="&lt;init&gt;" desc="()V" line="20"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(DIID)V" line="20"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fit" desc="([[D[[D)Lcom/jml/neural_network/NeuralNetwork;" line="94"><counter type="INSTRUCTION" missed="0" covered="119"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="feedForward" desc="(Llinalg/Matrix;)Llinalg/Matrix;" line="136"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="back" desc="(Llinalg/Matrix;Llinalg/Matrix;Llinalg/Matrix;)V" line="155"><counter type="INSTRUCTION" missed="0" covered="251"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="36"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applyUpdates" desc="()V" line="211"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resetDx" desc="()V" line="220"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="predict" desc="([[D)[[D" line="237"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="predict" desc="(Llinalg/Matrix;Llinalg/Matrix;)Llinalg/Matrix;" line="255"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParams" desc="()Llinalg/Matrix;" line="266"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="add" desc="(Lcom/jml/neural_network/layers/Layer;)V" line="276"><counter type="INSTRUCTION" missed="22" covered="46"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="3" covered="8"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="saveModel" desc="(Ljava/lang/String;)V" line="309"><counter type="INSTRUCTION" missed="10" covered="95"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="2" covered="18"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildDetails" desc="()V" line="340"><counter type="INSTRUCTION" missed="0" covered="64"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inspect" desc="()Ljava/lang/String;" line="370"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="381"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="39" covered="816"/><counter type="BRANCH" missed="4" covered="38"/><counter type="LINE" missed="8" covered="132"/><counter type="COMPLEXITY" missed="7" covered="29"/><counter type="METHOD" missed="3" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/neural_network/ModelTags" sourcefilename="ModelTags.java"><method name="&lt;clinit&gt;" desc="()V" line="3"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="NeuralNetwork.java"><line nr="20" mi="0" ci="8" mb="0" cb="0"/><line nr="27" mi="0" ci="6" mb="0" cb="0"/><line nr="28" mi="0" ci="10" mb="0" cb="0"/><line nr="33" mi="0" ci="16" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="5" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="6" mb="0" cb="0"/><line nr="95" mi="0" ci="6" mb="0" cb="0"/><line nr="97" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="0" ci="5" mb="0" cb="0"/><line nr="100" mi="0" ci="5" mb="0" cb="0"/><line nr="105" mi="0" ci="8" mb="0" cb="2"/><line nr="106" mi="0" ci="8" mb="0" cb="2"/><line nr="107" mi="0" ci="14" mb="0" cb="4"/><line nr="108" mi="0" ci="7" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="110" mi="0" ci="10" mb="0" cb="0"/><line nr="113" mi="0" ci="2" mb="0" cb="0"/><line nr="116" mi="0" ci="7" mb="0" cb="0"/><line nr="117" mi="0" ci="13" mb="0" cb="0"/><line nr="119" mi="0" ci="14" mb="0" cb="2"/><line nr="120" mi="0" ci="1" mb="0" cb="0"/><line nr="124" mi="0" ci="3" mb="0" cb="0"/><line nr="125" mi="0" ci="2" mb="0" cb="0"/><line nr="127" mi="0" ci="2" mb="0" cb="0"/><line nr="136" mi="0" ci="5" mb="0" cb="0"/><line nr="137" mi="0" ci="11" mb="0" cb="2"/><line nr="138" mi="0" ci="4" mb="0" cb="0"/><line nr="139" mi="0" ci="1" mb="0" cb="0"/><line nr="141" mi="0" ci="2" mb="0" cb="0"/><line nr="155" mi="0" ci="4" mb="0" cb="0"/><line nr="159" mi="0" ci="5" mb="0" cb="2"/><line nr="160" mi="0" ci="11" mb="0" cb="0"/><line nr="162" mi="0" ci="20" mb="0" cb="0"/><line nr="163" mi="0" ci="10" mb="0" cb="0"/><line nr="164" mi="0" ci="3" mb="0" cb="0"/><line nr="165" mi="0" ci="5" mb="0" cb="0"/><line nr="166" mi="0" ci="8" mb="0" cb="0"/><line nr="168" mi="0" ci="20" mb="0" cb="0"/><line nr="169" mi="0" ci="10" mb="0" cb="0"/><line nr="170" mi="0" ci="3" mb="0" cb="0"/><line nr="171" mi="0" ci="1" mb="0" cb="0"/><line nr="173" mi="0" ci="14" mb="0" cb="0"/><line nr="175" mi="0" ci="11" mb="0" cb="2"/><line nr="176" mi="0" ci="7" mb="0" cb="0"/><line nr="178" mi="0" ci="11" mb="0" cb="0"/><line nr="179" mi="0" ci="7" mb="0" cb="0"/><line nr="180" mi="0" ci="3" mb="0" cb="0"/><line nr="181" mi="0" ci="6" mb="0" cb="0"/><line nr="182" mi="0" ci="5" mb="0" cb="0"/><line nr="184" mi="0" ci="11" mb="0" cb="0"/><line nr="185" mi="0" ci="7" mb="0" cb="0"/><line nr="186" mi="0" ci="3" mb="0" cb="0"/><line nr="187" mi="0" ci="1" mb="0" cb="0"/><line nr="189" mi="0" ci="10" mb="0" cb="0"/><line nr="194" mi="0" ci="7" mb="0" cb="0"/><line nr="195" mi="0" ci="11" mb="0" cb="0"/><line nr="196" mi="0" ci="7" mb="0" cb="0"/><line nr="197" mi="0" ci="3" mb="0" cb="0"/><line nr="198" mi="0" ci="2" mb="0" cb="0"/><line nr="199" mi="0" ci="2" mb="0" cb="0"/><line nr="200" mi="0" ci="11" mb="0" cb="0"/><line nr="201" mi="0" ci="7" mb="0" cb="0"/><line nr="202" mi="0" ci="3" mb="0" cb="0"/><line nr="203" mi="0" ci="1" mb="0" cb="0"/><line nr="204" mi="0" ci="1" mb="0" cb="0"/><line nr="211" mi="0" ci="9" mb="0" cb="2"/><line nr="212" mi="0" ci="21" mb="0" cb="0"/><line nr="213" mi="0" ci="21" mb="0" cb="0"/><line nr="216" mi="0" ci="2" mb="0" cb="0"/><line nr="217" mi="0" ci="1" mb="0" cb="0"/><line nr="220" mi="0" ci="9" mb="0" cb="2"/><line nr="221" mi="0" ci="14" mb="0" cb="0"/><line nr="222" mi="0" ci="13" mb="0" cb="0"/><line nr="224" mi="0" ci="1" mb="0" cb="0"/><line nr="237" mi="0" ci="14" mb="0" cb="0"/><line nr="239" mi="0" ci="8" mb="0" cb="2"/><line nr="240" mi="0" ci="15" mb="0" cb="0"/><line nr="243" mi="0" ci="2" mb="0" cb="0"/><line nr="255" mi="2" ci="0" mb="0" cb="0"/><line nr="266" mi="2" ci="0" mb="0" cb="0"/><line nr="276" mi="0" ci="4" mb="0" cb="2"/><line nr="277" mi="0" ci="4" mb="1" cb="1"/><line nr="278" mi="5" ci="0" mb="0" cb="0"/><line nr="282" mi="0" ci="4" mb="0" cb="2"/><line nr="283" mi="0" ci="13" mb="0" cb="0"/><line nr="286" mi="0" ci="13" mb="1" cb="1"/><line nr="287" mi="8" ci="0" mb="0" cb="0"/><line nr="288" mi="9" ci="0" mb="0" cb="0"/><line nr="294" mi="0" ci="5" mb="0" cb="0"/><line nr="295" mi="0" ci="2" mb="0" cb="0"/><line nr="296" mi="0" ci="1" mb="0" cb="0"/><line nr="309" mi="0" ci="3" mb="1" cb="1"/><line nr="310" mi="5" ci="0" mb="0" cb="0"/><line nr="312" mi="0" ci="4" mb="1" cb="1"/><line nr="313" mi="5" ci="0" mb="0" cb="0"/><line nr="316" mi="0" ci="7" mb="0" cb="0"/><line nr="318" mi="0" ci="4" mb="0" cb="0"/><line nr="319" mi="0" ci="6" mb="0" cb="0"/><line nr="320" mi="0" ci="6" mb="0" cb="0"/><line nr="321" mi="0" ci="6" mb="0" cb="0"/><line nr="322" mi="0" ci="5" mb="0" cb="0"/><line nr="325" mi="0" ci="10" mb="0" cb="0"/><line nr="326" mi="0" ci="10" mb="0" cb="0"/><line nr="328" mi="0" ci="2" mb="0" cb="0"/><line nr="329" mi="0" ci="4" mb="0" cb="0"/><line nr="330" mi="0" ci="11" mb="0" cb="2"/><line nr="331" mi="0" ci="10" mb="0" cb="0"/><line nr="332" mi="0" ci="1" mb="0" cb="0"/><line nr="333" mi="0" ci="1" mb="0" cb="0"/><line nr="335" mi="0" ci="4" mb="0" cb="0"/><line nr="336" mi="0" ci="1" mb="0" cb="0"/><line nr="340" mi="0" ci="5" mb="0" cb="0"/><line nr="344" mi="0" ci="9" mb="0" cb="2"/><line nr="347" mi="0" ci="7" mb="0" cb="0"/><line nr="348" mi="0" ci="7" mb="0" cb="0"/><line nr="350" mi="0" ci="4" mb="0" cb="2"/><line nr="351" mi="0" ci="8" mb="0" cb="0"/><line nr="353" mi="0" ci="2" mb="0" cb="0"/><line nr="354" mi="0" ci="11" mb="0" cb="2"/><line nr="355" mi="0" ci="8" mb="0" cb="0"/><line nr="356" mi="0" ci="1" mb="0" cb="0"/><line nr="357" mi="0" ci="1" mb="0" cb="0"/><line nr="359" mi="0" ci="1" mb="0" cb="0"/><line nr="370" mi="0" ci="4" mb="0" cb="0"/><line nr="381" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="39" covered="816"/><counter type="BRANCH" missed="4" covered="38"/><counter type="LINE" missed="8" covered="132"/><counter type="COMPLEXITY" missed="7" covered="29"/><counter type="METHOD" missed="3" covered="12"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ModelTags.java"><line nr="3" mi="0" ci="3" mb="0" cb="0"/><line nr="4" mi="0" ci="48" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="39" covered="867"/><counter type="BRANCH" missed="4" covered="38"/><counter type="LINE" missed="8" covered="134"/><counter type="COMPLEXITY" missed="7" covered="30"/><counter type="METHOD" missed="3" covered="13"/><counter type="CLASS" missed="0" covered="2"/></package><package name="com/jml/neural_network/layers"><class name="com/jml/neural_network/layers/Dropout" sourcefilename="Dropout.java"><method name="&lt;init&gt;" desc="(D)V" line="16"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(ID)V" line="16"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="forward" desc="(Llinalg/Matrix;)Llinalg/Matrix;" line="62"><counter type="INSTRUCTION" missed="49" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInDim" desc="()I" line="87"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOutDim" desc="()I" line="97"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="updateInDim" desc="(I)V" line="109"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getWeights" desc="()Llinalg/Matrix;" line="120"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setWeights" desc="(Llinalg/Matrix;)V" line="129"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setBias" desc="(Llinalg/Matrix;)V" line="132"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValues" desc="()Llinalg/Matrix;" line="140"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBias" desc="()Llinalg/Matrix;" line="145"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="inspect" desc="()Ljava/lang/String;" line="155"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="inspectTemp" desc="()Ljava/lang/String;" line="162"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getActivation" desc="()Lcom/jml/neural_network/activations/ActivationFunction;" line="167"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="123" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="30" covered="0"/><counter type="COMPLEXITY" missed="18" covered="0"/><counter type="METHOD" missed="14" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="com/jml/neural_network/layers/Dense" sourcefilename="Dense.java"><method name="&lt;init&gt;" desc="(ILcom/jml/neural_network/activations/ActivationFunction;)V" line="16"><counter type="INSTRUCTION" missed="6" covered="25"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(IILcom/jml/neural_network/activations/ActivationFunction;)V" line="16"><counter type="INSTRUCTION" missed="12" covered="57"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="13"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="forward" desc="(Llinalg/Matrix;)Llinalg/Matrix;" line="82"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInDim" desc="()I" line="92"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOutDim" desc="()I" line="101"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="updateInDim" desc="(I)V" line="113"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getWeights" desc="()Llinalg/Matrix;" line="125"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setWeights" desc="(Llinalg/Matrix;)V" line="131"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setBias" desc="(Llinalg/Matrix;)V" line="136"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValues" desc="()Llinalg/Matrix;" line="145"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBias" desc="()Llinalg/Matrix;" line="151"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inspect" desc="()Ljava/lang/String;" line="161"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inspectTemp" desc="()Ljava/lang/String;" line="177"><counter type="INSTRUCTION" missed="0" covered="83"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getActivation" desc="()Lcom/jml/neural_network/activations/ActivationFunction;" line="194"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="18" covered="249"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="3" covered="45"/><counter type="COMPLEXITY" missed="3" covered="14"/><counter type="METHOD" missed="0" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/neural_network/layers/Layer" sourcefilename="Layer.java"/><sourcefile name="Dense.java"><line nr="16" mi="0" ci="6" mb="0" cb="0"/><line nr="17" mi="0" ci="6" mb="0" cb="0"/><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="37" mi="0" ci="2" mb="1" cb="1"/><line nr="38" mi="6" ci="0" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="8" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="1" cb="1"/><line nr="57" mi="6" ci="0" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="1" cb="1"/><line nr="60" mi="6" ci="0" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="7" mb="0" cb="0"/><line nr="68" mi="0" ci="7" mb="0" cb="0"/><line nr="69" mi="0" ci="11" mb="0" cb="0"/><line nr="71" mi="0" ci="10" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="0" ci="12" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="11" mb="0" cb="0"/><line nr="115" mi="0" ci="9" mb="0" cb="0"/><line nr="116" mi="0" ci="1" mb="0" cb="0"/><line nr="125" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="0" ci="4" mb="0" cb="0"/><line nr="132" mi="0" ci="1" mb="0" cb="0"/><line nr="136" mi="0" ci="5" mb="0" cb="0"/><line nr="145" mi="0" ci="3" mb="0" cb="0"/><line nr="151" mi="0" ci="3" mb="0" cb="0"/><line nr="161" mi="0" ci="10" mb="0" cb="0"/><line nr="163" mi="0" ci="4" mb="0" cb="0"/><line nr="164" mi="0" ci="3" mb="0" cb="0"/><line nr="177" mi="0" ci="4" mb="0" cb="0"/><line nr="180" mi="0" ci="10" mb="0" cb="0"/><line nr="181" mi="0" ci="9" mb="0" cb="0"/><line nr="182" mi="0" ci="11" mb="0" cb="0"/><line nr="183" mi="0" ci="10" mb="0" cb="0"/><line nr="184" mi="0" ci="10" mb="0" cb="0"/><line nr="187" mi="0" ci="26" mb="0" cb="0"/><line nr="189" mi="0" ci="3" mb="0" cb="0"/><line nr="194" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="18" covered="249"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="3" covered="45"/><counter type="COMPLEXITY" missed="3" covered="14"/><counter type="METHOD" missed="0" covered="14"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Dropout.java"><line nr="16" mi="6" ci="0" mb="0" cb="0"/><line nr="22" mi="6" ci="0" mb="0" cb="0"/><line nr="35" mi="2" ci="0" mb="0" cb="0"/><line nr="36" mi="3" ci="0" mb="0" cb="0"/><line nr="37" mi="1" ci="0" mb="0" cb="0"/><line nr="46" mi="2" ci="0" mb="0" cb="0"/><line nr="47" mi="3" ci="0" mb="0" cb="0"/><line nr="48" mi="3" ci="0" mb="0" cb="0"/><line nr="49" mi="7" ci="0" mb="0" cb="0"/><line nr="50" mi="1" ci="0" mb="0" cb="0"/><line nr="62" mi="9" ci="0" mb="4" cb="0"/><line nr="63" mi="9" ci="0" mb="0" cb="0"/><line nr="67" mi="4" ci="0" mb="0" cb="0"/><line nr="71" mi="9" ci="0" mb="2" cb="0"/><line nr="72" mi="4" ci="0" mb="2" cb="0"/><line nr="73" mi="6" ci="0" mb="0" cb="0"/><line nr="77" mi="8" ci="0" mb="0" cb="0"/><line nr="87" mi="3" ci="0" mb="0" cb="0"/><line nr="97" mi="3" ci="0" mb="0" cb="0"/><line nr="109" mi="3" ci="0" mb="0" cb="0"/><line nr="110" mi="7" ci="0" mb="0" cb="0"/><line nr="111" mi="1" ci="0" mb="0" cb="0"/><line nr="120" mi="2" ci="0" mb="0" cb="0"/><line nr="129" mi="1" ci="0" mb="0" cb="0"/><line nr="132" mi="1" ci="0" mb="0" cb="0"/><line nr="140" mi="3" ci="0" mb="0" cb="0"/><line nr="145" mi="2" ci="0" mb="0" cb="0"/><line nr="155" mi="10" ci="0" mb="0" cb="0"/><line nr="162" mi="2" ci="0" mb="0" cb="0"/><line nr="167" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="123" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="30" covered="0"/><counter type="COMPLEXITY" missed="18" covered="0"/><counter type="METHOD" missed="14" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Layer.java"/><counter type="INSTRUCTION" missed="141" covered="249"/><counter type="BRANCH" missed="11" covered="3"/><counter type="LINE" missed="33" covered="45"/><counter type="COMPLEXITY" missed="21" covered="14"/><counter type="METHOD" missed="14" covered="14"/><counter type="CLASS" missed="1" covered="1"/></package><package name="com/jml/core"><class name="com/jml/core/NeuralNetFromData" sourcefilename="NeuralNetFromData.java"><method name="&lt;init&gt;" desc="()V" line="13"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="(Ljava/util/List;Ljava/util/List;)Lcom/jml/core/Model;" line="18"><counter type="INSTRUCTION" missed="11" covered="143"/><counter type="BRANCH" missed="3" covered="11"/><counter type="LINE" missed="2" covered="31"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createLayer" desc="(Ljava/util/List;Ljava/util/List;)Lcom/jml/neural_network/layers/Layer;" line="79"><counter type="INSTRUCTION" missed="16" covered="192"/><counter type="BRANCH" missed="8" covered="20"/><counter type="LINE" missed="4" covered="40"/><counter type="COMPLEXITY" missed="7" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="27" covered="338"/><counter type="BRANCH" missed="11" covered="31"/><counter type="LINE" missed="6" covered="72"/><counter type="COMPLEXITY" missed="10" covered="14"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/core/Metrics" sourcefilename="Metrics.java"><method name="&lt;init&gt;" desc="()V" line="6"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="accuracy" desc="([[D[[D)D" line="19"><counter type="INSTRUCTION" missed="0" covered="59"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accuracy" desc="([D[D)D" line="45"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="101"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="2" covered="14"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/core/Gradient" sourcefilename="Gradient.java"><method name="&lt;init&gt;" desc="()V" line="13"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compute" desc="(Llinalg/Matrix;Llinalg/Matrix;Llinalg/Matrix;Lcom/jml/losses/Function;Lcom/jml/core/Model;)Llinalg/Matrix;" line="32"><counter type="INSTRUCTION" missed="0" covered="70"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="11"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="73"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="2" covered="10"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/core/LogRegFromData" sourcefilename="LogRegFromData.java"><method name="&lt;init&gt;" desc="()V" line="12"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="(Ljava/util/List;Ljava/util/List;)Lcom/jml/core/Model;" line="16"><counter type="INSTRUCTION" missed="5" covered="72"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="19"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="75"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="20"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/core/Stats" sourcefilename="Stats.java"><method name="&lt;init&gt;" desc="()V" line="17"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="round" desc="(DI)D" line="23"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mean" desc="([D)D" line="36"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="median" desc="([D)D" line="54"><counter type="INSTRUCTION" missed="0" covered="68"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mode" desc="([D)D" line="85"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="variance" desc="([D)D" line="113"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="std" desc="([D)D" line="129"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="determination" desc="([D[D)D" line="141"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="correlation" desc="([D[D)D" line="160"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sse" desc="([D[D)D" line="172"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sst" desc="([D)D" line="191"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="min" desc="([D)D" line="209"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="minIndex" desc="([D)I" line="228"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="minIndices" desc="([DI)[I" line="250"><counter type="INSTRUCTION" missed="8" covered="88"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="1" covered="16"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="max" desc="([D)D" line="300"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="genRandBoolean" desc="(D)Z" line="320"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="15"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="43" covered="415"/><counter type="BRANCH" missed="8" covered="44"/><counter type="LINE" missed="7" covered="85"/><counter type="COMPLEXITY" missed="8" covered="35"/><counter type="METHOD" missed="3" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/core/KnnFromData" sourcefilename="KnnFromData.java"><method name="&lt;init&gt;" desc="()V" line="15"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="(Ljava/util/List;Ljava/util/List;)Lcom/jml/core/Model;" line="24"><counter type="INSTRUCTION" missed="5" covered="143"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="1" covered="32"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="146"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="1" covered="33"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/core/ModelFromData" sourcefilename="ModelFromData.java"><method name="&lt;init&gt;" desc="()V" line="7"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="create" desc="(Ljava/util/List;)Lcom/jml/core/Model;" line="12"><counter type="INSTRUCTION" missed="11" covered="112"/><counter type="BRANCH" missed="3" covered="15"/><counter type="LINE" missed="2" covered="23"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getContent" desc="(Ljava/lang/String;)Ljava/lang/String;" line="64"><counter type="INSTRUCTION" missed="10" covered="88"/><counter type="BRANCH" missed="5" covered="17"/><counter type="LINE" missed="2" covered="16"/><counter type="COMPLEXITY" missed="5" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTag" desc="(Ljava/lang/String;)Ljava/lang/String;" line="109"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="28" covered="245"/><counter type="BRANCH" missed="11" covered="39"/><counter type="LINE" missed="5" covered="49"/><counter type="COMPLEXITY" missed="12" covered="17"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/core/Block" sourcefilename="Block.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="17"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildBlock" desc="()V" line="35"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getBlock" desc="()Ljava/lang/String;" line="51"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildFileContent" desc="([Lcom/jml/core/Block;)Ljava/lang/String;" line="62"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="87"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/core/Stats$1" sourcefilename="Stats.java"><method name="&lt;init&gt;" desc="()V" line="268"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compare" desc="(Ljava/util/Map$Entry;Ljava/util/Map$Entry;)I" line="272"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/core/MultRegFromData" sourcefilename="MultRegFromData.java"><method name="&lt;init&gt;" desc="()V" line="11"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="(Ljava/util/List;Ljava/util/List;)Lcom/jml/core/Model;" line="16"><counter type="INSTRUCTION" missed="6" covered="72"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="18"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="75"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="19"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/core/LinRegFromData" sourcefilename="LinRegFromData.java"><method name="&lt;init&gt;" desc="()V" line="11"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="(Ljava/util/List;Ljava/util/List;)Lcom/jml/core/Model;" line="20"><counter type="INSTRUCTION" missed="5" covered="72"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="19"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="75"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="20"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/core/DataLoader" sourcefilename="DataLoader.java"><method name="&lt;init&gt;" desc="()V" line="13"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="loadFeaturesAndTargets" desc="(Ljava/lang/String;)Ljava/util/List;" line="29"><counter type="INSTRUCTION" missed="0" covered="77"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="loadFeaturesAndTargets" desc="(Ljava/lang/String;[I[I)Ljava/util/List;" line="62"><counter type="INSTRUCTION" missed="0" covered="126"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="203"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="2" covered="30"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/core/ModelTypes" sourcefilename="ModelTypes.java"><method name="&lt;clinit&gt;" desc="()V" line="3"><counter type="INSTRUCTION" missed="0" covered="63"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="63"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/core/Model" sourcefilename="Model.java"><method name="&lt;init&gt;" desc="()V" line="17"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="load" desc="(Ljava/lang/String;)Lcom/jml/core/Model;" line="100"><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nextBlock" desc="(Ljava/util/List;)Ljava/lang/String;" line="134"><counter type="INSTRUCTION" missed="5" covered="106"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="1" covered="19"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="158"/><counter type="BRANCH" missed="2" covered="20"/><counter type="LINE" missed="1" covered="32"/><counter type="COMPLEXITY" missed="2" covered="12"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/core/PolyRegFromData" sourcefilename="PolyRegFromData.java"><method name="&lt;init&gt;" desc="()V" line="12"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="(Ljava/util/List;Ljava/util/List;)Lcom/jml/core/Model;" line="22"><counter type="INSTRUCTION" missed="5" covered="82"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="1" covered="21"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="85"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="1" covered="22"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="DataLoader.java"><line nr="13" mi="2" ci="0" mb="0" cb="0"/><line nr="14" mi="5" ci="0" mb="0" cb="0"/><line nr="29" mi="0" ci="4" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="10" mb="0" cb="0"/><line nr="33" mi="0" ci="5" mb="0" cb="0"/><line nr="35" mi="0" ci="8" mb="0" cb="2"/><line nr="36" mi="0" ci="12" mb="0" cb="2"/><line nr="37" mi="0" ci="10" mb="0" cb="0"/><line nr="40" mi="0" ci="15" mb="0" cb="0"/><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="10" mb="0" cb="2"/><line nr="66" mi="0" ci="13" mb="0" cb="0"/><line nr="71" mi="0" ci="6" mb="0" cb="0"/><line nr="72" mi="0" ci="6" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="16" mb="0" cb="2"/><line nr="76" mi="0" ci="8" mb="0" cb="2"/><line nr="77" mi="0" ci="10" mb="0" cb="0"/><line nr="79" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="16" mb="0" cb="2"/><line nr="84" mi="0" ci="8" mb="0" cb="2"/><line nr="85" mi="0" ci="10" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="203"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="2" covered="30"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Block.java"><line nr="17" mi="0" ci="5" mb="0" cb="0"/><line nr="26" mi="0" ci="2" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="2" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="5" mb="0" cb="0"/><line nr="36" mi="0" ci="6" mb="0" cb="0"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="0" ci="6" mb="0" cb="0"/><line nr="39" mi="0" ci="5" mb="0" cb="0"/><line nr="40" mi="0" ci="6" mb="0" cb="0"/><line nr="41" mi="0" ci="5" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="16" mb="0" cb="2"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="87"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Metrics.java"><line nr="6" mi="2" ci="0" mb="0" cb="0"/><line nr="7" mi="5" ci="0" mb="0" cb="0"/><line nr="19" mi="0" ci="2" mb="0" cb="0"/><line nr="21" mi="0" ci="14" mb="0" cb="4"/><line nr="22" mi="0" ci="17" mb="0" cb="0"/><line nr="27" mi="0" ci="8" mb="0" cb="2"/><line nr="28" mi="0" ci="8" mb="0" cb="2"/><line nr="29" mi="0" ci="4" mb="0" cb="0"/><line nr="33" mi="0" ci="6" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="5" mb="0" cb="2"/><line nr="48" mi="0" ci="9" mb="0" cb="0"/><line nr="52" mi="0" ci="8" mb="0" cb="2"/><line nr="53" mi="0" ci="8" mb="0" cb="2"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="101"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="2" covered="14"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ModelTypes.java"><line nr="3" mi="0" ci="3" mb="0" cb="0"/><line nr="4" mi="0" ci="18" mb="0" cb="0"/><line nr="5" mi="0" ci="30" mb="0" cb="0"/><line nr="6" mi="0" ci="12" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="63"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Gradient.java"><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="2" ci="0" mb="0" cb="0"/><line nr="14" mi="5" ci="0" mb="0" cb="0"/><line nr="32" mi="0" ci="6" mb="0" cb="0"/><line nr="36" mi="0" ci="6" mb="0" cb="0"/><line nr="37" mi="0" ci="8" mb="0" cb="0"/><line nr="39" mi="0" ci="8" mb="0" cb="2"/><line nr="40" mi="0" ci="12" mb="0" cb="0"/><line nr="41" mi="0" ci="12" mb="0" cb="0"/><line nr="43" mi="0" ci="8" mb="0" cb="0"/><line nr="46" mi="0" ci="8" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="73"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="2" covered="10"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LogRegFromData.java"><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="4" mb="0" cb="0"/><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="6" mb="1" cb="3"/><line nr="21" mi="0" ci="5" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><line nr="23" mi="0" ci="5" mb="0" cb="0"/><line nr="25" mi="0" ci="5" mb="1" cb="1"/><line nr="26" mi="0" ci="4" mb="0" cb="0"/><line nr="28" mi="0" ci="4" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="32" mi="0" ci="9" mb="0" cb="0"/><line nr="33" mi="0" ci="6" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><line nr="36" mi="5" ci="0" mb="0" cb="0"/><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="75"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="20"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MultRegFromData.java"><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="4" mb="0" cb="0"/><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="6" mb="1" cb="3"/><line nr="23" mi="0" ci="5" mb="0" cb="0"/><line nr="24" mi="0" ci="5" mb="0" cb="0"/><line nr="25" mi="0" ci="5" mb="0" cb="0"/><line nr="27" mi="0" ci="5" mb="1" cb="1"/><line nr="28" mi="0" ci="4" mb="0" cb="0"/><line nr="30" mi="0" ci="4" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="32" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="0" ci="9" mb="0" cb="0"/><line nr="35" mi="0" ci="6" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="38" mi="6" ci="0" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="75"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="19"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LinRegFromData.java"><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="4" mb="0" cb="0"/><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="6" mb="1" cb="3"/><line nr="25" mi="0" ci="5" mb="0" cb="0"/><line nr="26" mi="0" ci="5" mb="0" cb="0"/><line nr="27" mi="0" ci="5" mb="0" cb="0"/><line nr="29" mi="0" ci="5" mb="1" cb="1"/><line nr="30" mi="0" ci="4" mb="0" cb="0"/><line nr="32" mi="0" ci="4" mb="0" cb="0"/><line nr="33" mi="0" ci="1" mb="0" cb="0"/><line nr="34" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="0" ci="9" mb="0" cb="0"/><line nr="37" mi="0" ci="6" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="5" ci="0" mb="0" cb="0"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="75"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="20"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Model.java"><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="2"/><line nr="101" mi="0" ci="5" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="0" cb="2"/><line nr="107" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="110" mi="0" ci="4" mb="0" cb="0"/><line nr="111" mi="0" ci="6" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="2"/><line nr="114" mi="0" ci="6" mb="0" cb="0"/><line nr="117" mi="0" ci="2" mb="0" cb="0"/><line nr="119" mi="0" ci="6" mb="0" cb="0"/><line nr="134" mi="0" ci="4" mb="0" cb="0"/><line nr="135" mi="0" ci="4" mb="0" cb="0"/><line nr="136" mi="0" ci="2" mb="0" cb="0"/><line nr="138" mi="0" ci="2" mb="0" cb="2"/><line nr="139" mi="0" ci="14" mb="0" cb="4"/><line nr="140" mi="0" ci="2" mb="1" cb="1"/><line nr="141" mi="5" ci="0" mb="0" cb="0"/><line nr="145" mi="0" ci="9" mb="0" cb="0"/><line nr="147" mi="0" ci="7" mb="0" cb="0"/><line nr="148" mi="0" ci="4" mb="0" cb="0"/><line nr="150" mi="0" ci="4" mb="0" cb="2"/><line nr="151" mi="0" ci="3" mb="0" cb="0"/><line nr="154" mi="0" ci="16" mb="1" cb="5"/><line nr="155" mi="0" ci="2" mb="0" cb="0"/><line nr="160" mi="0" ci="6" mb="0" cb="0"/><line nr="162" mi="0" ci="7" mb="0" cb="0"/><line nr="163" mi="0" ci="5" mb="0" cb="0"/><line nr="165" mi="0" ci="7" mb="0" cb="0"/><line nr="166" mi="0" ci="5" mb="0" cb="0"/><line nr="170" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="158"/><counter type="BRANCH" missed="2" covered="20"/><counter type="LINE" missed="1" covered="32"/><counter type="COMPLEXITY" missed="2" covered="12"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ModelFromData.java"><line nr="7" mi="7" ci="0" mb="0" cb="0"/><line nr="12" mi="0" ci="2" mb="0" cb="0"/><line nr="14" mi="0" ci="8" mb="0" cb="0"/><line nr="16" mi="0" ci="3" mb="0" cb="2"/><line nr="17" mi="0" ci="5" mb="0" cb="0"/><line nr="18" mi="0" ci="5" mb="0" cb="0"/><line nr="19" mi="0" ci="6" mb="0" cb="0"/><line nr="22" mi="0" ci="7" mb="1" cb="1"/><line nr="23" mi="5" ci="0" mb="0" cb="0"/><line nr="26" mi="0" ci="5" mb="0" cb="0"/><line nr="27" mi="0" ci="4" mb="0" cb="0"/><line nr="29" mi="0" ci="5" mb="0" cb="2"/><line nr="30" mi="0" ci="5" mb="0" cb="0"/><line nr="32" mi="0" ci="5" mb="0" cb="2"/><line nr="33" mi="0" ci="5" mb="0" cb="0"/><line nr="35" mi="0" ci="5" mb="0" cb="2"/><line nr="36" mi="0" ci="5" mb="0" cb="0"/><line nr="38" mi="0" ci="5" mb="0" cb="2"/><line nr="39" mi="0" ci="5" mb="0" cb="0"/><line nr="41" mi="0" ci="5" mb="0" cb="2"/><line nr="42" mi="0" ci="5" mb="0" cb="0"/><line nr="44" mi="1" ci="5" mb="1" cb="1"/><line nr="46" mi="0" ci="5" mb="1" cb="1"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="5" ci="0" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="6" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="8" mb="1" cb="1"/><line nr="69" mi="0" ci="11" mb="1" cb="5"/><line nr="70" mi="0" ci="5" mb="0" cb="0"/><line nr="71" mi="0" ci="8" mb="0" cb="4"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="10" mb="1" cb="1"/><line nr="75" mi="0" ci="5" mb="0" cb="2"/><line nr="76" mi="0" ci="6" mb="0" cb="0"/><line nr="82" mi="0" ci="5" mb="0" cb="2"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="1" cb="1"/><line nr="90" mi="5" ci="0" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="1" cb="1"/><line nr="94" mi="5" ci="0" mb="0" cb="0"/><line nr="97" mi="0" ci="8" mb="0" cb="0"/><line nr="109" mi="0" ci="2" mb="0" cb="0"/><line nr="110" mi="0" ci="4" mb="0" cb="0"/><line nr="112" mi="0" ci="8" mb="1" cb="1"/><line nr="113" mi="0" ci="5" mb="0" cb="2"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="0" ci="7" mb="1" cb="3"/><line nr="116" mi="0" ci="7" mb="0" cb="0"/><line nr="117" mi="0" ci="5" mb="1" cb="1"/><line nr="118" mi="0" ci="1" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="28" covered="245"/><counter type="BRANCH" missed="11" covered="39"/><counter type="LINE" missed="5" covered="49"/><counter type="COMPLEXITY" missed="12" covered="17"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="KnnFromData.java"><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="4" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="0" ci="6" mb="1" cb="3"/><line nr="29" mi="0" ci="5" mb="0" cb="0"/><line nr="30" mi="0" ci="5" mb="0" cb="0"/><line nr="31" mi="0" ci="5" mb="0" cb="0"/><line nr="33" mi="0" ci="5" mb="0" cb="2"/><line nr="34" mi="0" ci="5" mb="0" cb="0"/><line nr="36" mi="0" ci="5" mb="0" cb="2"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="39" mi="0" ci="5" mb="0" cb="2"/><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="0" ci="8" mb="0" cb="2"/><line nr="46" mi="0" ci="10" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="6" mb="0" cb="0"/><line nr="54" mi="0" ci="8" mb="0" cb="2"/><line nr="55" mi="0" ci="7" mb="0" cb="0"/><line nr="58" mi="0" ci="6" mb="0" cb="0"/><line nr="60" mi="0" ci="6" mb="1" cb="1"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="6" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="5" ci="0" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="146"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="1" covered="33"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PolyRegFromData.java"><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="4" mb="0" cb="0"/><line nr="23" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="0" ci="6" mb="1" cb="3"/><line nr="27" mi="0" ci="5" mb="0" cb="0"/><line nr="28" mi="0" ci="5" mb="0" cb="0"/><line nr="29" mi="0" ci="5" mb="0" cb="0"/><line nr="31" mi="0" ci="5" mb="0" cb="2"/><line nr="32" mi="0" ci="5" mb="0" cb="0"/><line nr="34" mi="0" ci="5" mb="1" cb="1"/><line nr="35" mi="0" ci="4" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="41" mi="0" ci="9" mb="0" cb="0"/><line nr="42" mi="0" ci="6" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="5" ci="0" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="85"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="1" covered="22"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NeuralNetFromData.java"><line nr="13" mi="0" ci="3" mb="0" cb="0"/><line nr="18" mi="0" ci="4" mb="0" cb="0"/><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="6" mb="1" cb="3"/><line nr="24" mi="0" ci="5" mb="0" cb="0"/><line nr="25" mi="0" ci="5" mb="0" cb="0"/><line nr="26" mi="0" ci="5" mb="0" cb="0"/><line nr="28" mi="0" ci="5" mb="0" cb="2"/><line nr="29" mi="0" ci="4" mb="0" cb="0"/><line nr="31" mi="0" ci="4" mb="1" cb="1"/><line nr="32" mi="5" ci="0" mb="0" cb="0"/><line nr="35" mi="0" ci="6" mb="0" cb="0"/><line nr="36" mi="0" ci="6" mb="0" cb="0"/><line nr="37" mi="0" ci="6" mb="0" cb="0"/><line nr="38" mi="0" ci="6" mb="0" cb="0"/><line nr="40" mi="0" ci="6" mb="1" cb="1"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="0" ci="8" mb="0" cb="0"/><line nr="48" mi="0" ci="6" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="2"/><line nr="58" mi="0" ci="6" mb="0" cb="0"/><line nr="62" mi="0" ci="10" mb="0" cb="2"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="6" ci="0" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="8" mb="1" cb="1"/><line nr="86" mi="4" ci="0" mb="0" cb="0"/><line nr="87" mi="5" ci="0" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="5" mb="0" cb="0"/><line nr="93" mi="0" ci="6" mb="1" cb="3"/><line nr="94" mi="0" ci="5" mb="0" cb="0"/><line nr="95" mi="0" ci="5" mb="0" cb="0"/><line nr="97" mi="0" ci="5" mb="0" cb="2"/><line nr="99" mi="0" ci="4" mb="1" cb="1"/><line nr="101" mi="3" ci="0" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="2"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="1" cb="1"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="5" mb="0" cb="2"/><line nr="112" mi="0" ci="4" mb="0" cb="0"/><line nr="113" mi="0" ci="5" mb="0" cb="0"/><line nr="114" mi="0" ci="5" mb="0" cb="0"/><line nr="116" mi="0" ci="6" mb="0" cb="2"/><line nr="118" mi="0" ci="4" mb="0" cb="0"/><line nr="119" mi="0" ci="7" mb="0" cb="0"/><line nr="120" mi="0" ci="5" mb="0" cb="0"/><line nr="122" mi="0" ci="8" mb="0" cb="2"/><line nr="123" mi="0" ci="6" mb="0" cb="0"/><line nr="125" mi="0" ci="10" mb="0" cb="2"/><line nr="126" mi="0" ci="8" mb="0" cb="0"/><line nr="130" mi="0" ci="5" mb="0" cb="0"/><line nr="132" mi="0" ci="6" mb="1" cb="1"/><line nr="134" mi="0" ci="4" mb="0" cb="0"/><line nr="135" mi="0" ci="5" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="138" mi="0" ci="6" mb="0" cb="0"/><line nr="139" mi="0" ci="1" mb="0" cb="0"/><line nr="143" mi="0" ci="4" mb="1" cb="1"/><line nr="144" mi="0" ci="7" mb="0" cb="0"/><line nr="145" mi="0" ci="3" mb="0" cb="0"/><line nr="146" mi="0" ci="4" mb="0" cb="0"/><line nr="148" mi="4" ci="0" mb="2" cb="0"/><line nr="152" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="27" covered="338"/><counter type="BRANCH" missed="11" covered="31"/><counter type="LINE" missed="6" covered="72"/><counter type="COMPLEXITY" missed="10" covered="14"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Stats.java"><line nr="15" mi="0" ci="5" mb="0" cb="0"/><line nr="17" mi="2" ci="0" mb="0" cb="0"/><line nr="18" mi="5" ci="0" mb="0" cb="0"/><line nr="23" mi="0" ci="6" mb="0" cb="0"/><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="37" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="0" ci="16" mb="0" cb="2"/><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="6" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="2"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="59" mi="0" ci="4" mb="0" cb="2"/><line nr="60" mi="0" ci="11" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="7" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="67" mi="0" ci="5" mb="0" cb="2"/><line nr="68" mi="0" ci="13" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="88" mi="0" ci="8" mb="0" cb="2"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="8" mb="0" cb="2"/><line nr="91" mi="0" ci="8" mb="0" cb="2"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="2"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="2" mb="0" cb="0"/><line nr="113" mi="0" ci="4" mb="0" cb="2"/><line nr="114" mi="0" ci="5" mb="0" cb="0"/><line nr="117" mi="0" ci="9" mb="0" cb="0"/><line nr="129" mi="0" ci="8" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="0" cb="0"/><line nr="144" mi="0" ci="4" mb="0" cb="2"/><line nr="145" mi="0" ci="5" mb="0" cb="0"/><line nr="148" mi="0" ci="8" mb="0" cb="0"/><line nr="160" mi="5" ci="0" mb="0" cb="0"/><line nr="172" mi="0" ci="2" mb="0" cb="0"/><line nr="174" mi="0" ci="3" mb="0" cb="0"/><line nr="176" mi="0" ci="8" mb="0" cb="2"/><line nr="177" mi="0" ci="12" mb="0" cb="0"/><line nr="180" mi="0" ci="2" mb="0" cb="0"/><line nr="191" mi="0" ci="3" mb="0" cb="0"/><line nr="192" mi="0" ci="2" mb="0" cb="0"/><line nr="194" mi="0" ci="8" mb="0" cb="2"/><line nr="195" mi="0" ci="10" mb="0" cb="0"/><line nr="198" mi="0" ci="2" mb="0" cb="0"/><line nr="209" mi="0" ci="2" mb="0" cb="0"/><line nr="211" mi="0" ci="8" mb="0" cb="2"/><line nr="212" mi="0" ci="6" mb="0" cb="2"/><line nr="213" mi="0" ci="4" mb="0" cb="0"/><line nr="217" mi="0" ci="2" mb="0" cb="0"/><line nr="228" mi="0" ci="2" mb="0" cb="0"/><line nr="229" mi="0" ci="2" mb="0" cb="0"/><line nr="231" mi="0" ci="8" mb="0" cb="2"/><line nr="232" mi="0" ci="6" mb="0" cb="2"/><line nr="233" mi="0" ci="4" mb="0" cb="0"/><line nr="234" mi="0" ci="2" mb="0" cb="0"/><line nr="238" mi="0" ci="2" mb="0" cb="0"/><line nr="250" mi="0" ci="4" mb="1" cb="1"/><line nr="251" mi="8" ci="0" mb="0" cb="0"/><line nr="255" mi="0" ci="3" mb="0" cb="0"/><line nr="257" mi="0" ci="4" mb="0" cb="0"/><line nr="259" mi="0" ci="8" mb="0" cb="2"/><line nr="260" mi="0" ci="9" mb="0" cb="0"/><line nr="264" mi="0" ci="3" mb="0" cb="0"/><line nr="265" mi="0" ci="3" mb="0" cb="0"/><line nr="268" mi="0" ci="8" mb="0" cb="0"/><line nr="272" mi="0" ci="8" mb="0" cb="0"/><line nr="277" mi="0" ci="4" mb="0" cb="0"/><line nr="278" mi="0" ci="10" mb="0" cb="2"/><line nr="279" mi="0" ci="9" mb="0" cb="0"/><line nr="280" mi="0" ci="1" mb="0" cb="0"/><line nr="283" mi="0" ci="4" mb="0" cb="0"/><line nr="285" mi="0" ci="11" mb="1" cb="3"/><line nr="286" mi="0" ci="8" mb="0" cb="0"/><line nr="289" mi="0" ci="2" mb="0" cb="0"/><line nr="300" mi="0" ci="2" mb="0" cb="0"/><line nr="302" mi="0" ci="8" mb="0" cb="2"/><line nr="303" mi="0" ci="6" mb="0" cb="2"/><line nr="304" mi="0" ci="4" mb="0" cb="0"/><line nr="308" mi="0" ci="2" mb="0" cb="0"/><line nr="320" mi="8" ci="0" mb="4" cb="0"/><line nr="321" mi="6" ci="0" mb="0" cb="0"/><line nr="324" mi="9" ci="0" mb="2" cb="0"/><counter type="INSTRUCTION" missed="43" covered="426"/><counter type="BRANCH" missed="8" covered="44"/><counter type="LINE" missed="7" covered="86"/><counter type="COMPLEXITY" missed="8" covered="37"/><counter type="METHOD" missed="3" covered="16"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="150" covered="2150"/><counter type="BRANCH" missed="42" covered="198"/><counter type="LINE" missed="30" covered="430"/><counter type="COMPLEXITY" missed="45" covered="128"/><counter type="METHOD" missed="7" covered="46"/><counter type="CLASS" missed="0" covered="15"/></package><package name="com/jml/neural_network/activations"><class name="com/jml/neural_network/activations/Relu" sourcefilename="Relu.java"><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Llinalg/Matrix;)Llinalg/Matrix;" line="21"><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="slope" desc="(Llinalg/Matrix;)Llinalg/Matrix;" line="47"><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Ljava/lang/String;" line="69"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="104"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/neural_network/activations/ActivationFunction" sourcefilename="ActivationFunction.java"/><class name="com/jml/neural_network/activations/Sigmoid" sourcefilename="Sigmoid.java"><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Llinalg/Matrix;)Llinalg/Matrix;" line="21"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="slope" desc="(Llinalg/Matrix;)Llinalg/Matrix;" line="41"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Ljava/lang/String;" line="60"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="96"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/neural_network/activations/Linear" sourcefilename="Linear.java"><method name="&lt;init&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Llinalg/Matrix;)Llinalg/Matrix;" line="22"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="slope" desc="(Llinalg/Matrix;)Llinalg/Matrix;" line="34"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getName" desc="()Ljava/lang/String;" line="45"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="6"/><counter type="LINE" missed="3" covered="2"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/neural_network/activations/Activations" sourcefilename="Activations.java"><method name="&lt;init&gt;" desc="()V" line="7"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="12"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="13"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Relu.java"><line nr="9" mi="0" ci="2" mb="0" cb="0"/><line nr="11" mi="0" ci="4" mb="0" cb="0"/><line nr="21" mi="0" ci="6" mb="0" cb="0"/><line nr="24" mi="0" ci="8" mb="0" cb="2"/><line nr="25" mi="0" ci="8" mb="0" cb="2"/><line nr="26" mi="0" ci="5" mb="0" cb="0"/><line nr="27" mi="0" ci="4" mb="0" cb="2"/><line nr="28" mi="0" ci="7" mb="0" cb="0"/><line nr="30" mi="0" ci="6" mb="0" cb="0"/><line nr="35" mi="0" ci="5" mb="0" cb="0"/><line nr="47" mi="0" ci="6" mb="0" cb="0"/><line nr="50" mi="0" ci="8" mb="0" cb="2"/><line nr="51" mi="0" ci="8" mb="0" cb="2"/><line nr="52" mi="0" ci="7" mb="0" cb="2"/><line nr="53" mi="0" ci="7" mb="0" cb="0"/><line nr="55" mi="0" ci="6" mb="0" cb="0"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="104"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Sigmoid.java"><line nr="9" mi="0" ci="2" mb="0" cb="0"/><line nr="11" mi="0" ci="4" mb="0" cb="0"/><line nr="21" mi="0" ci="6" mb="0" cb="0"/><line nr="23" mi="0" ci="8" mb="0" cb="2"/><line nr="24" mi="0" ci="8" mb="0" cb="2"/><line nr="25" mi="0" ci="15" mb="0" cb="0"/><line nr="29" mi="0" ci="5" mb="0" cb="0"/><line nr="41" mi="0" ci="6" mb="0" cb="0"/><line nr="44" mi="0" ci="8" mb="0" cb="2"/><line nr="45" mi="0" ci="8" mb="0" cb="2"/><line nr="46" mi="0" ci="7" mb="0" cb="0"/><line nr="47" mi="0" ci="12" mb="0" cb="0"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="96"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Linear.java"><line nr="10" mi="0" ci="2" mb="0" cb="0"/><line nr="12" mi="0" ci="4" mb="0" cb="0"/><line nr="22" mi="3" ci="0" mb="0" cb="0"/><line nr="34" mi="4" ci="0" mb="0" cb="0"/><line nr="45" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="6"/><counter type="LINE" missed="3" covered="2"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Activations.java"><line nr="7" mi="3" ci="0" mb="0" cb="0"/><line nr="12" mi="0" ci="4" mb="0" cb="0"/><line nr="18" mi="0" ci="4" mb="0" cb="0"/><line nr="20" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="13"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ActivationFunction.java"/><counter type="INSTRUCTION" missed="12" covered="219"/><counter type="BRANCH" missed="0" covered="20"/><counter type="LINE" missed="4" covered="37"/><counter type="COMPLEXITY" missed="4" covered="20"/><counter type="METHOD" missed="4" covered="10"/><counter type="CLASS" missed="0" covered="4"/></package><package name="com/jml/preprocessing"><class name="com/jml/preprocessing/Normalize" sourcefilename="Normalize.java"><method name="&lt;init&gt;" desc="()V" line="22"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="minMaxScale" desc="([D)[D" line="37"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="minMaxScale" desc="([DDD)[D" line="53"><counter type="INSTRUCTION" missed="0" covered="58"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="meanNormalize" desc="([D)[D" line="81"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="l1" desc="([D)[D" line="105"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="l2" desc="([D)[D" line="120"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="l2" desc="([[D)[[D" line="136"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="zScore" desc="([D)[D" line="154"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="zScore" desc="([[D)[[D" line="178"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="33" covered="212"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="6" covered="38"/><counter type="COMPLEXITY" missed="2" covered="15"/><counter type="METHOD" missed="2" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/preprocessing/Encoder" sourcefilename="Encoder.java"><method name="&lt;init&gt;" desc="()V" line="15"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encodeClasses" desc="([I)[I" line="29"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="encodeClasses" desc="([Ljava/lang/String;)[I" line="45"><counter type="INSTRUCTION" missed="0" covered="63"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="encodeClasses" desc="([[Ljava/lang/String;)[I" line="78"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="18" covered="104"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="5" covered="19"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Normalize.java"><line nr="22" mi="2" ci="0" mb="0" cb="0"/><line nr="23" mi="5" ci="0" mb="0" cb="0"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="2"/><line nr="54" mi="0" ci="7" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="2"/><line nr="62" mi="0" ci="5" mb="0" cb="0"/><line nr="65" mi="0" ci="8" mb="0" cb="2"/><line nr="66" mi="0" ci="18" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="0" cb="2"/><line nr="87" mi="0" ci="5" mb="0" cb="0"/><line nr="90" mi="0" ci="8" mb="0" cb="2"/><line nr="91" mi="0" ci="12" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="6" ci="0" mb="0" cb="0"/><line nr="106" mi="3" ci="0" mb="0" cb="0"/><line nr="107" mi="8" ci="0" mb="0" cb="0"/><line nr="109" mi="9" ci="0" mb="0" cb="0"/><line nr="120" mi="0" ci="6" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="0" ci="8" mb="0" cb="0"/><line nr="124" mi="0" ci="8" mb="0" cb="0"/><line nr="136" mi="0" ci="8" mb="0" cb="0"/><line nr="138" mi="0" ci="8" mb="0" cb="2"/><line nr="139" mi="0" ci="7" mb="0" cb="0"/><line nr="142" mi="0" ci="2" mb="0" cb="0"/><line nr="154" mi="0" ci="4" mb="0" cb="0"/><line nr="155" mi="0" ci="3" mb="0" cb="0"/><line nr="156" mi="0" ci="3" mb="0" cb="0"/><line nr="158" mi="0" ci="8" mb="0" cb="2"/><line nr="159" mi="0" ci="10" mb="0" cb="0"/><line nr="162" mi="0" ci="2" mb="0" cb="0"/><line nr="178" mi="0" ci="8" mb="0" cb="0"/><line nr="180" mi="0" ci="8" mb="0" cb="2"/><line nr="181" mi="0" ci="7" mb="0" cb="0"/><line nr="184" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="33" covered="212"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="6" covered="38"/><counter type="COMPLEXITY" missed="2" covered="15"/><counter type="METHOD" missed="2" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Encoder.java"><line nr="15" mi="7" ci="0" mb="0" cb="0"/><line nr="29" mi="4" ci="0" mb="0" cb="0"/><line nr="30" mi="2" ci="0" mb="0" cb="0"/><line nr="31" mi="2" ci="0" mb="0" cb="0"/><line nr="32" mi="3" ci="0" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="16" mb="0" cb="2"/><line nr="53" mi="0" ci="4" mb="0" cb="2"/><line nr="54" mi="0" ci="6" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="8" mb="0" cb="2"/><line nr="60" mi="0" ci="10" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="9" mb="0" cb="0"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="8" mb="0" cb="2"/><line nr="82" mi="0" ci="10" mb="0" cb="2"/><line nr="83" mi="0" ci="8" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="18" covered="104"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="5" covered="19"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="51" covered="316"/><counter type="BRANCH" missed="0" covered="26"/><counter type="LINE" missed="11" covered="57"/><counter type="COMPLEXITY" missed="4" covered="22"/><counter type="METHOD" missed="4" covered="9"/><counter type="CLASS" missed="0" covered="2"/></package><package name="com/jml/losses"><class name="com/jml/losses/LossFunctions" sourcefilename="LossFunctions.java"><method name="&lt;init&gt;" desc="()V" line="16"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$static$3" desc="(Llinalg/Matrix;Llinalg/Matrix;)Llinalg/Matrix;" line="82"><counter type="INSTRUCTION" missed="77" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$static$2" desc="(Llinalg/Matrix;Llinalg/Matrix;)Llinalg/Matrix;" line="49"><counter type="INSTRUCTION" missed="18" covered="75"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="3" covered="11"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$1" desc="(Llinalg/Matrix;Llinalg/Matrix;)Llinalg/Matrix;" line="39"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$0" desc="(Llinalg/Matrix;Llinalg/Matrix;)Llinalg/Matrix;" line="28"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="102" covered="106"/><counter type="BRANCH" missed="11" covered="5"/><counter type="LINE" missed="17" covered="17"/><counter type="COMPLEXITY" missed="9" covered="5"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/losses/Function" sourcefilename="Function.java"/><sourcefile name="Function.java"/><sourcefile name="LossFunctions.java"><line nr="16" mi="2" ci="0" mb="0" cb="0"/><line nr="17" mi="5" ci="0" mb="0" cb="0"/><line nr="27" mi="0" ci="2" mb="0" cb="0"/><line nr="28" mi="0" ci="13" mb="0" cb="0"/><line nr="38" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="0" ci="9" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="1" cb="1"/><line nr="54" mi="5" ci="0" mb="0" cb="0"/><line nr="58" mi="0" ci="8" mb="0" cb="2"/><line nr="60" mi="0" ci="7" mb="1" cb="1"/><line nr="61" mi="6" ci="0" mb="0" cb="0"/><line nr="62" mi="0" ci="7" mb="1" cb="1"/><line nr="63" mi="7" ci="0" mb="0" cb="0"/><line nr="66" mi="0" ci="15" mb="0" cb="0"/><line nr="67" mi="0" ci="13" mb="0" cb="0"/><line nr="70" mi="0" ci="10" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="2" ci="0" mb="0" cb="0"/><line nr="83" mi="2" ci="0" mb="0" cb="0"/><line nr="84" mi="5" ci="0" mb="0" cb="0"/><line nr="87" mi="8" ci="0" mb="2" cb="0"/><line nr="88" mi="8" ci="0" mb="2" cb="0"/><line nr="90" mi="7" ci="0" mb="2" cb="0"/><line nr="91" mi="6" ci="0" mb="0" cb="0"/><line nr="92" mi="7" ci="0" mb="2" cb="0"/><line nr="93" mi="7" ci="0" mb="0" cb="0"/><line nr="96" mi="13" ci="0" mb="0" cb="0"/><line nr="100" mi="10" ci="0" mb="0" cb="0"/><line nr="102" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="102" covered="106"/><counter type="BRANCH" missed="11" covered="5"/><counter type="LINE" missed="17" covered="17"/><counter type="COMPLEXITY" missed="9" covered="5"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="102" covered="106"/><counter type="BRANCH" missed="11" covered="5"/><counter type="LINE" missed="17" covered="17"/><counter type="COMPLEXITY" missed="9" covered="5"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></package><package name="com/jml/util"><class name="com/jml/util/ArrayUtils" sourcefilename="ArrayUtils.java"><method name="&lt;init&gt;" desc="()V" line="7"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="round" desc="([DI)[D" line="18"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="round" desc="([[DI)[[D" line="38"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asString" desc="([I)Ljava/lang/String;" line="55"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asString" desc="([[I)Ljava/lang/String;" line="66"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="asString" desc="([D)Ljava/lang/String;" line="77"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asString" desc="([[D)Ljava/lang/String;" line="88"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asString" desc="([Ljava/lang/Object;)Ljava/lang/String;" line="99"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asString2D" desc="([[Ljava/lang/Object;)Ljava/lang/String;" line="120"><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toObject" desc="(Ljava/lang/Object;)[Ljava/lang/Object;" line="146"><counter type="INSTRUCTION" missed="3" covered="24"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toObject2D" desc="(Ljava/lang/Object;)[[Ljava/lang/Object;" line="164"><counter type="INSTRUCTION" missed="3" covered="41"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toDouble" desc="([Ljava/lang/String;)[D" line="188"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toDouble" desc="([[Ljava/lang/String;)[[D" line="206"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="39" covered="256"/><counter type="BRANCH" missed="4" covered="28"/><counter type="LINE" missed="9" covered="45"/><counter type="COMPLEXITY" missed="7" covered="22"/><counter type="METHOD" missed="4" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/util/FileManager" sourcefilename="FileManager.java"><method name="&lt;init&gt;" desc="()V" line="14"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="stringToFile" desc="(Ljava/lang/String;Ljava/lang/String;)V" line="26"><counter type="INSTRUCTION" missed="5" covered="13"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readFile" desc="(Ljava/lang/String;)Ljava/lang/String;" line="40"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readCSVtoString" desc="(Ljava/lang/String;)[[Ljava/lang/String;" line="60"><counter type="INSTRUCTION" missed="5" covered="66"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="2" covered="13"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="readCSVtoDouble" desc="(Ljava/lang/String;)[[D" line="98"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$readFile$0" desc="(Ljava/lang/StringBuilder;Ljava/lang/String;)V" line="43"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="23" covered="110"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="8" covered="24"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/util/ValueError" sourcefilename="ValueError.java"><method name="&lt;init&gt;" desc="()V" line="6"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isNonNegative" desc="(D)Z" line="14"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPositive" desc="(D)Z" line="27"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="15" covered="8"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="4" covered="3"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/util/ArrayErrors" sourcefilename="ArrayErrors.java"><method name="&lt;init&gt;" desc="()V" line="7"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="checkNotEmpty" desc="([D)V" line="18"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkSameLength" desc="([D[D)V" line="32"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="FileManager.java"><line nr="14" mi="2" ci="0" mb="0" cb="0"/><line nr="15" mi="5" ci="0" mb="0" cb="0"/><line nr="26" mi="0" ci="8" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="1" ci="0" mb="0" cb="0"/><line nr="29" mi="4" ci="0" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="7" mb="0" cb="0"/><line nr="43" mi="0" ci="11" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="8" mb="0" cb="0"/><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="2"/><line nr="68" mi="0" ci="6" mb="0" cb="0"/><line nr="71" mi="0" ci="6" mb="0" cb="0"/><line nr="72" mi="0" ci="10" mb="0" cb="0"/><line nr="74" mi="0" ci="8" mb="0" cb="2"/><line nr="75" mi="0" ci="11" mb="0" cb="0"/><line nr="79" mi="1" ci="0" mb="0" cb="0"/><line nr="80" mi="4" ci="0" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="1" cb="1"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="0" ci="2" mb="0" cb="0"/><line nr="98" mi="3" ci="0" mb="0" cb="0"/><line nr="99" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="23" covered="110"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="8" covered="24"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ArrayErrors.java"><line nr="7" mi="2" ci="0" mb="0" cb="0"/><line nr="8" mi="5" ci="0" mb="0" cb="0"/><line nr="18" mi="0" ci="3" mb="0" cb="2"/><line nr="19" mi="0" ci="5" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="32" mi="0" ci="5" mb="0" cb="2"/><line nr="33" mi="0" ci="9" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="24"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ValueError.java"><line nr="6" mi="7" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="2"/><line nr="15" mi="0" ci="2" mb="0" cb="0"/><line nr="17" mi="0" ci="2" mb="0" cb="0"/><line nr="27" mi="4" ci="0" mb="2" cb="0"/><line nr="28" mi="2" ci="0" mb="0" cb="0"/><line nr="30" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="15" covered="8"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="4" covered="3"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ArrayUtils.java"><line nr="7" mi="3" ci="0" mb="0" cb="0"/><line nr="18" mi="0" ci="4" mb="0" cb="0"/><line nr="21" mi="0" ci="8" mb="0" cb="2"/><line nr="22" mi="0" ci="8" mb="0" cb="0"/><line nr="23" mi="0" ci="5" mb="0" cb="0"/><line nr="26" mi="0" ci="2" mb="0" cb="0"/><line nr="38" mi="0" ci="8" mb="0" cb="0"/><line nr="40" mi="0" ci="8" mb="0" cb="2"/><line nr="41" mi="0" ci="8" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="4" ci="0" mb="0" cb="0"/><line nr="66" mi="4" ci="0" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="0"/><line nr="99" mi="0" ci="5" mb="0" cb="0"/><line nr="101" mi="0" ci="8" mb="0" cb="2"/><line nr="102" mi="0" ci="7" mb="0" cb="0"/><line nr="104" mi="0" ci="6" mb="0" cb="2"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="5" mb="0" cb="0"/><line nr="123" mi="0" ci="8" mb="0" cb="2"/><line nr="124" mi="0" ci="10" mb="0" cb="2"/><line nr="125" mi="0" ci="9" mb="0" cb="0"/><line nr="127" mi="0" ci="8" mb="0" cb="2"/><line nr="128" mi="0" ci="4" mb="0" cb="0"/><line nr="132" mi="0" ci="6" mb="0" cb="2"/><line nr="133" mi="0" ci="4" mb="0" cb="0"/><line nr="137" mi="0" ci="3" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="1" cb="1"/><line nr="147" mi="3" ci="0" mb="0" cb="0"/><line nr="148" mi="0" ci="3" mb="0" cb="0"/><line nr="149" mi="0" ci="3" mb="0" cb="0"/><line nr="151" mi="0" ci="7" mb="0" cb="2"/><line nr="152" mi="0" ci="6" mb="0" cb="0"/><line nr="155" mi="0" ci="2" mb="0" cb="0"/><line nr="164" mi="0" ci="3" mb="1" cb="1"/><line nr="165" mi="3" ci="0" mb="0" cb="0"/><line nr="166" mi="0" ci="3" mb="0" cb="0"/><line nr="167" mi="0" ci="5" mb="0" cb="0"/><line nr="168" mi="0" ci="4" mb="0" cb="0"/><line nr="170" mi="0" ci="7" mb="0" cb="2"/><line nr="171" mi="0" ci="7" mb="0" cb="2"/><line nr="172" mi="0" ci="10" mb="0" cb="0"/><line nr="176" mi="0" ci="2" mb="0" cb="0"/><line nr="188" mi="4" ci="0" mb="0" cb="0"/><line nr="190" mi="8" ci="0" mb="2" cb="0"/><line nr="191" mi="8" ci="0" mb="0" cb="0"/><line nr="194" mi="2" ci="0" mb="0" cb="0"/><line nr="206" mi="0" ci="8" mb="0" cb="0"/><line nr="208" mi="0" ci="8" mb="0" cb="2"/><line nr="209" mi="0" ci="10" mb="0" cb="2"/><line nr="210" mi="0" ci="12" mb="0" cb="0"/><line nr="214" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="39" covered="256"/><counter type="BRANCH" missed="4" covered="28"/><counter type="LINE" missed="9" covered="45"/><counter type="COMPLEXITY" missed="7" covered="22"/><counter type="METHOD" missed="4" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="84" covered="398"/><counter type="BRANCH" missed="7" covered="39"/><counter type="LINE" missed="23" covered="78"/><counter type="COMPLEXITY" missed="14" covered="34"/><counter type="METHOD" missed="9" covered="16"/><counter type="CLASS" missed="0" covered="4"/></package><package name="com/jml/classifiers"><class name="com/jml/classifiers/KDTree" sourcefilename="KDTree.java"><method name="&lt;init&gt;" desc="(I)V" line="22"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="insert" desc="([D)V" line="37"><counter type="INSTRUCTION" missed="0" covered="77"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inOrder" desc="()Ljava/util/List;" line="80"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inOrder" desc="(Lcom/jml/classifiers/KDTree$PointNode;Ljava/util/List;)Ljava/util/List;" line="93"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="123"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="0" covered="31"/><counter type="COMPLEXITY" missed="1" covered="11"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/classifiers/KNearestNeighbors" sourcefilename="KNearestNeighbors.java"><method name="&lt;init&gt;" desc="()V" line="21"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(I)V" line="21"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(II)V" line="21"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fit" desc="([[D[I)Lcom/jml/core/Model;" line="84"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="predict" desc="([[D)[I" line="107"><counter type="INSTRUCTION" missed="0" covered="98"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="predict" desc="(Llinalg/Matrix;Llinalg/Matrix;)Llinalg/Matrix;" line="150"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getParams" desc="()Llinalg/Matrix;" line="163"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="saveModel" desc="(Ljava/lang/String;)V" line="176"><counter type="INSTRUCTION" missed="0" covered="81"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildDetails" desc="()V" line="198"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inspect" desc="()Ljava/lang/String;" line="217"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="228"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="14" covered="310"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="3" covered="55"/><counter type="COMPLEXITY" missed="3" covered="15"/><counter type="METHOD" missed="3" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/classifiers/ClassifierTags" sourcefilename="ClassifierTags.java"><method name="&lt;clinit&gt;" desc="()V" line="3"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/classifiers/LogisticRegression" sourcefilename="LogisticRegression.java"><method name="&lt;init&gt;" desc="()V" line="24"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(DIDLcom/jml/optimizers/Scheduler;)V" line="24"><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(DID)V" line="24"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(DI)V" line="24"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(D)V" line="24"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fit" desc="([[D[D)Lcom/jml/core/Model;" line="134"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="predict" desc="([[D)[D" line="163"><counter type="INSTRUCTION" missed="0" covered="58"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="predict" desc="(Llinalg/Matrix;Llinalg/Matrix;)Llinalg/Matrix;" line="191"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getParams" desc="()Llinalg/Matrix;" line="209"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLossHist" desc="()[D" line="223"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="saveModel" desc="(Ljava/lang/String;)V" line="240"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="buildDetails" desc="()V" line="258"><counter type="INSTRUCTION" missed="1" covered="77"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inspect" desc="()Ljava/lang/String;" line="291"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="302"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="523"/><counter type="BRANCH" missed="3" covered="23"/><counter type="LINE" missed="0" covered="81"/><counter type="COMPLEXITY" missed="3" covered="24"/><counter type="METHOD" missed="0" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><class name="com/jml/classifiers/KDTree$PointNode" sourcefilename="KDTree.java"><method name="&lt;init&gt;" desc="(Lcom/jml/classifiers/KDTree;[D)V" line="115"><counter type="INSTRUCTION" missed="9" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="()[D" line="130"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="(I)D" line="141"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="22"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="KDTree.java"><line nr="22" mi="0" ci="2" mb="0" cb="0"/><line nr="23" mi="0" ci="3" mb="0" cb="2"/><line nr="24" mi="0" ci="6" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="0" ci="5" mb="0" cb="2"/><line nr="38" mi="0" ci="9" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="2"/><line nr="43" mi="0" ci="8" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="1" cb="1"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="8" mb="0" cb="2"/><line nr="53" mi="0" ci="3" mb="0" cb="2"/><line nr="54" mi="0" ci="7" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="2"/><line nr="61" mi="0" ci="7" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="6" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="0" cb="2"/><line nr="94" mi="0" ci="6" mb="0" cb="0"/><line nr="95" mi="0" ci="5" mb="0" cb="0"/><line nr="96" mi="0" ci="6" mb="0" cb="0"/><line nr="99" mi="0" ci="2" mb="0" cb="0"/><line nr="115" mi="0" ci="5" mb="0" cb="0"/><line nr="116" mi="0" ci="5" mb="1" cb="1"/><line nr="117" mi="9" ci="0" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="0"/><line nr="122" mi="0" ci="1" mb="0" cb="0"/><line nr="130" mi="0" ci="3" mb="0" cb="0"/><line nr="141" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="145"/><counter type="BRANCH" missed="2" covered="16"/><counter type="LINE" missed="1" covered="37"/><counter type="COMPLEXITY" missed="2" covered="14"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="KNearestNeighbors.java"><line nr="21" mi="0" ci="12" mb="0" cb="0"/><line nr="25" mi="0" ci="9" mb="0" cb="0"/><line nr="28" mi="0" ci="24" mb="0" cb="0"/><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="84" mi="0" ci="5" mb="0" cb="2"/><line nr="85" mi="0" ci="5" mb="0" cb="0"/><line nr="88" mi="0" ci="6" mb="0" cb="0"/><line nr="89" mi="0" ci="7" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><line nr="107" mi="0" ci="7" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="112" mi="0" ci="5" mb="0" cb="0"/><line nr="116" mi="0" ci="8" mb="0" cb="2"/><line nr="117" mi="0" ci="8" mb="0" cb="0"/><line nr="118" mi="0" ci="5" mb="0" cb="0"/><line nr="120" mi="0" ci="9" mb="0" cb="2"/><line nr="121" mi="0" ci="13" mb="0" cb="0"/><line nr="124" mi="0" ci="7" mb="0" cb="0"/><line nr="125" mi="0" ci="4" mb="0" cb="0"/><line nr="127" mi="0" ci="8" mb="0" cb="2"/><line nr="128" mi="0" ci="12" mb="0" cb="0"/><line nr="131" mi="0" ci="6" mb="0" cb="0"/><line nr="134" mi="0" ci="2" mb="0" cb="0"/><line nr="150" mi="8" ci="0" mb="0" cb="0"/><line nr="163" mi="3" ci="0" mb="0" cb="0"/><line nr="176" mi="0" ci="3" mb="0" cb="2"/><line nr="177" mi="0" ci="5" mb="0" cb="0"/><line nr="179" mi="0" ci="4" mb="0" cb="2"/><line nr="180" mi="0" ci="5" mb="0" cb="0"/><line nr="183" mi="0" ci="3" mb="0" cb="0"/><line nr="186" mi="0" ci="10" mb="0" cb="0"/><line nr="187" mi="0" ci="11" mb="0" cb="0"/><line nr="188" mi="0" ci="11" mb="0" cb="0"/><line nr="189" mi="0" ci="12" mb="0" cb="0"/><line nr="190" mi="0" ci="12" mb="0" cb="0"/><line nr="192" mi="0" ci="4" mb="0" cb="0"/><line nr="193" mi="0" ci="1" mb="0" cb="0"/><line nr="198" mi="0" ci="5" mb="0" cb="0"/><line nr="202" mi="0" ci="13" mb="0" cb="2"/><line nr="206" mi="0" ci="1" mb="0" cb="0"/><line nr="217" mi="0" ci="4" mb="0" cb="0"/><line nr="228" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="310"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="3" covered="55"/><counter type="COMPLEXITY" missed="3" covered="15"/><counter type="METHOD" missed="3" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LogisticRegression.java"><line nr="24" mi="0" ci="15" mb="0" cb="0"/><line nr="26" mi="0" ci="20" mb="0" cb="0"/><line nr="31" mi="0" ci="15" mb="0" cb="0"/><line nr="32" mi="0" ci="15" mb="0" cb="0"/><line nr="33" mi="0" ci="15" mb="0" cb="0"/><line nr="38" mi="0" ci="40" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="12" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="9" mb="0" cb="0"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="0" ci="2" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="9" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="10" mb="0" cb="0"/><line nr="107" mi="0" ci="1" mb="0" cb="0"/><line nr="117" mi="0" ci="2" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="11" mb="0" cb="0"/><line nr="120" mi="0" ci="1" mb="0" cb="0"/><line nr="134" mi="0" ci="5" mb="0" cb="2"/><line nr="135" mi="0" ci="9" mb="0" cb="0"/><line nr="140" mi="0" ci="10" mb="0" cb="0"/><line nr="141" mi="0" ci="5" mb="0" cb="0"/><line nr="143" mi="0" ci="8" mb="0" cb="0"/><line nr="144" mi="0" ci="8" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="2" mb="0" cb="0"/><line nr="149" mi="0" ci="2" mb="0" cb="0"/><line nr="163" mi="0" ci="3" mb="0" cb="2"/><line nr="164" mi="0" ci="5" mb="0" cb="0"/><line nr="167" mi="0" ci="6" mb="0" cb="0"/><line nr="168" mi="0" ci="10" mb="0" cb="0"/><line nr="170" mi="0" ci="8" mb="0" cb="2"/><line nr="171" mi="0" ci="20" mb="0" cb="0"/><line nr="175" mi="0" ci="6" mb="0" cb="0"/><line nr="191" mi="0" ci="6" mb="0" cb="0"/><line nr="193" mi="0" ci="8" mb="0" cb="2"/><line nr="194" mi="0" ci="19" mb="0" cb="0"/><line nr="198" mi="0" ci="2" mb="0" cb="0"/><line nr="209" mi="0" ci="3" mb="0" cb="2"/><line nr="210" mi="0" ci="5" mb="0" cb="0"/><line nr="213" mi="0" ci="3" mb="0" cb="0"/><line nr="223" mi="0" ci="3" mb="0" cb="2"/><line nr="224" mi="0" ci="5" mb="0" cb="0"/><line nr="227" mi="0" ci="8" mb="0" cb="0"/><line nr="240" mi="0" ci="3" mb="0" cb="2"/><line nr="241" mi="0" ci="5" mb="0" cb="0"/><line nr="243" mi="0" ci="4" mb="0" cb="2"/><line nr="244" mi="0" ci="5" mb="0" cb="0"/><line nr="247" mi="0" ci="3" mb="0" cb="0"/><line nr="250" mi="0" ci="10" mb="0" cb="0"/><line nr="251" mi="0" ci="11" mb="0" cb="0"/><line nr="253" mi="0" ci="4" mb="0" cb="0"/><line nr="254" mi="0" ci="1" mb="0" cb="0"/><line nr="258" mi="0" ci="5" mb="0" cb="0"/><line nr="262" mi="1" ci="8" mb="1" cb="1"/><line nr="265" mi="0" ci="6" mb="2" cb="2"/><line nr="266" mi="0" ci="5" mb="0" cb="0"/><line nr="267" mi="0" ci="7" mb="0" cb="0"/><line nr="268" mi="0" ci="9" mb="0" cb="0"/><line nr="270" mi="0" ci="9" mb="0" cb="2"/><line nr="271" mi="0" ci="10" mb="0" cb="0"/><line nr="273" mi="0" ci="7" mb="0" cb="2"/><line nr="274" mi="0" ci="5" mb="0" cb="0"/><line nr="278" mi="0" ci="5" mb="0" cb="0"/><line nr="280" mi="0" ci="1" mb="0" cb="0"/><line nr="291" mi="0" ci="4" mb="0" cb="0"/><line nr="302" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1" covered="523"/><counter type="BRANCH" missed="3" covered="23"/><counter type="LINE" missed="0" covered="81"/><counter type="COMPLEXITY" missed="3" covered="24"/><counter type="METHOD" missed="0" covered="14"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ClassifierTags.java"><line nr="3" mi="0" ci="3" mb="0" cb="0"/><line nr="4" mi="0" ci="30" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="24" covered="1011"/><counter type="BRANCH" missed="5" covered="53"/><counter type="LINE" missed="4" covered="175"/><counter type="COMPLEXITY" missed="8" covered="54"/><counter type="METHOD" missed="3" covered="30"/><counter type="CLASS" missed="0" covered="5"/></package><counter type="INSTRUCTION" missed="691" covered="7120"/><counter type="BRANCH" missed="100" covered="454"/><counter type="LINE" missed="154" covered="1356"/><counter type="COMPLEXITY" missed="139" covered="402"/><counter type="METHOD" missed="53" covered="211"/><counter type="CLASS" missed="1" covered="46"/></report>